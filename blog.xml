<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lawrence Wu</title>
<link>https://lawwu.github.io/blog.html/blog.html</link>
<atom:link href="https://lawwu.github.io/blog.html/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Lawrence Wu&#39;s personal website</description>
<generator>quarto-1.7.33</generator>
<lastBuildDate>Thu, 21 Aug 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Why Companies Should Open Source and Host Their Own MCP Servers</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-08-21-open-source-mcp-servers/</link>
  <description><![CDATA[ 




<p><a href="https://github.com/modelcontextprotocol/modelcontextprotocol"><strong>Model Context Protocol (MCP)</strong></a> has quickly become a standard interface for how agents and LLM-powered clients interact with tools and APIs. What’s exciting is that some companies are already hosting <strong>public-facing MCP servers</strong> with authorization. For example, Atlassian provides one here: <a href="https://support.atlassian.com/rovo/docs/getting-started-with-the-atlassian-remote-mcp-server/">Getting Started with the Atlassian Remote MCP Server</a>. Their MCP server lives at: <a href="https://mcp.atlassian.com/v1/sse">https://mcp.atlassian.com/v1/sse</a>.</p>
<p>This means customers can simply plug in that URL, add their authentication credentials, and instantly connect <strong>any MCP client</strong>—whether that’s VS Code, Windsurf, ChatGPT (<a href="https://platform.openai.com/docs/guides/tools-remote-mcp">directly now in their Responses API</a>, <a href="https://docs.anthropic.com/en/docs/claude-code/mcp">Claude Code</a>), or agent frameworks like <a href="https://github.com/langchain-ai/langgraph">LangGraph</a> and <a href="https://github.com/google/adk-python">ADK</a>. Users don’t have to worry about deploying or managing their own MCP instance. Users also do not need to rely on companies to build agents or AI applications for their services. Users can go ahead and use their LLM or AI tool of choice and plug in these remote MCP servers to build their own agents and AI applications.</p>
<p>That’s a powerful model—and one that more companies should follow.</p>
<hr>
<section id="why-this-matters-for-companies" class="level2">
<h2 class="anchored" data-anchor-id="why-this-matters-for-companies">Why This Matters for Companies</h2>
<p>Each company has an opportunity to be forward-leaning and recognized as an <strong>AI-first company</strong> in how they adopt and expose MCP internally and externally.</p>
<p>Right now, very few companies are both:</p>
<ul>
<li><strong>Open sourcing their MCP Server code</strong>, and<br>
</li>
<li><strong>Hosting public remote MCP servers</strong>.</li>
</ul>
<p>I think companies should do both. Here’s how.</p>
<hr>
</section>
<section id="recommended-next-steps" class="level2">
<h2 class="anchored" data-anchor-id="recommended-next-steps">Recommended Next Steps</h2>
<section id="identify-endpoints-and-workflows-to-expose-as-mcp-tools" class="level3">
<h3 class="anchored" data-anchor-id="identify-endpoints-and-workflows-to-expose-as-mcp-tools">1. Identify Endpoints and Workflows to Expose as MCP Tools</h3>
<p>Not every REST API makes a good MCP tool. Instead of exposing every single endpoint, you should focus on <strong>common workflows</strong> that agents will use.</p>
<ul>
<li><p>Example: When I built a Python SDK for the Lightcast API, a frequent operation was normalizing job titles and retrieving related skills. Doing this directly required <em>three</em> separate API calls (normalize_title, map normalized title to a Lightcast Specialized Occupation and get related skills to that Lightcast Specialized Occupation). Instead, I created a <strong>dedicated tool/API</strong> that bundled those calls together—much more natural for an agent.</p></li>
<li><p>Jeremiah Lowin (creator of FastMCP) describes this well in <a href="https://www.jlowin.dev/blog/stop-converting-rest-apis-to-mcp">Stop Converting REST APIs to MCP</a>:<br>
&gt; <em>“An API that is ‘sophisticated’ for a human is one with rich, composable, atomic parts. An API that is sophisticated for an agent is one that is ruthlessly curated and minimalist.”</em></p></li>
</ul>
<p>You should design with the agent in mind. That might mean rethinking data formats (YAML is often better than JSON) or collapsing multi-step operations into a single MCP tool.</p>
<hr>
</section>
<section id="build-the-api-client-mcp-server-and-tools" class="level3">
<h3 class="anchored" data-anchor-id="build-the-api-client-mcp-server-and-tools">2. Build the API Client, MCP Server, and Tools</h3>
<p>The typical stack looks like this:</p>
<ul>
<li><strong>API Client</strong>: Handles authentication and connectivity to your company’s APIs.<br>
</li>
<li><strong>MCP Server</strong>: Implements the MCP protocol on top of that client.</li>
</ul>
<p>All of the MCP servers I’ve written so far are in Python, using <a href="https://github.com/jlowin/fastmcp">FastMCP</a> as the framework. The pattern is straightforward:</p>
<ol type="1">
<li>Write an API Client.<br>
</li>
<li>Layer the MCP protocol logic on top.</li>
</ol>
<p>You can use agentic coding tools like Claude Code to quickly spin these up.</p>
<hr>
</section>
<section id="deploy-the-mcp-server-publicly" class="level3">
<h3 class="anchored" data-anchor-id="deploy-the-mcp-server-publicly">3. Deploy the MCP Server Publicly</h3>
<p>There are more options than ever for running lightweight public services:</p>
<ul>
<li><a href="https://cloud.google.com/blog/topics/developers-practitioners/build-and-deploy-a-remote-mcp-server-to-google-cloud-run-in-under-10-minutes">Google Cloud Run</a><br>
</li>
<li><a href="https://blog.cloudflare.com/remote-model-context-protocol-servers-mcp/">Cloudflare Workers</a></li>
</ul>
<p>Each of these can make your MCP server accessible with minimal operational overhead.</p>
<hr>
</section>
<section id="provide-example-clients-and-agents" class="level3">
<h3 class="anchored" data-anchor-id="provide-example-clients-and-agents">4. Provide Example Clients and Agents</h3>
<p>To encourage adoption, publish sample implementations that connect to the server. These could be:</p>
<ul>
<li>VS Code extensions<br>
</li>
<li>LangGraph or ADK agents<br>
</li>
<li>Example workflows in ChatGPT or Claude</li>
</ul>
<p>This lowers the barrier for customers to experiment quickly.</p>
<hr>
</section>
<section id="open-source-the-mcp-server" class="level3">
<h3 class="anchored" data-anchor-id="open-source-the-mcp-server">5. Open Source the MCP Server</h3>
<p>Some of the most popular MCP servers today aren’t even official. For example, the <strong><a href="https://github.com/sooperset/mcp-atlassian">mcp-atlassian</a></strong> project is developed by an open-source developer <a href="https://github.com/sooperset">Hyeonsoo Lee</a> and not by Atlassian. That’s a missed opportunity.</p>
<p>If companies open source their MCP servers, the benefits are significant:</p>
<ul>
<li>Community contributions and bug fixes<br>
</li>
<li>Customer self-hosting when desired<br>
</li>
<li>Stronger trust and transparency</li>
</ul>
<hr>
</section>
<section id="lightcast-mcp-server" class="level3">
<h3 class="anchored" data-anchor-id="lightcast-mcp-server">6. Lightcast MCP Server</h3>
<p>I’ve interacted with the Lightcast API a fair amount and open-sourced an MCP Server for Lightcast called <a href="https://github.com/lawwu/mcp-lightcast">mcp-lightcast</a>.</p>
</section>
</section>
<section id="popular-remote-mcp-servers" class="level2">
<h2 class="anchored" data-anchor-id="popular-remote-mcp-servers">Popular Remote MCP Servers</h2>
<p>Several companies are already providing remote MCP servers that you can connect to directly. Here are some notable examples from the <a href="https://docs.anthropic.com/en/docs/claude-code/mcp">Claude Code MCP docs</a>:</p>
<section id="adding-remote-servers-to-claude-code" class="level3">
<h3 class="anchored" data-anchor-id="adding-remote-servers-to-claude-code">Adding Remote Servers to Claude Code</h3>
<p>You can easily add these servers to Claude Code using the CLI. Note some of these are not remote MCP servers. Here are the exact commands:</p>
<section id="development-testing-tools" class="level4">
<h4 class="anchored" data-anchor-id="development-testing-tools">Development &amp; Testing Tools</h4>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http sentry https://mcp.sentry.dev/mcp</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http socket https://mcp.socket.dev/</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http hugging-face https://huggingface.co/mcp</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http jam https://mcp.jam.dev/mcp</span></code></pre></div>
</section>
<section id="project-management" class="level4">
<h4 class="anchored" data-anchor-id="project-management">Project Management</h4>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse asana https://mcp.asana.com/sse</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse atlassian https://mcp.atlassian.com/v1/sse</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add clickup <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--env</span> CLICKUP_API_KEY=YOUR_KEY <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--env</span> CLICKUP_TEAM_ID=YOUR_ID <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> npx <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> @hauptsache.net/clickup-mcp</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http intercom https://mcp.intercom.com/mcp</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse linear https://mcp.linear.app/sse</span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http notion https://mcp.notion.com/mcp</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http box https://mcp.box.com/</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http fireflies https://api.fireflies.ai/mcp</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse monday https://mcp.monday.com/sse</span></code></pre></div>
</section>
<section id="databases" class="level4">
<h4 class="anchored" data-anchor-id="databases">Databases</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add airtable <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--env</span> AIRTABLE_API_KEY=YOUR_KEY <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> npx <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> airtable-mcp-server</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http daloopa https://mcp.daloopa.com/server/mcp</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http hubspot https://mcp.hubspot.com/anthropic</span></code></pre></div>
</section>
<section id="payments-commerce" class="level4">
<h4 class="anchored" data-anchor-id="payments-commerce">Payments &amp; Commerce</h4>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http paypal https://mcp.paypal.com/mcp</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse plaid https://api.dashboard.plaid.com/mcp/sse</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse square https://mcp.squareup.com/sse</span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http stripe https://mcp.stripe.com</span></code></pre></div>
</section>
<section id="design" class="level4">
<h4 class="anchored" data-anchor-id="design">Design</h4>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http figma-dev-mode-mcp-server http://127.0.0.1:3845/mcp</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> sse invideo https://mcp.invideo.io/sse</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http canva https://mcp.canva.com/mcp</span></code></pre></div>
</section>
<section id="infrastructure-devops" class="level4">
<h4 class="anchored" data-anchor-id="infrastructure-devops">Infrastructure / DevOps</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http netlify https://netlify-mcp.netlify.app/mcp</span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http stytch http://mcp.stytch.dev/mcp</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> mcp add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--transport</span> http vercel https://mcp.vercel.com/</span></code></pre></div>
<p>For more details, see the <a href="https://docs.anthropic.com/en/docs/claude-code/mcp">Claude Code MCP documentation</a>.</p>
<hr>


</section>
</section>
</section>

 ]]></description>
  <category>AI</category>
  <category>MCP</category>
  <category>LLMs</category>
  <category>Claude Code</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-08-21-open-source-mcp-servers/</guid>
  <pubDate>Thu, 21 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Summaries of Talks from Code with Claude Conference 2025</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-08-14-claude-code-conference-summary/</link>
  <description><![CDATA[ 




<section id="code-with-claude-conference-2025-key-insights-summaries" class="level1">
<h1>Code with Claude Conference 2025: Key Insights &amp; Summaries</h1>
<p>Claude had a <a href="https://www.anthropic.com/events/code-with-claude-2025">conference</a> recently all about Claude Code. I transcribed all of the talks using <a href="https://github.com/lawwu/transcripts">transcripts</a> and hosted it <a href="https://lawwu.github.io/transcripts/index_claude_code_conference.html">here</a>. The YouTube playlist is <a href="https://www.youtube.com/playlist?list=PLf2m23nhTg1P5BsOHUOXyQz5RhfUSSVUi">here</a>. Below are summaries of the talks.</p>
<section id="overall-summary" class="level2">
<h2 class="anchored" data-anchor-id="overall-summary">Overall Summary</h2>
<p>The Claude Code Conference 2025 showcased groundbreaking developments in AI-powered development tools, enterprise AI implementations, and the future of human-AI collaboration in software engineering. The conference highlighted the evolution from simple AI assistants to sophisticated autonomous agents capable of complex reasoning and long-term task execution.</p>
<p>Key themes included the introduction of Claude 4’s extended thinking capabilities, the emergence of Model Context Protocol (MCP) as the universal standard for AI-tool integration, and real-world enterprise implementations demonstrating significant productivity gains. The conference also emphasized the importance of proper prompting techniques, agent evaluation frameworks, and the shift toward “agentic” development paradigms.</p>
</section>
<section id="top-10-key-takeaways-for-developers" class="level2">
<h2 class="anchored" data-anchor-id="top-10-key-takeaways-for-developers">Top 10 Key Takeaways for Developers</h2>
<ol type="1">
<li><p><strong>Start with codebase Q&amp;A before writing code</strong> - This approach reduces onboarding time from 2-3 weeks to 2-3 days and helps understand existing patterns and architecture.</p></li>
<li><p><strong>Invest in Claude.md configuration files</strong> - These provide persistent context and coding standards across sessions, dramatically improving AI performance on your specific projects.</p></li>
<li><p><strong>Embrace parallel tool calling and extended thinking</strong> - Claude 4’s new capabilities enable more efficient workflows and better planning between actions.</p></li>
<li><p><strong>Use MCP servers as the standard for AI-tool integration</strong> - MCP is becoming the “USB-C of LLMs” and provides a standardized way to connect AI to external systems.</p></li>
<li><p><strong>Focus on tool design over complex prompting</strong> - Clear tool descriptions and proper interfaces are more important than elaborate prompt engineering for agent performance.</p></li>
<li><p><strong>Implement proper evaluation frameworks</strong> - Use realistic tasks and LLM-as-judge approaches rather than relying solely on benchmarks like SweeBench.</p></li>
<li><p><strong>Think beyond traditional code review for AI-generated code</strong> - Design verifiable systems with clear inputs/outputs rather than trying to review every line of AI-generated code.</p></li>
<li><p><strong>Leverage the model-tool binding principle</strong> - The best performing agents use foundation models specifically trained on the tools they use (like Sonnet with bash commands).</p></li>
<li><p><strong>Build composable, multi-step agent systems</strong> - Enterprise reliability comes from breaking complex tasks into manageable, evaluable components with clear feedback loops.</p></li>
<li><p><strong>Prepare for rapid capability growth</strong> - AI task capability is doubling every 7 months, requiring adaptive development approaches and architectural thinking.</p></li>
</ol>
<hr>
</section>
<section id="claude-plays-pokemon-tool-use-and-agent-improvements" class="level2">
<h2 class="anchored" data-anchor-id="claude-plays-pokemon-tool-use-and-agent-improvements">Claude Plays Pokemon: Tool Use and Agent Improvements</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/0XUzn-DEoY8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><strong>Speaker:</strong> David (Creator of Claude Plays Pokemon, Anthropic’s PodAI team)</p>
<section id="key-points-and-insights" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights">Key Points and Insights</h3>
<ul>
<li><strong>Extended thinking between tool calls</strong>: Claude 4 introduces extended thinking between tool calls, allowing models to plan, reflect, and question assumptions before acting</li>
<li><strong>Parallel tool calling capability</strong>: Models can now make multiple tool calls simultaneously, improving efficiency and reducing latency</li>
<li><strong>Tool use evolution</strong>: From simple calculator aids to driving complex agentic workflows with plan-act-learn loops</li>
<li><strong>Scale of tool handling</strong>: Models can now handle 50-100 tools effectively with proper tool design and clear descriptions</li>
<li><strong>Real-world validation</strong>: Claude 4 Opus successfully executed a 24-hour Pokemon catching session, demonstrating improved long-term planning</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers">Main Takeaways for Developers/Users</h3>
<ul>
<li>Focus on tool design and clear descriptions rather than complex prompting</li>
<li>Extended thinking mode helps agents recover from errors and adapt plans dynamically</li>
<li>Parallel tool calling significantly reduces development time by eliminating sequential tool call overhead</li>
<li>Models are becoming more capable agents that can work over longer time horizons with less human intervention</li>
</ul>
<hr>
</section>
</section>
<section id="mastering-claude-code-in-30-minutes" class="level2">
<h2 class="anchored" data-anchor-id="mastering-claude-code-in-30-minutes">Mastering Claude Code in 30 Minutes</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/6eBSHbLKuN0" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><strong>Speaker:</strong> Boris (Member of Technical Staff at Anthropic, Creator of Claude Code)</p>
<section id="key-points-and-insights-1" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-1">Key Points and Insights</h3>
<ul>
<li><strong>Codebase Q&amp;A first</strong>: Start with codebase Q&amp;A before writing code - reduces onboarding from 2-3 weeks to 2-3 days at Anthropic</li>
<li><strong>Full multimodal support</strong>: Claude Code is fully multimodal and works across all IDEs without requiring workflow changes</li>
<li><strong>Context is king</strong>: Use claude.md files, slash commands, and MCP servers to provide relevant project information</li>
<li><strong>Hierarchical configuration</strong>: Configuration system allows enterprise policies, project configs, and personal preferences</li>
<li><strong>SDK capabilities</strong>: Claude Code SDK enables building agents and automation pipelines with Unix-style utility approach</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-1" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-1">Main Takeaways for Developers/Users</h3>
<ul>
<li>Begin every new project/codebase with Q&amp;A to understand structure and patterns</li>
<li>Invest time in configuring claude.md and context files for dramatic performance improvements</li>
<li>Use iterative workflows with verification tools (testing, screenshots) for better results</li>
<li>Leverage the SDK for CI/CD pipelines, incident response, and automated workflows</li>
</ul>
<hr>
</section>
</section>
<section id="spotlight-on-databricks-enterprise-ai-implementation" class="level2">
<h2 class="anchored" data-anchor-id="spotlight-on-databricks-enterprise-ai-implementation">Spotlight on Databricks: Enterprise AI Implementation</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/67a5yrKH-nI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><strong>Speaker:</strong> Craig (Product Management Leader at Databricks, former Google Vertex AI/AWS SageMaker)</p>
<section id="key-points-and-insights-2" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-2">Key Points and Insights</h3>
<ul>
<li><strong>Enterprise governance requirements</strong>: Enterprise AI requires governance and evaluation for production deployment in high-risk environments</li>
<li><strong>Multi-step agent superiority</strong>: Multi-step agentic systems outperform simple input-output models (Berkeley research validation)</li>
<li><strong>Tool calling excellence</strong>: Claude’s superior tool calling enables deterministic systems using probabilistic backends</li>
<li><strong>Real customer results</strong>: FactSet improved accuracy from 59% to 85% and reduced latency from 15s to 6s by decomposing prompts into multi-step workflows</li>
<li><strong>Productivity transformation</strong>: Claude integration reduces analyst questionnaire work from hundreds of hours to editing near-final drafts</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-2" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-2">Main Takeaways for Developers/Users</h3>
<ul>
<li>Build composable, multi-node agent systems for enterprise reliability</li>
<li>Implement rigorous evaluation frameworks to measure and improve system performance</li>
<li>Use Claude’s governance features to control data, model, and tool access at granular levels</li>
<li>Focus on connecting AI systems deeply with enterprise data infrastructure</li>
</ul>
<hr>
</section>
</section>
<section id="building-ai-agents-with-claude-in-amazon-bedrock" class="level2">
<h2 class="anchored" data-anchor-id="building-ai-agents-with-claude-in-amazon-bedrock">Building AI Agents with Claude in Amazon Bedrock</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/8gTpgWru0Wg" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><strong>Speakers:</strong> Dewan Lightfoot, Banjo Abiyami, Suman Devanath (AWS Developer Advocates)</p>
<section id="key-points-and-insights-3" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-3">Key Points and Insights</h3>
<ul>
<li><strong>Strands Agent SDK simplicity</strong>: Simplifies agent building to just three components: models, tools, and prompts</li>
<li><strong>Claude 3.5 Sonnet default</strong>: Default model with built-in tools like HTTP requests requiring minimal setup</li>
<li><strong>MCP server integration</strong>: Provides structured way to connect LLMs to external APIs and documentation</li>
<li><strong>Live demo success</strong>: Showed creating weather agents, AWS documentation agents, and architecture diagram generators</li>
<li><strong>Seamless Bedrock integration</strong>: Claude Code integration with Bedrock enables development without requiring separate Anthropic API keys</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-3" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-3">Main Takeaways for Developers/Users</h3>
<ul>
<li>Use Strands for rapid prototyping with minimal boilerplate code</li>
<li>MCP servers are the “USB-C of LLMs” for connecting to external systems and data</li>
<li>AWS provides comprehensive MCP server ecosystem for cloud services integration</li>
<li>Agents work best when given specific context and clear tool definitions</li>
</ul>
<hr>
</section>
</section>
<section id="startups-building-new-products-with-claude" class="level2">
<h2 class="anchored" data-anchor-id="startups-building-new-products-with-claude">Startups Building New Products with Claude</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/91Haz1CRoxY" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><strong>Speakers:</strong> Multiple startup founders (Tempo Labs, Zen, Gamma, Bitto, Refusion, Create)</p>
<section id="key-points-and-insights-4" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-4">Key Points and Insights</h3>
<ul>
<li><strong>Tempo Labs democratization</strong>: “Cursor for PMs and designers” - enables non-engineers to generate 10-15% of frontend PRs directly</li>
<li><strong>Gamma model upgrade impact</strong>: Sonnet 3.5 to 3.7 upgrade with web search improved user satisfaction metrics by 8%</li>
<li><strong>Bitto code review transformation</strong>: AI code review platform reducing PR closure time from 50 hours to 5 hours using Claude’s reasoning capabilities</li>
<li><strong>Refusion creative applications</strong>: Claude powers “Ghostwriter” for music lyric generation, used tens of millions of times</li>
<li><strong>Create democratized app development</strong>: Text-to-app builder enabling non-technical users to create full mobile apps end-to-end</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-4" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-4">Main Takeaways for Developers/Users</h3>
<ul>
<li>Claude enables product categories that democratize technical capabilities to non-engineers</li>
<li>Model upgrades (especially with new capabilities like web search) can dramatically impact user metrics</li>
<li>Successful products leverage Claude’s reasoning for domain-specific applications (code review, music, design)</li>
<li>Integration of frontend design tools with Claude enables visual, collaborative development workflows</li>
</ul>
<hr>
</section>
</section>
<section id="spotlight-on-canva-democratizing-interactive-prototyping" class="level2">
<h2 class="anchored" data-anchor-id="spotlight-on-canva-democratizing-interactive-prototyping">Spotlight on Canva: Democratizing Interactive Prototyping</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Ac4LiuoJT20" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Danny Wu (Head of AI Products at Canva)</p>
<section id="key-points-and-insights-5" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-5">Key Points and Insights</h3>
<ul>
<li><strong>Canva Code democratization</strong>: Built to democratize interactive prototyping using Claude, allowing non-technical users to create apps with simple prompts</li>
<li><strong>Functional prototype strategy</strong>: Used functional prototypes built with Claude to test concepts and gather user feedback before integrating into the main codebase</li>
<li><strong>Model selection beyond metrics</strong>: Chose Claude’s models for their ability to handle under-specified prompts, create beautiful web designs, and generate quality SVGs and animations</li>
<li><strong>User-focused targeting</strong>: Focused on targeting non-technical users first, then scaling up to more sophisticated functionality</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-5" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-5">Main Takeaways for Developers/Users</h3>
<ul>
<li>Think beyond traditional evals when choosing models - consider complete user experience including design quality and creativity</li>
<li>Build functional prototypes outside main codebase to enable faster experimentation in AI product development</li>
<li>Focus on your unique strengths and target specific user segments rather than trying to serve everyone</li>
<li>Communicate AI limitations clearly to users to prevent confusion and set proper expectations</li>
</ul>
<hr>
</section>
</section>
<section id="building-headless-automation-with-claude-code" class="level2">
<h2 class="anchored" data-anchor-id="building-headless-automation-with-claude-code">Building Headless Automation with Claude Code</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/dRsjO-88nBs" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Sirbit Asaria (Engineer on Claude Code team)</p>
<section id="key-points-and-insights-6" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-6">Key Points and Insights</h3>
<ul>
<li><strong>SDK programmatic access</strong>: Claude Code SDK enables programmatic access to Claude Code agent in headless mode, opening new automation possibilities</li>
<li><strong>Unix tool philosophy</strong>: Can be used as Unix tool, integrated into CI/CD pipelines, and for building custom chatbots or remote coding environments</li>
<li><strong>Advanced features</strong>: Features structured JSON output, session state management, and permission prompt tools for real-time user interaction</li>
<li><strong>GitHub Actions integration</strong>: Demonstrated GitHub Action built on SDK that can review code, create features, and manage pull requests automatically</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-6" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-6">Main Takeaways for Developers/Users</h3>
<ul>
<li>Claude Code SDK acts as a new primitive for building applications that weren’t possible before</li>
<li>Unix-style tool philosophy makes it pluggable anywhere you can run bash or terminal commands</li>
<li>Structured output and session management enable building interactive user experiences on top of the SDK</li>
<li>GitHub Actions integration shows how to safely automate code review and development workflows</li>
</ul>
<hr>
</section>
</section>
<section id="vibe-coding-in-production" class="level2">
<h2 class="anchored" data-anchor-id="vibe-coding-in-production">Vibe Coding in Production</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/fHWFF_pnqDk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Eric (Researcher at Anthropic focused on coding agents)</p>
<section id="key-points-and-insights-7" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-7">Key Points and Insights</h3>
<ul>
<li><strong>Vibe coding philosophy</strong>: Means fully embracing AI code generation and “forgetting the code exists” while staying focused on product outcomes</li>
<li><strong>AI capability acceleration</strong>: AI task capability is doubling every 7 months, making traditional code review approaches unsustainable for large-scale AI-generated work</li>
<li><strong>Production deployment success</strong>: Successfully deployed 22,000-line AI-generated change to production by focusing on leaf nodes, creating verifiable tests, and acting as Claude’s product manager</li>
<li><strong>Abstraction layer focus</strong>: Key is finding abstraction layers you can verify without understanding implementation details</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-7" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-7">Main Takeaways for Developers/Users</h3>
<ul>
<li>Focus vibe coding on “leaf nodes” in codebase where tech debt won’t impact core architecture</li>
<li>Act as an effective product manager for Claude by providing context, requirements, and guidance</li>
<li>Design systems with verifiable inputs/outputs and stress tests to validate correctness without reading all code</li>
<li>Embrace the exponential growth in AI capabilities rather than trying to review every line of generated code</li>
</ul>
<hr>
</section>
</section>
<section id="claude-code-best-practices" class="level2">
<h2 class="anchored" data-anchor-id="claude-code-best-practices">Claude Code Best Practices</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/gv0WHhKelSE" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Cal (Applied AI team at Anthropic, core Claude Code contributor)</p>
<section id="key-points-and-insights-8" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-8">Key Points and Insights</h3>
<ul>
<li><strong>Agentic search approach</strong>: Claude Code works as a pure agent using agentic search (glob, grep, find) rather than code indexing to understand codebases</li>
<li><strong>Claude.md importance</strong>: Claude.md files are essential for sharing context and instructions across sessions and team members</li>
<li><strong>Workflow optimization</strong>: Permission management, CLI tool integration, and context management (using /clear or /compact) are crucial for effective workflows</li>
<li><strong>New feature releases</strong>: Features include model switching, thinking between tool calls, and improved VS Code/JetBrains integrations</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-8" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-8">Main Takeaways for Developers/Users</h3>
<ul>
<li>Use Claude.md files in projects to provide persistent context and coding standards for Claude</li>
<li>Master permission management and auto-accept modes to speed up workflow without sacrificing safety</li>
<li>Leverage Claude’s terminal expertise by integrating CLI tools and MCP servers for expanded capabilities</li>
<li>Stay updated with rapid feature releases and experiment with advanced techniques like multi-agent workflows</li>
</ul>
<hr>
</section>
</section>
<section id="mcp-201-advanced-model-context-protocol" class="level2">
<h2 class="anchored" data-anchor-id="mcp-201-advanced-model-context-protocol">MCP 201: Advanced Model Context Protocol</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/HNzH5Us1Rvg" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> David (Member of Technical Staff at Anthropic, co-creator of MCP)</p>
<section id="key-points-and-insights-9" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-9">Key Points and Insights</h3>
<ul>
<li><strong>Five MCP primitives</strong>: Offers 5 primitives beyond basic tool calling: prompts (user-driven templates), resources (application-driven data), tools (model-driven actions), sampling (server requests completion from client), and roots (client context inquiry)</li>
<li><strong>Interaction model clarity</strong>: Defines when to use what: prompts for user-driven interactions, resources for application-driven data access, tools for model-driven actions</li>
<li><strong>Evolution to web-based</strong>: MCP is evolving from local experiences to web-based servers with OAuth 2.1 authorization and streamable HTTP for scaling</li>
<li><strong>Future developments</strong>: Include asynchronous tasks, elicitation (user input requests), official registry, and multi-modality support</li>
<li><strong>Sampling power</strong>: Allows powerful chaining where servers can request model completions without managing API keys, keeping clients in control</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-9" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-9">Main Takeaways for Developers/Users</h3>
<ul>
<li>Use the full power of MCP’s primitives to build richer interactions beyond simple tool calling</li>
<li>Consider the interaction model when designing MCP servers: user-driven vs application-driven vs model-driven</li>
<li>Prepare for web-based MCP servers with proper OAuth implementation for enterprise integration</li>
<li>Future-proof applications by understanding upcoming features like sampling and async task support</li>
</ul>
<hr>
</section>
</section>
<section id="mcp-at-sourcegraph-building-enterprise-coding-agents" class="level2">
<h2 class="anchored" data-anchor-id="mcp-at-sourcegraph-building-enterprise-coding-agents">MCP at Sourcegraph: Building Enterprise Coding Agents</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/j8NlbEWAsmc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Biong (CTO and co-founder of Sourcegraph)</p>
<section id="key-points-and-insights-10" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-10">Key Points and Insights</h3>
<ul>
<li><strong>Three waves of AI architecture</strong>: Evolution through co-pilot era (text completion), RAG chat era, and now the agents era with tool calling and MCP</li>
<li><strong>AMP agent architecture</strong>: Sourcegraph built AMP, a new coding agent from scratch using the “recipe for AI agents”: strong tool-use LLM + MCP + feedback loops + imperative UX</li>
<li><strong>Comprehensive MCP integration</strong>: Spans local tools (Playwright, Postgres) and external services (Linear, Sentry) with secure secret handling via OAuth proxy</li>
<li><strong>Toolmageddon avoidance</strong>: Too many MCP tools can confuse models; focus on three buckets: context finding, feedback provision, and success declaration</li>
<li><strong>Future agent patterns</strong>: Sub-agents and dynamic tool synthesis represent the future, with parallels to early programming language development</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-10" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-10">Main Takeaways for Developers/Users</h3>
<ul>
<li>Rethink application architecture for the agentic era rather than retrofitting existing RAG-chat applications</li>
<li>Focus on feedback loops and design patterns that make agents reliable and self-correcting</li>
<li>Implement secure MCP integration with proper OAuth handling for enterprise environments</li>
<li>Consider sub-agents as tools and prepare for more sophisticated tool composition patterns</li>
</ul>
<hr>
</section>
</section>
<section id="taking-claude-to-the-next-level-claude-4-features" class="level2">
<h2 class="anchored" data-anchor-id="taking-claude-to-the-next-level-claude-4-features">Taking Claude to the Next Level: Claude 4 Features</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/nZCy8E5jlok" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Lisa Crowfoot (Research Product Manager at Anthropic)</p>
<section id="key-points-and-insights-11" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-11">Key Points and Insights</h3>
<ul>
<li><strong>Four major improvements</strong>: Claude 4 (Opus and Sonnet) introduces interleaved thinking and tool use, memory capabilities, complex instruction following, and reduced reward hacking</li>
<li><strong>Memory enables persistence</strong>: Sustained performance over hours, with Claude Opus tracking progress across 64 Pokemon battles (12+ hours of gameplay)</li>
<li><strong>Better instruction following</strong>: Claude 4 models are less “over-eager” by default and better at following complex system prompts (16k+ tokens)</li>
<li><strong>Reduced reward hacking</strong>: 80%+ reduction in reward hacking behavior makes Claude more trustworthy for autonomous tasks</li>
<li><strong>Model specialization</strong>: Opus excels at complex tasks (large codebases, migrations), while Sonnet 4 is optimized for speed and human-in-the-loop scenarios</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-11" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-11">Main Takeaways for Developers/Users</h3>
<ul>
<li>Remove anti-over-eagerness language from prompts when upgrading to Claude 4</li>
<li>Leverage parallel tool calling and specify thinking targets for better agent performance</li>
<li>Use Opus for complex, long-horizon tasks and Sonnet for rapid iteration and human collaboration</li>
<li>Invest in prompt engineering as small changes can significantly impact performance</li>
</ul>
<hr>
</section>
</section>
<section id="building-blocks-for-tomorrows-ai-agents" class="level2">
<h2 class="anchored" data-anchor-id="building-blocks-for-tomorrows-ai-agents">Building Blocks for Tomorrow’s AI Agents</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/oDks2gVHu4k" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Brad Abrams (Product Manager at Anthropic)</p>
<section id="key-points-and-insights-12" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-12">Key Points and Insights</h3>
<ul>
<li><strong>Three pillars for agents</strong>: Build (Claude 4 + code execution), Connect (web search + MCP connector), and Optimize (caching + batch + priority tiers)</li>
<li><strong>Code execution capabilities</strong>: Provides dedicated containers per organization with streaming results, enabling complex data analysis and computational tasks</li>
<li><strong>Agentic web search</strong>: Delivers agentic, multi-turn search with automatic citation and domain restriction capabilities</li>
<li><strong>MCP Connector enterprise</strong>: Enables secure OAuth-based integration with remote MCP servers (Asana, Zapier, CloudFlare-hosted services)</li>
<li><strong>Optimization features</strong>: 1-hour prompt caching, batch API as async agentic API, and priority tier for dedicated capacity</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-12" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-12">Main Takeaways for Developers/Users</h3>
<ul>
<li>Combine code execution with web search for powerful analytical capabilities</li>
<li>Leverage remote MCP servers with OAuth for enterprise-grade integrations</li>
<li>Use batch processing as an async agentic API with 50% cost savings</li>
<li>Take advantage of extended prompt caching (1 hour) for long-running agent sessions</li>
</ul>
<hr>
</section>
</section>
<section id="how-students-build-with-claude" class="level2">
<h2 class="anchored" data-anchor-id="how-students-build-with-claude">How Students Build with Claude</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/PHuXXeadV_g" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speakers:</strong> Greg (Student Outreach Lead), Isabel (Stanford), Mason (UC Berkeley), Rohil (UC Berkeley), Daniel (USC)</p>
<section id="key-points-and-insights-13" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-13">Key Points and Insights</h3>
<ul>
<li><strong>Nuclear research breakthrough</strong>: Isabel used Claude to build nuclear weapon detection simulations using CERN’s Geant4 software, enabling graduate-level research as an undergraduate</li>
<li><strong>Top-down learning approach</strong>: Mason learned coding through Claude, building CalGBT and codebase visualization tools without traditional CS education</li>
<li><strong>Innovative role reversal</strong>: Rohil created SideQuest, flipping the script to have AI agents hire humans for physical tasks with real-time video verification</li>
<li><strong>Multi-agent systems</strong>: Daniel built Claude Cortex, a multi-agent system that dynamically creates specialized agents for complex decision-making scenarios</li>
<li><strong>Rapid iteration cycles</strong>: Students demonstrate rapid prototyping cycles (1 day to 1 week) and focus on user value over technical perfection</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-13" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-13">Main Takeaways for Developers/Users</h3>
<ul>
<li>No learning curve is too steep with AI assistance - tackle existential problems and complex domains</li>
<li>Focus on iterative workflows with AI rather than trying to build perfect systems upfront</li>
<li>Think of AI as infrastructure and system architecture rather than just feature development</li>
<li>Emphasize practical outcomes and user impact over technical sophistication or completeness</li>
</ul>
<hr>
</section>
</section>
<section id="building-ai-agents-with-claude-in-google-clouds-vertex-ai" class="level2">
<h2 class="anchored" data-anchor-id="building-ai-agents-with-claude-in-google-clouds-vertex-ai">Building AI Agents with Claude in Google Cloud’s Vertex AI</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/TUysIAtxyrQ" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Ivan Nardini, Developer Advocate at Google Cloud</p>
<section id="key-points-and-insights-14" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-14">Key Points and Insights</h3>
<ul>
<li><strong>Four-component agent stack</strong>: Google Cloud’s agent stack includes Agent Development Kit (ADK), MCP integration, Vertex AI Agent Engine, and Agent-to-Agent Protocol</li>
<li><strong>ADK developer-friendly</strong>: Open-source, developer-friendly framework for building, evaluating, and deploying agents at scale</li>
<li><strong>Standardized MCP integration</strong>: Allows standardized communication between agents and tools</li>
<li><strong>Managed platform</strong>: Vertex AI Agent Engine provides managed platform for deploying and scaling agents in production with built-in monitoring and governance</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-14" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-14">Main Takeaways for Developers/Users</h3>
<ul>
<li>Use ADK for rapid agent development with minimal code (just 3 files needed: agent.py, environment variables, and init file)</li>
<li>Leverage MCP servers to avoid reinventing tools - any existing MCP server can be integrated with just 2 lines of code</li>
<li>Deploy agents to production easily using Vertex AI Agent Engine for automatic scaling and operational management</li>
<li>Focus on building agent logic rather than infrastructure concerns</li>
</ul>
<hr>
</section>
</section>
<section id="spotlight-on-manus-building-hands-for-ai-models" class="level2">
<h2 class="anchored" data-anchor-id="spotlight-on-manus-building-hands-for-ai-models">Spotlight on Manus: Building Hands for AI Models</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/UjboGsztHd8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Tao (HighCloud), Co-founder and CPO of Manus AI</p>
<section id="key-points-and-insights-15" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-15">Key Points and Insights</h3>
<ul>
<li><strong>AI hands concept</strong>: Manus provides AI models with “hands” through virtual machines with full access to browsers, terminals, VS Code, and file systems</li>
<li><strong>Less structure, more intelligence</strong>: Philosophy of minimal predefined workflows, maximum model autonomy</li>
<li><strong>High engagement metrics</strong>: Users can achieve 2+ hours of daily GPU consumption, with goal to reach 24-hour influence per user</li>
<li><strong>Inspiration from non-coders</strong>: Inspired by observing non-coders using Cursor to solve daily tasks without caring about the underlying code</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-15" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-15">Main Takeaways for Developers/Users</h3>
<ul>
<li>Agent frameworks should provide computing environments rather than just chat interfaces</li>
<li>Cloud-based execution enables fire-and-forget task assignment without requiring user attention</li>
<li>Teaching agents through personal knowledge systems is more effective than hard-coded workflows</li>
<li>Focus on giving models the right tools and context rather than micromanaging their decision process</li>
</ul>
<hr>
</section>
</section>
<section id="spotlight-on-shopify-structured-workflow-orchestration-with-roast" class="level2">
<h2 class="anchored" data-anchor-id="spotlight-on-shopify-structured-workflow-orchestration-with-roast">Spotlight on Shopify: Structured Workflow Orchestration with Roast</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/xlEQ6Y3WNNI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speaker:</strong> Obi Fernandez, Principal Engineer, Shopify’s Augmented Engineering Group</p>
<section id="key-points-and-insights-16" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-16">Key Points and Insights</h3>
<ul>
<li><strong>Complementary approaches</strong>: Two approaches: agentic tools (for exploratory/ambiguous tasks) vs structured workflows (for predictable, repeatable tasks)</li>
<li><strong>Roast framework</strong>: <a href="https://github.com/Shopify/roast">Roast</a>: Open-source Ruby framework for orchestrating deterministic workflows with AI components</li>
<li><strong>Powerful combinations</strong>: Interleaving structured workflows with Claude Code creates powerful combinations for large-scale code transformations</li>
<li><strong>Scale at Shopify</strong>: 500+ daily active users of Claude Code with 250k requests/second at peak</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-16" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-16">Main Takeaways for Developers/Users</h3>
<ul>
<li>Use structured workflows for tasks like legacy migrations, test generation, and systematic refactoring</li>
<li>Combine deterministic steps with non-deterministic AI reasoning for optimal results</li>
<li>Roast provides session saving, function caching, and convention-oriented development</li>
<li>Scale AI applications by minimizing instructions per step and breaking complex tasks into manageable components</li>
</ul>
<hr>
</section>
</section>
<section id="prompting-for-agents" class="level2">
<h2 class="anchored" data-anchor-id="prompting-for-agents">Prompting for Agents</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/XSZP9GhhuAc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speakers:</strong> Hannah and Jeremy from Anthropic’s Applied AI team</p>
<section id="key-points-and-insights-17" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-17">Key Points and Insights</h3>
<ul>
<li><strong>Agent definition</strong>: Agents are “models using tools in a loop” - best for complex, valuable tasks with unclear solution paths</li>
<li><strong>Think like your agents</strong>: Simulate their environment and tool responses to understand their perspective</li>
<li><strong>Provide guidance</strong>: Reasonable heuristics and budgets (e.g., “use under 5 tool calls for simple queries”)</li>
<li><strong>Interleaved thinking</strong>: Guide the thinking process and use interleaved thinking between tool calls for better reasoning</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-17" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-17">Main Takeaways for Developers/Users</h3>
<ul>
<li>Start with simple prompts and iterate based on edge cases and failures</li>
<li>Use structured evals with small sample sizes initially - focus on realistic tasks over arbitrary benchmarks</li>
<li>Tool selection is crucial - provide clear guidance on which tools to use in different contexts</li>
<li>LLM-as-judge with rubrics is effective for evaluating agent outputs</li>
<li>Context window management through compaction, external files, or sub-agents extends agent capabilities</li>
</ul>
<hr>
</section>
</section>
<section id="prompting-101-fundamentals-of-effective-ai-communication" class="level2">
<h2 class="anchored" data-anchor-id="prompting-101-fundamentals-of-effective-ai-communication">Prompting 101: Fundamentals of Effective AI Communication</h2>
<p><strong>Watch:</strong> </p><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/ysPbXH0LpIE" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p><strong>Speakers:</strong> Hannah and Christian from Anthropic’s Applied AI team</p>
<section id="key-points-and-insights-18" class="level3">
<h3 class="anchored" data-anchor-id="key-points-and-insights-18">Key Points and Insights</h3>
<ul>
<li><strong>Programming in natural language</strong>: Prompt engineering is “programming in natural language” requiring clear structure and organization</li>
<li><strong>Recommended structure</strong>: Task context → content → detailed instructions → examples → reminders → output formatting</li>
<li><strong>XML tags and delimiters</strong>: Use XML tags and delimiters to help Claude understand and organize information</li>
<li><strong>Order of analysis matters</strong>: Guide Claude through logical step-by-step reasoning processes</li>
</ul>
</section>
<section id="main-takeaways-for-developersusers-18" class="level3">
<h3 class="anchored" data-anchor-id="main-takeaways-for-developersusers-18">Main Takeaways for Developers/Users</h3>
<ul>
<li>Follow iterative, empirical approach - start simple and build based on what fails</li>
<li>Provide background context and data that won’t change (great for prompt caching)</li>
<li>Use examples and few-shot learning for difficult edge cases</li>
<li>Include clear reminders about guidelines and confidence requirements</li>
<li>Structure output with XML tags or pre-filled responses for downstream processing</li>
<li>Extended thinking can serve as a debugging tool to understand Claude’s reasoning process</li>
</ul>


</section>
</section>
</section>

 ]]></description>
  <category>AI</category>
  <category>Claude Code</category>
  <category>Claude</category>
  <category>Conference</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-08-14-claude-code-conference-summary/</guid>
  <pubDate>Fri, 15 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Summary of Armin’s Talk - Agentic Coding Ecosystem 2025: Navigating the Tool Explosion</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-08-14-armin-agentic-coding-ecosystem/</link>
  <description><![CDATA[ 




<section id="agentic-coding-ecosystem-2025-navigating-the-tool-explosion" class="level1">
<h1>Agentic Coding Ecosystem 2025: Navigating the Tool Explosion</h1>
<p>I’ve learned a lot about Claude Code and agentic coding tools from Armin Ronacher. He’s the creator of Flask and Jinja and he’s very interested in Agentic coding tools. This talk was really great. Some things I learned:</p>
<ul>
<li>There is a tight relationship between a foundation model (Claude Sonnet 4) and the agentic coding harness (Claude Code). The foundation models are trained to use tools that the agentic harness is programmed/prompted to use. So you should expect given similar models from different model providers, the model from the same company will perform better. For example, Claude Sonnet 4 + Claude Code will perform better than gpt-5 + Claude Code. This makes me think about open source agentic coding tools like <a href="https://github.com/cline/cline">Cline</a> that may not use tools as correctly as Claude Code.</li>
<li>Just because a model is cheaper per token, doesn’t mean it is cheaper to use overall in an agentic coding tool.</li>
<li>I didn’t know Claude Code had a safety harness that uses Haiku to validate the code.</li>
</ul>
<p>Below is a talk and a summary by Claude Code.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/xfm99Tb7CNo" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<section id="key-points-and-insights" class="level2">
<h2 class="anchored" data-anchor-id="key-points-and-insights">Key Points and Insights</h2>
<ul>
<li><p><strong>Explosion of agentic coding tools</strong>: Since May, there has been a massive proliferation of AI-powered coding tools (30+ command line tools), making it difficult to evaluate and compare them effectively</p></li>
<li><p><strong>Tool-model binding is critical</strong>: The best performing agents have foundation models that have been specifically trained on the tools they use (like Anthropic’s Sonnet with bash, text editor, web search commands), creating tight coupling between specific agents and models</p></li>
<li><p><strong>Evaluation challenges</strong>: Current benchmarks like SweeBench are insufficient for real-world assessment; practical evaluation is extremely difficult due to varying token usage, execution speed, safety measures, and user interface differences across tools</p></li>
<li><p><strong>Infrastructure and safety matter</strong>: Quality agents implement pre-flight and post-flight checks (like Claude Code using Haiku for safety validation), better error recovery, and protection against inappropriate commands - not all tools are safe to run autonomously</p></li>
<li><p><strong>Cost complexity</strong>: Cheaper per-token pricing doesn’t necessarily mean lower total costs, as some models require more tokens and turns to achieve the same results, making true cost comparison difficult</p></li>
</ul>
</section>
<section id="main-takeaways-for-developersusers" class="level2">
<h2 class="anchored" data-anchor-id="main-takeaways-for-developersusers">Main Takeaways for Developers/Users</h2>
<ul>
<li><p>Don’t rely solely on social media hype or simple benchmarks when choosing agentic coding tools - practical daily use experience is more valuable than terminal UI aesthetics or marketing claims</p></li>
<li><p>Consider the specific model-tool combinations rather than just the underlying LLM, as tool integration quality significantly impacts performance and safety</p></li>
<li><p>Expect continued consolidation in the market as the current number of tools is unsustainable, but evaluation remains challenging due to multiple variables affecting performance</p></li>
<li><p>Self-hosting open-weight models is currently more expensive than using hosted services, despite the appeal of control and potential cost savings</p></li>
</ul>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This analysis provides a sobering look at the current state of AI coding assistants, highlighting the challenges developers face when trying to choose between the rapidly multiplying options. The key insight is that effective evaluation requires looking beyond surface-level features to understand the deep integration between models and tools, safety implementations, and real-world performance characteristics that only emerge through extended use.</p>


</section>
</section>

 ]]></description>
  <category>AI</category>
  <category>Coding</category>
  <category>Tools</category>
  <category>Agents</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-08-14-armin-agentic-coding-ecosystem/</guid>
  <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Claude Code Camp - hosted by Every</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/</link>
  <description><![CDATA[ 




<p><a href="https://every.to/">Every</a> hosted a Claude Code Camp today for an hour. Different members from their team shared in detail how they use <a href="https://github.com/anthropics/claude-code">Claude Code</a>. I’ve only started using Claude Code in my developer workflow in the past 2-3 weeks so it was super helpful to see how the team was using it.</p>
<section id="some-of-notes-and-takeaways" class="level2">
<h2 class="anchored" data-anchor-id="some-of-notes-and-takeaways">1. Some of notes and takeaways:</h2>
<ul>
<li>Compounding Engineering
<ul>
<li>Each unit of engineering work should make subsequent units of work easier</li>
<li>Loop - These 4 steps below were really helpful!
<ul>
<li>Plan –&gt; plan out a feature or bug fix in detail
<ul>
<li>A lot of prompts to plan. Check if they share it.</li>
</ul></li>
<li>Delegate -&gt; do the work</li>
<li>Assess –&gt; make sure it works as expected
<ul>
<li>Testing</li>
</ul></li>
<li>Codify –&gt; record learnings for the next time
<ul>
<li>CLAUDE.md</li>
</ul></li>
</ul></li>
</ul></li>
<li>Some of Kieran Klaasan’s tips
<ul>
<li>bash aliases to set up
<ul>
<li><code>cc</code> with <code>claude --dangerously-skip-permissions</code></li>
<li><code>wt</code> create a git worktree</li>
<li><code>ccw</code> - run claude code with a git worktree
<ul>
<li><img src="https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/ccw.png" class="img-fluid"></li>
</ul></li>
</ul></li>
<li>He had a ton of slash commands saved in <code>.claude/commands</code>
<ul>
<li>LOT OF PROMPTS HERE!</li>
<li>slash commands</li>
<li>issues.md</li>
<li>/work 309
<ul>
<li>implements Github issue 309</li>
</ul></li>
<li>Pull Request review
<ul>
<li>/review - default in claude code</li>
<li>/best_practice</li>
</ul></li>
</ul></li>
<li>use monologue for voice to text - <a href="https://monologue.to/" class="uri">https://monologue.to/</a></li>
</ul></li>
<li>Plan
<ul>
<li>Make a context file prompt
<ul>
<li><img src="https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/context_file_prompt.png" class="img-fluid"></li>
</ul></li>
<li>Make an Experiment Log
<ul>
<li><img src="https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/experiment_log.png" class="img-fluid"></li>
</ul></li>
</ul></li>
<li>Delegate
<ul>
<li>This step is easy when your plan is good</li>
</ul></li>
<li>Assess
<ul>
<li>Other notes
<ul>
<li>Kieran had Claude Code assess itself to understand how to push it</li>
<li>Consider alternative methods</li>
<li>Make Claude think outside the box</li>
</ul></li>
</ul></li>
<li>Codify
<ul>
<li>Dictating to Monologue</li>
<li>Take learnings from comments and update CLAUDE.md
<ul>
<li><img src="https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/learnings.png" class="img-fluid"></li>
</ul></li>
<li>Subagents of Claude Code?!
<ul>
<li>Can call up to 10 subagents</li>
<li>Use Cases
<ul>
<li>Process Data</li>
<li>Opponent processors - agents with different personas
<ul>
<li>Expense report - 1 from my own perspective, 2 from an auditor’s perspective</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li>Other tools
<ul>
<li>vibe tunnel - <a href="https://github.com/amantus-ai/vibetunnel" class="uri">https://github.com/amantus-ai/vibetunnel</a></li>
<li>claude-prune
<ul>
<li><a href="https://x.com/DannyAziz97/status/1945958948227461329" class="uri">https://x.com/DannyAziz97/status/1945958948227461329</a></li>
<li><a href="https://github.com/DannyAziz/claude-prune" class="uri">https://github.com/DannyAziz/claude-prune</a></li>
</ul></li>
<li>Claude Conductor: <a href="https://github.com/superbasicstudio/claude-conductor" class="uri">https://github.com/superbasicstudio/claude-conductor</a></li>
</ul></li>
<li>Quotes:
<ul>
<li>Someone asked a question around you guys all have different ways of approaching plans
<ul>
<li>Alex Duffy: “AI is a leverage for your subject matter expertise”</li>
<li>Kieran: Be inspired by what others do</li>
</ul></li>
</ul></li>
</ul>
<p>Below are some learnings extracted by o3 from the transcribed transcript.</p>
<hr>
</section>
<section id="key-learnings-top-510" class="level2">
<h2 class="anchored" data-anchor-id="key-learnings-top-510">2. Key Learnings (Top 5–10)</h2>
<ul>
<li>Claude Code enables shipping features in unfamiliar codebases far faster than traditional onboarding.</li>
<li>Productivity follows a repeatable loop: <strong>Plan → Delegate → Assess → Codify</strong>.</li>
<li>Strong up‑front plans let agents “just build” while poor plans create rework.</li>
<li>GitHub issues and PRs are the contract between Claude and humans for traceability.</li>
<li>Dictation (e.g., Monologue) captures richer prompts; voice often beats typing.</li>
<li>Folder‑level context files shrink token usage and boost model accuracy.</li>
<li>Keep <strong>experiment logs</strong> so goals, findings, and next steps survive context resets.</li>
<li><strong>Subagents</strong> provide parallel processing and multiple viewpoints.</li>
<li>Codify every PR lesson into commands or <code>Claude.md</code> to create compounding returns.</li>
<li>Git worktrees, session‑pruning, and remote terminals keep multi‑feature work safe and light.</li>
</ul>
<hr>
</section>
<section id="actionable-advice" class="level2">
<h2 class="anchored" data-anchor-id="actionable-advice">3. Actionable Advice</h2>
<ul>
<li>Start with one simple planning command; iterate after each run.</li>
<li>Auto‑generate a GitHub issue from the plan; use <code>/work &lt;issue&gt;</code> to delegate.</li>
<li>Use multi‑persona reviews (strict bot + human style) on each PR.</li>
<li>Distill review comments into updated best‑practice commands or <code>Claude.md</code>.</li>
<li>Summarize each folder in an <code>llms.txt</code> or similar for leaner context loading.</li>
<li>Maintain an <strong>experiment_log.md</strong> with goals, errors and revised plans.</li>
<li>Explicitly ask for parallel subagents when processing large corpora.</li>
<li>Adopt TDD in plans; require failing tests before code generation.</li>
<li>Use dictation tools to give fuller context rapidly.</li>
<li>Employ git worktrees (or Conductor UI) for parallel agent branches; prune chat history regularly.</li>
</ul>
<hr>
</section>
<section id="memorable-quotes" class="level2">
<h2 class="anchored" data-anchor-id="memorable-quotes">4. Memorable Quotes</h2>
<blockquote class="blockquote">
<p>“Claude Code has radically altered the way we work—processes, parameters, mental models—everything.” — Dan</p>
</blockquote>
<blockquote class="blockquote">
<p>“I shipped two features this week in codebases I’d never touched; that shouldn’t be possible.” — Dan</p>
</blockquote>
<blockquote class="blockquote">
<p>“Each unit of engineering should make the next one easier—that’s compounding engineering.” — Dan</p>
</blockquote>
<blockquote class="blockquote">
<p>“If your plan is amazing, the feature basically builds itself.” — Dan</p>
</blockquote>
<blockquote class="blockquote">
<p>“CC is my alias that starts Claude Code bypassing permissions—so it just works.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Forty‑five minutes of uninterrupted Claude work is my personal record.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Make your own system; be inspired, but tailor it to your workflow.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Voice prompts give fuller context; I get better results than typing.” — Naveen</p>
</blockquote>
<blockquote class="blockquote">
<p>“AI is leverage for your subject‑matter expertise.” — Alex</p>
</blockquote>
<blockquote class="blockquote">
<p>“Let it run, move on, come back when it’s done—that’s the mindset shift.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Don’t juggle mega‑prompts; lean into agents and their tools.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Experiment logs keep the model honest across context resets.” — Alex</p>
</blockquote>
<blockquote class="blockquote">
<p>“Reviewing with strict TypeScript bot against Ruby creates constructive tension.” — Kieran</p>
</blockquote>
<blockquote class="blockquote">
<p>“Prune old chat instead of trusting weak auto‑summaries.” — Danny</p>
</blockquote>
<hr>
</section>
<section id="important-data-stats-frameworks" class="level2">
<h2 class="anchored" data-anchor-id="important-data-stats-frameworks">5. Important Data / Stats / Frameworks</h2>
<ul>
<li><strong>Compounding Engineering Loop:</strong> Plan → Delegate → Assess → Codify.</li>
<li><strong>Time‑Savings Example:</strong> Two unfamiliar‑codebase features shipped in a week vs.&nbsp;~2‑3 weeks ramp‑up each.</li>
<li><strong>Continuous Work Duration:</strong> 45‑minute single Claude session noted.</li>
<li><strong>Business‑Model Change (Monologue):</strong> Paid‑only to freemium cap (~2 k words) requiring full‑stack update.</li>
<li><strong>Parallelization:</strong> Up to 10 subagents requested for concurrent processing.</li>
<li><strong>Subscription Bundle:</strong> Every subscription includes Cora, Monologue, Spiral, Sparkle at no add’l cost.</li>
<li><strong>Context Principle:</strong> Larger windows can hurt accuracy; mitigate with hierarchical summaries.</li>
<li><strong>Bug‑avoidance Strategy:</strong> Multi‑model reviews, experiment logs, TDD catch shortcut fixes.</li>
<li><strong>Session Management:</strong> Use <code>world prune</code> to keep recent N messages; avoid poor auto‑summaries.</li>
</ul>
<hr>
</section>
<section id="suggested-followup-resources" class="level2">
<h2 class="anchored" data-anchor-id="suggested-followup-resources">6. Suggested Follow‑up Resources</h2>
<ul>
<li><strong>Claude Code</strong> terminal agent (Anthropic)<br>
</li>
<li><strong>Claude.md / folder context files</strong> (<code>/init</code>)<br>
</li>
<li><strong>Custom <code>/issues</code>, <code>/work</code>, <code>/review</code> commands</strong><br>
</li>
<li><strong>Monologue</strong> dictation app<br>
</li>
<li><strong>Cora</strong> email chief‑of‑staff; <strong>Spiral</strong> copywriter; <strong>Sparkle</strong> desktop organizer<br>
</li>
<li><strong>AI Diplomacy</strong> game (Alex)<br>
</li>
<li><strong>Warp Terminal</strong>; <strong>Vibe Tunnel</strong> (remote terminal)<br>
</li>
<li><strong>World Prune</strong> (<code>npx world prune</code>) chat‑trim tool<br>
</li>
<li><strong>Conductor</strong> git‑worktree UI<br>
</li>
<li><strong>Every Newsletter, Discord, Consulting</strong> for ongoing training &amp; content.</li>
</ul>
<hr>
</section>
<section id="onesentence-summary-25-words" class="level2">
<h2 class="anchored" data-anchor-id="onesentence-summary-25-words">7. One‑Sentence Summary (25 words)</h2>
<p>Every’s team demonstrates how Claude Code enables “compounding engineering”—plan, delegate, assess, codify—to ship multi‑codebase features rapidly by capturing and recycling best‑practice knowledge.</p>


</section>

 ]]></description>
  <category>Claude Code</category>
  <category>Agents</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-07-18-claude-code-camp/</guid>
  <pubDate>Fri, 18 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Starting to Use Claude Code</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-07-18-starting-to-use-claude-code/</link>
  <description><![CDATA[ 




<p>I had tried Claude Code briefly when it first came out <a href="https://www.youtube.com/watch?v=AJpK3YTTKZ4&amp;ab_channel=Anthropic">4 months ago</a>. However I wasn’t that impressed. Lately though, I’ve seen more and more people turn to Claude Code. The step change was the <a href="https://www.anthropic.com/news/claude-4">release of Claude 4 Sonnet and Opus</a> on May 22, 2025. I think something was unlocked where given a powerful enough reasoning model (Claude 4) and access to generic tools, Claude Code is an amazing tool.</p>
<p>Some of the things I read/watched that motivated me to try it again:</p>
<ul>
<li>Watching Claude Code creator’s, Boris Chemy’s talk about the <a href="https://www.youtube.com/watch?v=Lue8K2jqfKk&amp;ab_channel=AIEngineer">evolution of agentic coding</a> <div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Lue8K2jqfKk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div></li>
<li>seeing Eric J Ma’s post about it where it created a receipt scanner in <a href="https://ericmjl.github.io/blog/2025/7/1/one-hour-and-eight-minutes-building-a-receipt-scanner-with-the-weirdest-tech-stack-imaginable/">1 hour and 8 minutes</a></li>
<li><a href="https://www.youtube.com/@ArminRonacher">Armin Ronacher’s</a> YouTube Tutorials: <a href="https://www.youtube.com/watch?v=nfOVgz_omlU&amp;ab_channel=ArminRonacher">here</a> and <a href="https://www.youtube.com/watch?v=Y4_YYrIKLac&amp;t=2184s&amp;ab_channel=ArminRonacher">here</a>. The second one I only watched the first 30 minutes. <div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/nfOVgz_omlU" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div> <div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Y4_YYrIKLac" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div></li>
</ul>
<section id="set-up" class="level2">
<h2 class="anchored" data-anchor-id="set-up">Set Up</h2>
<p>At work, we use VertexAI. Google has signed an agreement with Anthropic to license Claude models that you can then call via VertexAI. The <a href="https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai">instructions</a> are easy to follow. In my <code>~/.zshrc</code>, I just have:</p>
<pre><code>export CLAUDE_CODE_USE_VERTEX=1
export CLOUD_ML_REGION=YOUR_GCP_REGION
export ANTHROPIC_VERTEX_PROJECT_ID=YOUR_GCP_PROJECT_ID
export ANTHROPIC_MODEL='claude-sonnet-4@20250514'</code></pre>
<p>You then authenticate with Google Cloud:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gcloud</span> auth login</span></code></pre></div>
<p>Install Claude Code:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> @anthropic-ai/claude-code</span></code></pre></div>
<p>Then in your project directory or a new directory, start Claude Code:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span></span></code></pre></div>
<p>I eventually started running:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">claude</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dangerously-skip-permissions</span></span></code></pre></div>
</section>
<section id="first-experiments" class="level2">
<h2 class="anchored" data-anchor-id="first-experiments">First Experiments</h2>
<p>While I was on PTO during the July 4th week, I used Claude Code to build an application I’ve always wanted internally at my company. I had wanted to make a website using <a href="https://github.com/AnswerDotAI/fasthtml">FastHTML</a> since I had heard it was much more flexible than Streamlit/Gradio apps. So I finally got around to it thanks to Claude Code. It also figured out you can combine a FastHTML and a FastAPI service because they are both Starlette applications.</p>
<p>The second thing I built was an MCP Server using <a href="https://github.com/jlowin/fastmcp">FastMCP</a> that implemented <a href="https://gofastmcp.com/servers/auth/bearer">bearer token authentication</a>.</p>
<p>Both of the above tasks I estimate would’ve taken me 2-3 days to do but it take Claude Code &lt;2 hours with ~5 prompts to implement.</p>
</section>
<section id="some-best-practices-ive-arrived-at" class="level2">
<h2 class="anchored" data-anchor-id="some-best-practices-ive-arrived-at">Some best practices I’ve arrived at</h2>
<ul>
<li>Right now I just run Claude Code in a terminal. Sometimes I run it in an IDE (VS Code, Windsurf) where the UI is a little different.</li>
<li><code>claude --dangerously-skip-permissions</code> so Claude doesn’t have to ask for permissions.</li>
<li>Run the slash command <code>/init</code> to create CLAUDE.md</li>
<li>add links to documentation in your prmopts so Claude Code can use it’s fetch tool to learn how to use APIs. Many services/projects have <a href="https://llmstxt.org/">llms.txt</a> that are a good starting point. For example when working with FastHTML, I passed it <a href="https://www.fastht.ml/docs/llms-ctx.txt">this</a>.</li>
<li>ask Claude to make plans and write those plans in a markdown file in <code>docs/</code> with a date, e.g.&nbsp;<code>docs/plan_20250715_implement_feature_a.md</code> with ‘ultrathink’ which increases the thinking budget to the max</li>
<li>Then you can ask Claude Code to implement the plan</li>
<li>Make commits after each successful run of the agent</li>
<li>Though today I attended a Claude Code Camp hosted by Every. <a href="https://lawwu.github.io/posts/2025-07-18-claude-code-camp/">I learned a ton</a> about aliases, slash commands, how you can trigger subagents in Claude Code and how to think about the 4 step loop of development: planning, delegating, assessing and codifying.</li>
</ul>
</section>
<section id="claude-code-utilities" class="level2">
<h2 class="anchored" data-anchor-id="claude-code-utilities">Claude Code Utilities</h2>
<ul>
<li>Monitor your usage and cost: <a href="https://github.com/chiphuyen/sniffly" class="uri">https://github.com/chiphuyen/sniffly</a></li>
<li><a href="https://www.vibekanban.com/">Vibe Kanban</a> - tried it but didn’t really like it</li>
</ul>
</section>
<section id="other-links" class="level2">
<h2 class="anchored" data-anchor-id="other-links">Other Links</h2>
<ul>
<li><a href="https://www.anthropic.com/engineering/claude-code-best-practices" class="uri">https://www.anthropic.com/engineering/claude-code-best-practices</a></li>
<li><a href="https://github.com/hesreallyhim/awesome-claude-code" class="uri">https://github.com/hesreallyhim/awesome-claude-code</a></li>
<li><a href="https://www.pulsemcp.com/posts/how-to-use-claude-code-to-wield-coding-agent-clusters" class="uri">https://www.pulsemcp.com/posts/how-to-use-claude-code-to-wield-coding-agent-clusters</a></li>
<li><div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Lh_X32t9_po" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div></li>
<li>Someone pointed me to this person’s tutorials which look decent but haven’t had a chance to watch: <a href="https://www.youtube.com/@indydevdan" class="uri">https://www.youtube.com/@indydevdan</a></li>
<li>2025-07-18 - Anthropic cuts usage limits on max plans: Anthropic tightens usage limits for Claude Code — without telling users | TechCrunch - <a href="https://techcrunch.com/2025/07/17/anthropic-tightens-usage-limits-for-claude-code-without-telling-users/" class="uri">https://techcrunch.com/2025/07/17/anthropic-tightens-usage-limits-for-claude-code-without-telling-users/</a></li>
</ul>


</section>

 ]]></description>
  <category>Claude Code</category>
  <category>Agents</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-07-18-starting-to-use-claude-code/</guid>
  <pubDate>Fri, 18 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LangChain Interrupt Conference 2025 - 1 Hour Recap</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-05-30-langchain-interrupt-lwu-recap/</link>
  <description><![CDATA[ 




<p>I tried my best to condense the ~16 hours of content from the LangChain Interrupt Conference to less than an hour.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/YBlFn8R5T9o" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<ul>
<li><a href="https://docs.google.com/presentation/d/1RMGq3dCbmQ-JZPeHYLD9XKTRXk9IKHTFUnHbVXAjqHU/edit">Slides</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLnbEdh6BRkSjXMPmvxkmOz0VM3p4jtQ7d">Conference Talks</a></li>
<li><a href="https://lawwu.github.io/transcripts/index_langchain_interrupt_2025_official.html">Transcripts</a></li>
<li><a href="https://lawwu.github.io/posts/2025-05-23-langchain-interrupt-2025-recap/">AI Summaries of each talk</a>]</li>
</ul>



 ]]></description>
  <category>LangChain</category>
  <category>Conference</category>
  <category>Recap</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-05-30-langchain-interrupt-lwu-recap/</guid>
  <pubDate>Fri, 30 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Levels of AI Use</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-05-27-levels-of-ai-use/</link>
  <description><![CDATA[ 




<p>As I’ve talked to different people at work and amongst friends, there is a growing gap between those that use AI (mostly ChatGPT) and those that do not. It got me thinking there are levels to this for both developers (or anyone who writes code as part of their job) and non-developers (those that do not write code).</p>
<p>Whether you use AI frequently or infrequently, there are some important things to consider.</p>
<ol type="1">
<li>AI used well has the potential to accelerate and augment people’s capabilities. I’ve experienced this the last few years. Co-workers who have learned to prompt language models well have generally become more capable and productive employees. And prompting language models is just one skill needed now in this age of AI.</li>
<li>AI usage can lead to increase mental strain though. As your productivity increases (documents written, code written, applications deployed), there are more things to manage. AI is not quite at the point where it can be a true orchestrator of work in the software/tools that people use. Humans are still required here and it can become cognitively taxing switching between contexts.</li>
<li>If you aren’t using AI now, it is a great time to start.
<ul>
<li>A simple thing you can do is try using ChatGPT for half of your Google searches and see what the results are. (Though with Google testing <a href="https://blog.google/products/search/ai-mode-search/">AI Mode</a>, which is similar to ChatGPT’s chat interface, this may eventually be the default for <a href="https://www.google.com/">www.google.com</a>)</li>
<li>Learn to code - Some people have started saying humans do not need to write code anymore because AI can write better code. But I think it is still important to learn this skill. Writing code will help you understand what AI is doing. For example, some of the models in ChatGPT are reasoning models that also have access to a native code generation and execution tool. So if you ask a query where the model thinks it makes sense to write code to answer your question, it will do that. I recently asked a question about <a href="https://chatgpt.com/share/683697b2-5da4-8011-8d43-445172d7876e">how fast I would have run a half-marathon in a pair of supershoes</a>. The model thought for 1 minute 11 seconds. If you expand the reasoning trace, you’ll see it actually wrote code to do some math.</li>
</ul></li>
<li>Using AI can make you mentally lazy. As humans rely more on technology, this leads to <a href="https://www.ie.edu/center-for-health-and-well-being/blog/ais-cognitive-implications-the-decline-of-our-thinking-skills/">cognitive offloading</a> where “where individuals shift memory and problem-solving tasks to technology.” It happened when people started using calculators. It happened when people first starting using GPS. People’s spatial awareness decreased. AI is a much much more general tool than a calculator or a GPS. AI can now write code better than most (?) developers, it has super-human knowledge of the world, it can generate audio, images and video, the capabilities and possibilities are growing each day. As a daily user of AI tools, I sometimes have to remind myself to not off-loading everything to AI otherwise I’m not exercising certain critical thinking or creative areas of my brain.</li>
<li>AI’s voice mode has gotten quite good. You can use your voice to chat with AI now and it will respond in real-time.</li>
</ol>
<p>Here are the levels:</p>
<hr>
<section id="level-0-no-use" class="level2">
<h2 class="anchored" data-anchor-id="level-0-no-use"><strong>Level 0 – No Use</strong></h2>
<blockquote class="blockquote">
<p>“I don’t use AI at all.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: Write and ship code without AI assistance. May be unaware of AI tools or skeptical about their value. Write most code in an IDE or text editor, relying on traditional resources (documentation, Google, Stack Overflow) for help.</li>
<li><strong>Non-developers</strong>: Haven’t tried ChatGPT yet. Or maybe have used it once. Do not use other AI tools (e.g., ChatGPT, Copilot, Notion AI). AI feels distant, abstract, or risky.</li>
</ul>
<hr>
</section>
<section id="level-1-occasional-use" class="level2">
<h2 class="anchored" data-anchor-id="level-1-occasional-use"><strong>Level 1 – Occasional Use</strong></h2>
<blockquote class="blockquote">
<p>“I use AI once in a while when I’m stuck or curious.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: Use AI code completion like GitHub Copilot or ChatGPT to get unstuck occasionally. Paste errors or ask for code snippets.</li>
<li><strong>Non-developers</strong>: Use AI for one-off tasks like drafting emails, summarizing notes, or brainstorming ideas.</li>
</ul>
<hr>
</section>
<section id="level-2-regular-use" class="level2">
<h2 class="anchored" data-anchor-id="level-2-regular-use"><strong>Level 2 – Regular Use</strong></h2>
<blockquote class="blockquote">
<p>“AI is part of my daily toolkit.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: AI helps with writing boilerplate, generating tests, or exploring APIs. Copilot is turned on. They still edit heavily.</li>
<li><strong>Non-developers</strong>: AI helps draft documents, rewrite content, or explore new ideas. May use AI across 2–3 tools. ChatGPT has replaced most of my Google searches.</li>
</ul>
<p>Example: My wife falls into this camp. ChatGPT has largely replaced her Google searches. She uses ChatGPT daily for idea generation for homeschooling, cooking, defining terms (esp.&nbsp;for kids).</p>
<hr>
</section>
<section id="level-3-workflow-integration" class="level2">
<h2 class="anchored" data-anchor-id="level-3-workflow-integration"><strong>Level 3 – Workflow Integration</strong></h2>
<blockquote class="blockquote">
<p>“AI changes <em>how</em> I work.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: AI tools are deeply integrated into IDEs and workflows. Prompts are crafted with intent. Created RAG systems. Using AI-native IDEs like Cursor or Windsurf.</li>
<li><strong>Non-developers</strong>: Automate repeated tasks (e.g., meeting summaries → action items), combine tools (e.g., ChatGPT + Zapier), and create custom GPTs or workflows.</li>
</ul>
<hr>
</section>
<section id="level-4-ai-native-thinking" class="level2">
<h2 class="anchored" data-anchor-id="level-4-ai-native-thinking"><strong>Level 4 – AI-Native Thinking</strong></h2>
<blockquote class="blockquote">
<p>“AI is a co-worker. I design around it.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: Design software and infrastructure assuming AI is part of the team—building AI agents, integrating LLMs, evaluating agents and other AI applications as well as fine-tuning models. Very familiar with LLM capabilities like structured output, reasoning models and multi-modality. Experimented with various agent frameworks, agent architectures and MCP.</li>
<li><strong>Non-developers</strong>: Reimagine job roles around what AI can do: delegate, refine, and accelerate work with agents, workflows, and bespoke GPTs. Created scripts to automate some of their work or small applications using coding agents in an IDE or Replit.</li>
</ul>
<p>Example: Spotify’s CEO Tobias Lutke has changed how his company hires because of AI. He wrote in a <a href="https://x.com/tobi/status/1909231499448401946">memo</a> that employees have to prove they “cannot get what they watn done using AI” before asking for more headcount and resources.</p>
<hr>
</section>
<section id="level-5-ai-first-innovation" class="level2">
<h2 class="anchored" data-anchor-id="level-5-ai-first-innovation"><strong>Level 5 – AI-First Innovation</strong></h2>
<blockquote class="blockquote">
<p>“AI isn’t just part of the work—it changes <em>what’s possible</em>.”</p>
</blockquote>
<ul>
<li><strong>Developers</strong>: Build entirely new paradigms of software with AI at the center. Move beyond LLM wrappers into agent-based systems, multi-agent systems, AI-native architectures, and emergent behavior. Actively experimenting with not just Foundation LLM APIs but real-time audio APIs (audio in and out).</li>
<li><strong>Non-developers</strong>: Rethink roles, products, and business models from the ground up with AI as the foundation. Co-create with AI to scale impact in ways that were previously unimaginable.</li>
</ul>
<p>What level are you?</p>


</section>

 ]]></description>
  <category>AI</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-05-27-levels-of-ai-use/</guid>
  <pubDate>Tue, 27 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LangChain Interrupt Conference 2025 AI Recap</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-05-23-langchain-interrupt-2025-recap/</link>
  <description><![CDATA[ 




<p><em>This page contains AI-generated summaries of the LangChain Interrupt 2025 conference talks.</em></p>
<p>The code to do this is in this <a href="https://github.com/lawwu/langchain_conference_ai_summaries">repo</a>. I also did a 1 hour recap of the conference <a href="https://www.youtube.com/watch?v=YBlFn8R5T9o&amp;ab_channel=LawrenceWu">here</a>.</p>
<section id="interrupt-2025-keynote" class="level2">
<h2 class="anchored" data-anchor-id="interrupt-2025-keynote">Interrupt 2025 Keynote</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/DrygcOI-kG8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_DrygcOI-kG8.html" class="uri">https://lawwu.github.io/transcripts/transcript_DrygcOI-kG8.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of Harrison Chase’s keynote at Interrupt 2025, focusing on the key points and main takeaways:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>LangChain’s Origin &amp; Mission:</strong> Born as an open-source project to help developers build AI applications using LLMs, LangChain aims to make intelligent agents ubiquitous by providing the necessary tooling.</li>
<li><strong>The Agent Engineer:</strong> A new profile of builder is emerging, the “agent engineer,” combining skills in prompting, engineering, product sense, and machine learning. LangChain wants to support these agent engineers.</li>
<li><strong>Agents are Here:</strong> Agents are being built and deployed, seeing production use and traction. Companies have been building agents to transform customer support, AI search, co-pilots, and more.</li>
<li><strong>LangChain as Integrations Hub:</strong> LangChain has become a stable ecosystem for interacting with various model providers, giving developers flexibility in model selection.</li>
</ul>
<p><strong>Three Beliefs About the Present of Agents:</strong></p>
<ol type="1">
<li><strong>Agents rely on many different models:</strong> LangChain has become the go-to library for model integrations (70 million monthly downloads), exceeding the OpenAI SDK in Python downloads, indicating developer preference for model optionality.</li>
<li><strong>Reliable agents start with the right context:</strong> LangGraph offers a low-level, unopinionated framework for building agents with supreme control over context engineering, crucial for prompting. Recommending that complex agent orchestration things be built on top of LangGraph.</li>
<li><strong>Building agents is a team sport:</strong> LangSmith is designed as a platform for developers, product people, and ML engineers to collaborate on building agents. It integrates tracing, evals, and prompt engineering to foster teamwork.</li>
</ol>
<p><strong>Three Beliefs About the Future of Agents:</strong></p>
<ol type="1">
<li><strong>AI observability is different than traditional observability:</strong> AI observability is built for the agent engineer persona which needs to bring in ML, product, and prompt engineering concepts. A new series of metrics around agent insights is being launched in Langsmith for run counts of tools, latencies, and errors.</li>
<li><strong>Everyone will be an agent builder:</strong> LangChain aims to empower individuals from various backgrounds to build agents.
<ul>
<li><strong>Langraft Pre-builds:</strong> Common agent architectures (single agents, agent swarms, supervisor agents) will enable developers to easily get started with these common architectures.</li>
<li><strong>Langraft Studio V2:</strong> No more desktop apps! Includes LLM calls in a playground, builds up data sets, and modifies prompts. Pull down production traces from LangSmith into LangGraph Studio so that you can start to modify the agent.</li>
<li><strong>Open Source Open Agent Platform:</strong> A no-code platform powered by LangGraph using agent templates for easy agent creation, including a tool server, RAG as a service, and an agent registry.</li>
</ul></li>
<li><strong>Deployment of agents is the next hurdle:</strong> Langraph platform is now generally available to help developers tackle the deployment challenges.</li>
</ol>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Agent engineering is a multidisciplinary field.</strong></li>
<li><strong>LangChain is evolving to support the entire agent lifecycle</strong>, from initial prototyping to production deployment and monitoring.</li>
<li><strong>Collaboration and accessibility are key</strong> to wider adoption of AI agents.</li>
<li><strong>The future of agents is long-running, bursty, and stateful.</strong></li>
<li><strong>AI Observability is different than traditional observability.</strong></li>
<li><strong>LangChain is releasing Langraph Pre-builds, Langraft Studio V2, and Open Source Open Agent Platform to tackle these challenges.</strong></li>
</ul>
<hr>
</section>
<section id="alice-2-building-and-scaling-an-ai-agent" class="level2">
<h2 class="anchored" data-anchor-id="alice-2-building-and-scaling-an-ai-agent">Alice 2: Building and Scaling an AI Agent</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/fegwPmaAPQk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_fegwPmaAPQk.html" class="uri">https://lawwu.github.io/transcripts/transcript_fegwPmaAPQk.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the transcript with key points and takeaways from the 11x presentation about building and scaling their AI SDR agent, Alice:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Background:</strong> 11x is a company building digital workers, including Alice (AI SDR) and Julian (AI voice agent). The company rebuilt Alice from scratch in a short three-month period.</li>
<li><strong>Motivation for Rebuild:</strong> Alice One was successful but lacked key “digital worker” characteristics: too much manual input, basic lead research, inability to handle replies automatically, and no self-learning. The speaker notes that the release of products such as GPT-4, Cloud, and Replit agent caused them to rethink and rebuild their agent</li>
<li><strong>New Vision for Alice:</strong> The new Alice was centered on seven agentic capabilities: chat-based interaction, knowledge base training, AI-driven lead sourcing (quality-focused), deep lead research, personalized emails, automated handling of inbound messages, and self-learning.</li>
<li><strong>Rapid Development:</strong> The rebuild was accomplished in just three months through a focused approach, utilizing a vanilla tech stack, and leveraging vendor partnerships (including Langchain).</li>
<li><strong>Agent Architecture Challenge:</strong> The core challenge was finding the right architecture for guiding users through campaign creation. They experimented with React, Workflow, and Multi-Agent architectures.
<ul>
<li><strong>React:</strong> Simple but struggled with complex tool usage, leading to infinite loops and mediocre outputs.</li>
<li><strong>Workflow:</strong> Solved tool issues and produced better outputs but was inflexible, tightly coupled to the front-end, and didn’t support jumping around in the flow.</li>
<li><strong>Multi-Agent:</strong> The final solution involved a supervisor agent routing tasks to specialized sub-agents (researcher, positioning report generator, LinkedIn message writer, email writer). This offered both flexibility and performance.</li>
</ul></li>
<li><strong>Tech Stack:</strong> The company used a variety of tools and vendors, most notably Langchain.</li>
</ul>
<p><strong>Main Takeaways &amp; Reflections on Building Agents:</strong></p>
<ul>
<li><strong>Simplicity is Key:</strong> Overly complex structures can be counterproductive long-term.</li>
<li><strong>Model Releases Can Change Everything:</strong> New models can significantly improve agent performance.</li>
<li><strong>Mental Model Matters:</strong> Thinking of the agent as a co-worker or team of co-workers is more effective than thinking of it as a flow or graph.</li>
<li><strong>Break Down Big Tasks:</strong> Divide complex tasks into smaller, manageable components.</li>
<li><strong>Tools Over Skills:</strong> Prioritize providing the agent with the right tools rather than trying to build inherent skills.</li>
<li><strong>Don’t Forget Prompt Engineering:</strong> Iterating on prompts can unlock better agent performance.</li>
<li><strong>Results:</strong> Alice 2 is live and generating significant leads, messages, and replies, with reply rates comparable to human SDRs.</li>
<li><strong>Future Plans:</strong> Integrating Alice and Julian across multiple channels, implementing self-learning, and exploring new technologies like computer vision, memory, and reinforcement learning.</li>
</ul>
<p><strong>Call to Action:</strong> 11x is actively hiring, encouraging those interested in building digital workers to reach out.</p>
<hr>
</section>
<section id="building-reliable-agents-lessons-in-building-an-ide" class="level2">
<h2 class="anchored" data-anchor-id="building-reliable-agents-lessons-in-building-an-ide">Building Reliable Agents: Lessons in Building an IDE</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/H-1QaLPnGsg" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_H-1QaLPnGsg.html" class="uri">https://lawwu.github.io/transcripts/transcript_H-1QaLPnGsg.html</a></p>
<p>AI Summary:</p>
<p>This transcript discusses the challenges of building reliable data processing agents using LLMs, focusing on the difficulties users face when iterating on prompts and pipelines.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Problem:</strong> Building reliable LLM pipelines for data processing (e.g., extracting information from documents) is hard, and people struggle with prompt engineering.</li>
<li><strong>Challenges:</strong>
<ul>
<li><strong>Data Understanding Gap:</strong> Users often don’t know the right questions to ask or understand the nuances and failure modes within their data.</li>
<li><strong>Intent Specification Gap:</strong> Translating identified failure modes into pipeline improvements (prompt engineering, task decomposition, etc.) is complex and difficult.</li>
</ul></li>
<li><strong>Research Focus:</strong> The research aims to close the gap between the user, the data, and the LLM pipeline. There’s a lack of tooling to help users understand their data and specify their intent effectively.</li>
<li><strong>Proposed Solutions:</strong>
<ul>
<li><strong>Data Understanding:</strong> Tools to automatically extract and cluster failure modes, allowing users to annotate and organize them to create datasets for evaluations.</li>
<li><strong>Intent Specification:</strong> An interface that allows users to provide notes on desired improvements, which are then automatically translated into prompt improvements, with interactive feedback and version control.</li>
</ul></li>
<li><strong>Observations:</strong>
<ul>
<li>Evals are fuzzy and constantly evolving, with new failure modes being discovered continuously.</li>
<li>Failure modes often reside in a long tail of diverse cases.</li>
</ul></li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Iterate in Stages:</strong> Break down the iteration process into distinct stages:
<ol type="1">
<li><strong>Understand Your Data:</strong> Focus on understanding the data and identifying failure modes without worrying about accuracy.</li>
<li><strong>Specify Prompts:</strong> Ensure prompts are clear, unambiguous, and well-specified.</li>
<li><strong>Optimize Accuracy:</strong> Apply known accuracy optimization strategies only after the first two stages are addressed.</li>
</ol></li>
<li><strong>Evals are Never Done First:</strong> Evaluation is an ongoing process where new subsets of documents and new failure modes are always being added.</li>
<li><strong>Long Tail of Failure Modes:</strong> There are often tens or twenties of different failure modes that need to be checked for.</li>
</ul>
<p>In essence, the talk highlights the importance of understanding the data and clearly defining the desired outcome before focusing on prompt engineering and optimization. It suggests that tooling and methodologies that support these initial stages can significantly improve the reliability of LLM-powered data processing pipelines.</p>
<hr>
</section>
<section id="building-reliable-agents-evaluation-challenges" class="level2">
<h2 class="anchored" data-anchor-id="building-reliable-agents-evaluation-challenges">Building Reliable Agents: Evaluation Challenges</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/paaOevEFNlo" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_paaOevEFNlo.html" class="uri">https://lawwu.github.io/transcripts/transcript_paaOevEFNlo.html</a></p>
<p>AI Summary:</p>
<p>The transcript is a presentation by Tan Bang from Nubank, discussing the challenges and solutions they’ve developed for building reliable AI agents for their 120 million users, particularly in customer service and money transfer applications. Nubank, being a large and rapidly growing bank in Brazil, Mexico, and Colombia, emphasizes the importance of accuracy, trust, and personalization in their AI interactions.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Nubank’s AI Focus:</strong> Building AI private bankers and agents to improve customer financial experiences, focusing on chatbots and money transfer applications.</li>
<li><strong>Scale and Impact:</strong> Processing 8.5 million contacts monthly, with 60% initially handled by LLMs, demonstrating the scale of AI integration.</li>
<li><strong>Use Case: Money Transfer Agent:</strong> Successful implementation of an agentic system for money transfers via voice, image, and chat, reducing transfer time and improving customer satisfaction.</li>
<li><strong>LLM Ecosystem:</strong> Nubank has a four-layer LLM ecosystem: Core Engine, Testing and Evals, Tools, and Developer Experience, working closely with LangChain and LangSmith.</li>
<li><strong>LangGraph:</strong> Faster iterations and standardization of approaches to building agentic systems.</li>
<li><strong>Evaluation Challenges:</strong> Addressing language variations (Portuguese, Spanish dialects), brand reputation (guardrails against jailbreaking), and the critical need for accuracy due to dealing with users’ money.</li>
<li><strong>Customer Service vs.&nbsp;Money Transfer Evaluation:</strong> Tailoring evaluation metrics based on the application, emphasizing empathy and tone in customer service, and accuracy in money transfers.</li>
<li><strong>Offline and Online Evaluation:</strong> Balancing offline evaluations (with human labelers) and online evaluations (continuous improvement loop with tracing, logging, and alerting) for faster development.</li>
<li><strong>LLM as a Judge:</strong> Developing LLM judges to automate labeling and evaluation, achieving performance comparable to human labelers to improve quality at scale.</li>
<li><strong>Iterative Improvement:</strong> Demonstrating significant gains (F1 score) of LLM judge through prompt engineering, fine-tuning, and model selection (GPT-4).</li>
<li><strong>Culture of A/B Testing:</strong> Making data driven decisions and validating performance with rigorous A/B testing.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Evaluation is Crucial:</strong> Rigorous evaluation is essential for building reliable AI agents, especially in sensitive areas like finance.</li>
<li><strong>Nuanced Metrics:</strong> Different applications require tailored evaluation metrics beyond simple accuracy (e.g., empathy in customer service).</li>
<li><strong>Human-in-the-Loop:</strong> Human labelers are important for evaluating LLMs.</li>
<li><strong>Embrace Iteration:</strong> Rapid iteration and experimentation are key to improving AI agent performance, facilitated by tools like Langsmith and LangGraph.</li>
<li><strong>LLMs as Judges:</strong> LLMs can effectively be leveraged as judges for scalable and cheaper evaluations.</li>
<li><strong>Democratization of Data:</strong> Providing centralized logs and repositories with graphical interfaces allows business users to contribute to development.</li>
<li><strong>No Magic Bullet:</strong> Building effective AI agents requires hard work, dedication to evaluation, and a deep understanding of user needs.</li>
</ul>
<hr>
</section>
<section id="multi-agent-frontiers-making-devin" class="level2">
<h2 class="anchored" data-anchor-id="multi-agent-frontiers-making-devin">Multi-Agent Frontiers: Making Devin</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/KfXq9s96tPU" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_KfXq9s96tPU.html" class="uri">https://lawwu.github.io/transcripts/transcript_KfXq9s96tPU.html</a></p>
<p>AI Summary:</p>
<p>This transcript is a presentation about Devin, an AI software engineer developed by Cognition, and how it’s built. Here’s a summary of the key points:</p>
<p><strong>What is Devin?</strong></p>
<ul>
<li>Devin is positioned as an <strong>AI teammate</strong>, not just a copilot, designed to work within existing codebases, focusing on delegating entire tasks.</li>
<li>It is a <strong>cloud-based AI agent</strong>, enabling parallelism, asynchronous work, and team-wide knowledge sharing and learning.</li>
<li>Devin aims to go directly from ticket to pull request, integrating with tools like Slack, Jira, and Linear.</li>
</ul>
<p><strong>Key Technical Aspects &amp; How Devin is Built:</strong></p>
<ol type="1">
<li><strong>Context is King:</strong>
<ul>
<li>Understanding existing codebases is crucial.</li>
<li>Devin needs to emulate desired code styles and avoid poor-quality sections.</li>
<li>Organizational knowledge and proprietary frameworks are critical considerations.</li>
</ul></li>
<li><strong>Deep Wiki:</strong>
<ul>
<li>A real-time, interactive wiki for codebases, providing documentation, diagrams, and a Q&amp;A interface.</li>
<li>Deep Wiki is generated by analyzing the code and surrounding meta data such as comments, documentation and git commit history.</li>
<li>Originally an internal tool for Devin, now publicly available (deepwiki.com) for open-source repos and integrated with Devin for private repos.</li>
</ul></li>
<li><strong>Devin Search:</strong>
<ul>
<li>A code search tool that leverages both micro (individual files) and macro (wiki-derived) context.</li>
<li>Employs preprocessing and retrieval-augmented generation (RAG) but includes more advanced filtering and ranking.</li>
</ul></li>
<li><strong>Customized Post-Training (Kevin/CUDA Kernels):</strong>
<ul>
<li>Demonstrated with “Kevin,” a model fine-tuned for writing CUDA kernels (GPU code).</li>
<li>Employs high-compute reinforcement learning (RL) to optimize performance.</li>
<li>Uses an automated reward function based on code correctness and speed compared to a reference implementation.</li>
<li>Multi-turn training with discounted rewards for trajectories that lead to correct solutions.</li>
</ul></li>
<li><strong>Overcoming Reward Hacking:</strong>
<ul>
<li>Addressed how models can “cheat” to maximize rewards, like using try-except blocks or redefining classes.</li>
<li>Emphasized the importance of carefully defining the environment and reward functions to prevent undesired behaviors.</li>
</ul></li>
</ol>
<p><strong>Key Takeaways:</strong></p>
<ul>
<li><strong>Narrow Domain Specialization:</strong> Deep RL can significantly outperform general foundation models in specialized coding tasks within specific codebases.</li>
<li><strong>Importance of Automated Verification:</strong> Automatic code verification (compilation, testing) is critical for scaling AI-driven development, making it easier to create code that performs as intended.</li>
<li><strong>Future of AI Developers:</strong> The future envisions highly specialized AI agents customized to individual codebases, offering the equivalent of vast experience in a particular environment.</li>
<li><strong>Devin’s Learning Model:</strong> Devin learns from team interactions, incorporating knowledge into the organization, not just for individual users.</li>
</ul>
<p>In essence, the presentation highlights Cognition’s approach to building a truly autonomous AI software engineer by focusing on deep codebase understanding, continuous learning through RL, and integration into existing development workflows.</p>
<hr>
</section>
<section id="from-pilot-to-platform-agentic-developer-products" class="level2">
<h2 class="anchored" data-anchor-id="from-pilot-to-platform-agentic-developer-products">From Pilot to Platform: Agentic Developer Products</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Bugs0dVcNI8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_Bugs0dVcNI8.html" class="uri">https://lawwu.github.io/transcripts/transcript_Bugs0dVcNI8.html</a></p>
<p>AI Summary:</p>
<p>The presentation “From Pilot to Platform: Agentic Developer Products with LangGraph” by Matas Ristanis and Saurabh Sherhati discusses how Uber is leveraging AI, specifically LangGraph, to build internal developer tools.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Problem:</strong> Uber’s developer platform team supports 5,000 developers working with a massive codebase and aims to improve their workflow and productivity.</li>
<li><strong>Strategy:</strong> Uber’s AI DevTools strategy revolves around:
<ul>
<li><strong>Targeted Products:</strong> Focused on improving developer workflows like test writing and code review.</li>
<li><strong>Cross-Cutting Primitives:</strong> Building foundational AI technologies and abstractions for reusability.</li>
<li><strong>Intentional Tech Transfer:</strong> Identifying reusable components and frameworks (like LangFX, their wrapper around LangGraph/LangChain) from initial product development.</li>
</ul></li>
<li><strong>Validator:</strong> An IDE-integrated LangGraph agent that identifies and flags best practice violations and security issues in code, offering pre-computed fixes or integration with an agentic assistant. It combines LLM-based sub-agents with deterministic static linters.</li>
<li><strong>AutoCover:</strong> A tool to automatically generate high-quality tests (building, passing, coverage-raising, validated and mutation tested) for developers. It utilizes domain expert agents composed in a LangGraph structure, including Validator. By supercharging the graph, it achieves significant performance improvements over other agentic coding tools.</li>
<li><strong>Other Products:</strong> The presentation briefly showcases other tools built using the same principles:
<ul>
<li><strong>Uber Assistant Builder:</strong> An internal “GPT store” for creating custom chatbots with Uber-specific knowledge.</li>
<li><strong>Picasso/Genie:</strong> A conversational AI for Uber’s workflow management platform.</li>
<li><strong>uReview:</strong> A code review tool that flags issues and suggests fixes before code merges.</li>
</ul></li>
<li><strong>Technical Learnings:</strong>
<ul>
<li><strong>Domain Expert Agents:</strong> Building specialized and knowledgeable agents yields better results (context awareness, reduced hallucinations).</li>
<li><strong>Composing Agents:</strong> Combining agents with deterministic sub-agents improves reliability.</li>
<li><strong>Agent Reusability:</strong> Solving bounded problems with agents and reusing them across multiple applications scales development efforts.</li>
</ul></li>
<li><strong>Strategic Learnings:</strong>
<ul>
<li><strong>Encapsulation Boosts Collaboration:</strong> Well-defined abstractions enable horizontal scaling and collaboration between teams with different expertise.</li>
<li><strong>Graphs Model Interactions:</strong> Graphs mirror developer workflows, improving efficiency and identifying bottlenecks.</li>
</ul></li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li>LangGraph can be effectively used to build sophisticated and reusable AI-powered developer tools.</li>
<li>A focus on domain expertise and well-defined abstractions are crucial for building successful AI agents.</li>
<li>Reusing agents across different applications and promoting collaboration between teams can significantly scale AI development efforts within an organization.</li>
<li>Addressing inefficiencies in existing systems can improve both AI-driven and traditional developer workflows.</li>
</ul>
<hr>
</section>
<section id="building-replit-agent-v2" class="level2">
<h2 class="anchored" data-anchor-id="building-replit-agent-v2">Building Replit Agent v2</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/h_oUYqkRybM" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_h_oUYqkRybM.html" class="uri">https://lawwu.github.io/transcripts/transcript_h_oUYqkRybM.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the key points and takeaways from the discussion about Replit Agent v2:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Autonomy is the core improvement in v2:</strong> Replit Agent v2 boasts significantly increased autonomy, capable of running for 10-15 minutes (and more in the future) doing useful work without human intervention, unlike v1 which only ran autonomously for a few minutes.</li>
<li><strong>Evaluations and Observability are Crucial:</strong> Early investment in evaluations and robust observability are essential for developing advanced agents. LangSmith is heavily utilized for observability.</li>
<li><strong>Balancing Autonomy and Human-in-the-Loop:</strong> There’s a tension between agent autonomy and the need for human intervention. Replit balances this by providing notifications (via a mobile app) and a chat interface to allow users to stop or modify the agent’s work while it’s running.</li>
<li><strong>User Base and Applications:</strong> Replit has a free tier and is approaching 1 million app creations per month. Users range from those testing agent capabilities to those building business tools and personalized applications. A key differentiator is that users spend hundreds of hours on single projects, building internal tools or personalized apps, often with minimal traditional coding.</li>
<li><strong>Confidence in Autonomy Comes from Testing:</strong> Confidence in increasing autonomy came from extensive internal testing and positive feedback during early access programs.</li>
<li><strong>Model Usage:</strong> Replit heavily uses Sonnet models (especially 3.7) and other models for accessory functions where latency can be traded for performance. They are very opinionated about model selection and do not allow users to switch models. Using multiple models in one run is common.</li>
<li><strong>Cost vs.&nbsp;Latency vs.&nbsp;Performance:</strong> Replit prioritizes performance and cost over latency, focusing on getting the task done correctly, especially for non-technical users.</li>
<li><strong>Decreasing Manual Code Modification:</strong> Replit is actively trying to reduce the number of users who manually modify the code generated by the agent.</li>
<li><strong>Collaboration:</strong> Collaboration with agents is still a challenge due to complexities in merging changes proposed by multiple agents.</li>
<li><strong>Communication Patterns:</strong> Users are notified through the Replit mobile app when the agent needs feedback.</li>
<li><strong>Planning Experience:</strong> Replit is changing the planning experience to accommodate both users who prefer chatbot-like interaction and those who prefer a more structured approach like submitting a PRD (Product Requirements Document).</li>
<li><strong>Debugging Agents is Hard:</strong> Debugging agents is harder than debugging distributed systems, often requiring reading large amounts of input and output to understand decision-making.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li>Replit Agent v2 represents a significant step forward in agent autonomy, enabling users to build more complex applications with less direct intervention.</li>
<li>Investing in robust evaluation and observability tools is critical for developing and maintaining advanced agents.</li>
<li>The Replit team is continuously working on improving the user experience, balancing autonomy with the need for human control and feedback.</li>
<li>The focus is shifting towards enabling non-technical users to build sophisticated applications, particularly internal tools and personalized software.</li>
</ul>
<hr>
</section>
<section id="multi-agent-frontiers-building-ask-d.a.v.i.d." class="level2">
<h2 class="anchored" data-anchor-id="multi-agent-frontiers-building-ask-d.a.v.i.d.">Multi-Agent Frontiers: Building Ask D.A.V.I.D.</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/yMalr0jiOAc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_yMalr0jiOAc.html" class="uri">https://lawwu.github.io/transcripts/transcript_yMalr0jiOAc.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the transcript, highlighting the key points and main takeaways from the “Building Ask D.A.V.I.D.” presentation:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>The Problem:</strong> The JPMorgan Private Bank’s investment research team manages thousands of investment products with extensive data, leading to numerous client questions. Answering these questions is a manual, time-consuming process that limits scalability and insight delivery.</li>
<li><strong>The Solution: Ask D.A.V.I.D.:</strong> An AI-powered, domain-specific QA agent designed to automate the investment research process, providing curated answers, insights, and analytics quickly. Stands for “Data, Analytics, Visualization, Insights, and Decision-making system.”</li>
<li><strong>Multi-Agent System:</strong> Ask D.A.V.I.D. uses a multi-agent architecture:
<ul>
<li><strong>Supervisor Agent:</strong> Acts as a “router,” understanding user intentions and delegating tasks to sub-agents. Uses short-term and long-term memory and knows when to involve a human.</li>
<li><strong>Structured Data Agent:</strong> Translates natural language into SQL queries or API calls to retrieve and summarize structured data.</li>
<li><strong>Document Search Agent:</strong> Employs Retrieval-Augmented Generation (RAG) to derive information from unstructured data like emails and meeting notes.</li>
<li><strong>Analytics Agent:</strong> Leverages proprietary models and APIs for insights and visualizations, using either direct API calls or text-to-code generation.</li>
</ul></li>
<li><strong>Workflow:</strong> The system uses distinct flows for general questions and questions about specific funds, each with a supervisor agent and specialized sub-agents. Personalization and reflection nodes refine and validate answers.</li>
<li><strong>Example:</strong> A client asks why a fund was terminated. The system identifies the fund, uses the doc search agent to find the reason (performance issues), personalizes the answer based on the user’s role (advisor vs.&nbsp;due diligence specialist), and uses an LLM to ensure the answer makes sense.</li>
<li><strong>Evaluation-Driven Development:</strong> Continuous evaluation is crucial for GenAI projects.
<ul>
<li>Independently evaluate sub-agents.</li>
<li>Pick the right metrics based on agent design (e.g., conciseness for summarization).</li>
<li>Start evaluation early, even without ground truth, and use LLMs as judges with human review.</li>
</ul></li>
</ul>
<p><strong>Main Takeaways (The 3 Key Lessons):</strong></p>
<ol type="1">
<li><strong>Iterate Fast:</strong> Start simple and refactor frequently. Build incrementally, adding complexity as you validate each component.</li>
<li><strong>Evaluate Early:</strong> Implement continuous evaluation to track progress, identify weak points, and build confidence in accuracy.</li>
<li><strong>Keep Humans in the Loop:</strong> Human SME (Subject Matter Expert) involvement is essential, especially for high-stakes financial applications, to ensure accuracy and handle cases where the AI isn’t confident. Aim for human-in-the-loop, not human-out-of-the-loop.</li>
</ol>
<hr>
</section>
<section id="breakthrough-agents-building-reliable-agentic-systems" class="level2">
<h2 class="anchored" data-anchor-id="breakthrough-agents-building-reliable-agentic-systems">Breakthrough Agents: Building Reliable Agentic Systems</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/1PRcceHpJjM" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_1PRcceHpJjM.html" class="uri">https://lawwu.github.io/transcripts/transcript_1PRcceHpJjM.html</a></p>
<p>AI Summary:</p>
<p>This transcript is from a presentation by Eno, co-founder and CTO of Factory, about building reliable agentic systems for software development. Factory believes the future of software development is agent-driven, transitioning from human-driven to AI-delegated tasks.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>The Shift to Agent-Driven Development:</strong> The core idea is moving from AI-assisted coding in traditional IDEs to delegating entire tasks to AI agents for significant productivity gains (5-20x).</li>
<li><strong>Factory’s Platform:</strong> Factory is building a platform to manage and scale these AI agents, integrating various engineering tools (GitHub, Jira, observability tools, knowledge bases, internet).</li>
<li><strong>Defining Agentic Systems:</strong> An agentic system is defined by three characteristics:
<ul>
<li><strong>Planning:</strong> Creating plans with single or multiple steps.</li>
<li><strong>Decision-Making:</strong> Making data-driven decisions, referred to as reasoning.</li>
<li><strong>Environmental Grounding:</strong> Reading and writing information to the environment, reacting, and adapting.</li>
</ul></li>
<li><strong>Human Role:</strong> Humans are still crucial, focusing on the “outer loop” (requirements, architecture), while AI agents handle the “inner loop” (coding, testing, code review). It’s about delegation with control, allowing humans to steer when needed.</li>
<li><strong>Improving Agent Reliability:</strong>
<ul>
<li><strong>Planning:</strong> Decomposition of tasks, model predictive control (continuous updating), and explicit plan templating.</li>
<li><strong>Decision Making:</strong> Provide agents with decision-making criteria and context of their environment.</li>
<li><strong>Environmental Grounding:</strong> Building AI computer interfaces, controlling the tools agents use, and processing information effectively. The way you process information given to the agent is a make or break point, and the entire internet was basically built for humans, so that needs to be addressed.</li>
</ul></li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Focus on Delegation:</strong> Aim to delegate significant portions of engineering tasks to AI agents for substantial productivity improvements.</li>
<li><strong>Invest in Infrastructure:</strong> Building agentic systems requires a dedicated platform with integration capabilities, rather than incremental additions to existing IDEs.</li>
<li><strong>Prioritize Reliability:</strong> Focus on planning, decision-making, and environmental grounding to build reliable agents.</li>
<li><strong>Design for Human-AI Collaboration:</strong> Create systems that allow humans to delegate tasks but also maintain control and provide guidance when needed.</li>
<li><strong>Future is Now:</strong> Consider whether your organization is delegating at least 50% of tasks to AI. If not, it’s time to consider the strategic shift.</li>
</ul>
<hr>
</section>
<section id="from-pilot-to-platform-agents-at-scale-with-langgraph" class="level2">
<h2 class="anchored" data-anchor-id="from-pilot-to-platform-agents-at-scale-with-langgraph">From Pilot to Platform: Agents at Scale with LangGraph</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/NmblVxyBhi8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_NmblVxyBhi8.html" class="uri">https://lawwu.github.io/transcripts/transcript_NmblVxyBhi8.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the transcript, focusing on key points and takeaways:</p>
<p><strong>Main Focus:</strong></p>
<p>The presentation discusses how LinkedIn scaled its adoption of AI agents, both in terms of processing power and organizational integration, highlighting the journey from initial pilot projects to a platform-level approach.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>LinkedIn Hiring Assistant:</strong> Showcased as LinkedIn’s first production agent, automating recruiter tasks (candidate sourcing). This agent follows the ambient agent pattern, operating in the background and notifying users upon completion.</li>
<li><strong>Python Standardization:</strong> LinkedIn shifted from primarily using Java to Python for GenAI development. This was driven by the need to leverage open-source libraries and keep pace with the rapid advancements in the AI field. Java was initially used, but the limitations in experimenting with Python’s AI ecosystem led to the change.</li>
<li><strong>Service Framework:</strong> LinkedIn built a Python-based framework using gRPC, LangChain, and LangGraph to streamline the development of production-ready GenAI services. Over 20 teams and 30 services are leveraging the framework.</li>
<li><strong>LangChain &amp; LangGraph Adoption:</strong> These libraries were chosen for their ease of use and sensible interfaces, allowing for modeling of internal infrastructure and rapid prototyping. Java engineers were able to easily adopt these tools.</li>
<li><strong>Agent Platform Architecture:</strong> A new distributed architecture was created to support agentic communication, addressing challenges like long-running asynchronous flows and parallel execution. This includes:
<ul>
<li><strong>Messaging System:</strong> Agents communicate via an extended messaging service (agent-to-agent and user-to-agent).</li>
<li><strong>Agentic Memory:</strong> Layered memory system (working, long-term, collective) to provide context and history to agents.</li>
<li><strong>Skills:</strong> Skills are broader than function calling. They are centralized and registered to be exposed to agents. Skills can be other agents. Agents invoke skills synchronously or asynchronously.</li>
</ul></li>
<li><strong>Observability:</strong> Custom observability solutions are crucial for managing and debugging agentic workflows.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Embrace Python for GenAI:</strong> Prioritize Python to fully leverage the open-source AI ecosystem and accelerate innovation.</li>
<li><strong>Invest in Developer Productivity:</strong> Build frameworks and standardize patterns to simplify GenAI development and encourage wider adoption.</li>
<li><strong>Design for Asynchronous Workflows:</strong> Recognize that agents often require long-running processes and design systems that can handle them effectively. Messaging systems become crucial.</li>
<li><strong>Centralize and Share Capabilities:</strong> Skills registries promotes code reuse and team collaboration.</li>
<li><strong>Observability is Essential:</strong> Implement robust monitoring and evaluation tools to understand and improve agent performance in production.</li>
<li><strong>Don’t Neglect Production Considerations:</strong> Even with cutting-edge AI, remember standard software engineering principles (availability, reliability).</li>
</ul>
<hr>
</section>
<section id="breakthrough-agents-learnings-from-building-ai-research-agents" class="level2">
<h2 class="anchored" data-anchor-id="breakthrough-agents-learnings-from-building-ai-research-agents">Breakthrough Agents: Learnings from Building AI Research Agents</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/pKk-LfhujwI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_pKk-LfhujwI.html" class="uri">https://lawwu.github.io/transcripts/transcript_pKk-LfhujwI.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the key points and takeaways from the “Breakthrough Agents: Learnings from Building AI Research Agents” transcript:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Unify’s Core Belief:</strong> Growth should be a science, and the best products win. Go-to-market strategy is essentially a search problem to find the right customers.</li>
<li><strong>AI Research Agents:</strong> LLMs enable automating research traditionally done by sales teams, offering repeatability, observability, and scalability.</li>
<li><strong>Agent Input:</strong> Unify’s agents require two inputs from customers:
<ul>
<li>Specific questions about companies or people with defined output types (text, enum, boolean).</li>
<li>Guidance on how to conduct the research (like instructions to a high schooler).</li>
</ul></li>
<li><strong>Agent Application:</strong> Agents research thousands of companies to answer questions and facilitate targeted sales outreach. Examples include researching company downtime for incident response tool sales.</li>
<li><strong>Token Usage:</strong> Significant token usage (36 billion in April, growing since) indicates large-scale agent usage.</li>
<li><strong>Early Agent Development (V1):</strong>
<ul>
<li>Two initial agent frameworks (Sambot Mark1 and ConorAgent) were built using the ReAct framework (reasoning and acting).</li>
<li>Core tools included internet search, website search, and website scraping.</li>
<li>Sam used GPT-4.0 for faster plan generation, while Connor used 01 Preview (a stronger reasoning model) for more thorough plans.</li>
</ul></li>
<li><strong>Initial Evaluation:</strong>
<ul>
<li>Manual trace analysis revealed 01 Preview generated more thorough and specific plans.</li>
<li>Accuracy-based evaluations were introduced (percentage of correctly answered questions) using hand-labeled datasets.</li>
<li>ConorAgent outperformed Sambot in most categories.</li>
</ul></li>
<li><strong>Areas for Improvement:</strong> Three key areas were identified to improve the agents: changing the graph of the architecture, changing models and prompts, and adding more tools.</li>
<li><strong>Model and Prompt Changes:</strong>
<ul>
<li>Optimizing for cost and performance led to replacing 01 with 4.1 for agentic planning, significantly reducing costs (from ~35 cents to ~10 cents per run) with similar performance.</li>
<li>Date formatting issues highlighted the importance of prompt engineering.</li>
<li>Input schemas for tools were updated to force the tool calling agent to think more about what it was calling.</li>
</ul></li>
<li><strong>Building More Tools:</strong> Four new tools were added: deep internet research, browser access, searching HTML, and dataset access.</li>
<li><strong>Deep Internet Research:</strong> Addresses the limitations of standard internet search by mimicking human research behavior. It involves filtering sources, opening multiple tabs, and iterating search queries. The Pydantic model was updated to include arguments like category, live crawl, and domain constraints. This improves the quality of ingested content and reduces misinterpretations.</li>
<li><strong>Browser Access:</strong> Enables agents to interact with online data sources and datasets that require queries, interactive search (e.g., Google Maps), and content not easily scraped. Implemented as a sub-agent using Computer Vision Preview to decompose tasks into browser trajectories.</li>
<li><strong>Learnings from New Tools:</strong> Deep search significantly reduced misinterpretation of internet search results. Browser access unlocked completely new use cases.</li>
<li><strong>Current Champion Agent:</strong> “Kunal Browser Agent” is now in production.</li>
<li><strong>Next Steps:</strong> Focus on investing more time in evaluations to highlight issues and make the process more repeatable.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Agent Planning Matters:</strong> The quality and thoroughness of the initial plan generated by the agent significantly impacts downstream actions and accuracy. Stronger reasoning models (like 01 Preview, and now 4.1) are crucial for this.</li>
<li><strong>Evaluations are Necessary but Insufficient:</strong> Accuracy-based evaluations are a good starting point but need to be supplemented with manual trace analysis (“vibe checks”) to identify edge cases and subtle issues.</li>
<li><strong>Node-Based Evals</strong>: Models tend to spike in different use cases, so evaluate per node.</li>
<li><strong>Prompt Engineering is Critical:</strong> Seemingly minor details like date formatting can significantly impact model performance. Thoughtful prompt engineering and Pydantic model adjustments are essential.</li>
<li><strong>Mimic Human Research:</strong> Agents should be designed to mimic how humans conduct research, including iterative search, source filtering, and content analysis.</li>
<li><strong>Iterative Improvement:</strong> Building effective AI research agents is an iterative process involving constant experimentation, evaluation, and refinement of models, prompts, and tools.</li>
<li><strong>Tool Selection is Important:</strong> Computer Vision Preview was selected as a tool over other open source alternatives because of its ability to handle more complex browsing tasks.</li>
</ul>
<hr>
</section>
<section id="multi-agent-frontiers-transforming-customer-experience-with-cisco" class="level2">
<h2 class="anchored" data-anchor-id="multi-agent-frontiers-transforming-customer-experience-with-cisco">Multi-Agent Frontiers: Transforming Customer Experience with Cisco</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/gPhyPRtIMn0" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_gPhyPRtIMn0.html" class="uri">https://lawwu.github.io/transcripts/transcript_gPhyPRtIMn0.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the transcript, highlighting key points and takeaways from Cisco’s presentation on transforming customer experience with multi-agent AI:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Cisco’s Focus:</strong> Maximizing customer value on their investments through land, adopt, expand, and renew framework, emphasizing process, people, and technology.</li>
<li><strong>Vision:</strong> Elevate Customer Experience (CX) to Agentic CX, providing personalized, predictive, and proactive experiences using multi-agent AI.</li>
<li><strong>Multi-Agent Approach:</strong> Combines human and machine agents, GenAI, and traditional ML for a comprehensive service across various user interfaces (video, chat, phone, tools).</li>
<li><strong>Use Case Driven:</strong> Prioritizes use cases that deliver immediate customer value, improve operational security and reliability, and provide lifecycle visibility. A defined criteria is important to make sure that the use cases are not just based on “cool” technology but delivers tangible business value.</li>
<li><strong>Flexible Deployment:</strong> Supports on-premises, cloud, and hybrid deployment models.</li>
<li><strong>Technology Stack:</strong> Utilizes Mistral-Large, Sonnet, and shartgpt, powered by Langchain, with custom AI models (ML for predictions, fine-tuned LLMs for accuracy).</li>
<li><strong>Real-world Applications:</strong> Renews agent with predictive insights, virtual tech engineers for support automation (resolving 60% of cases fully automated). Also, sentiment analysis across the lifecycle.</li>
</ul>
<p><strong>Key Takeaways and Learnings:</strong></p>
<ul>
<li><strong>Define Use Cases and Metrics First:</strong> Don’t jump on the latest AI trend without a clear purpose and measurable goals. Define use cases that fit the business needs and can be measured for success.</li>
<li><strong>Experimentation and Production Teams:</strong> Separate teams for experimentation/prototyping and production, allowing the former to fail fast and the latter to focus on stability and performance. Have a dedicated team for evaluation with golden data sets to ensure unbiased assessment.</li>
<li><strong>Accuracy Challenges:</strong> Achieving high accuracy for enterprise use cases, especially those involving SQL databases, is difficult. Normalizing data and avoiding LLMs for complex SQL joins is crucial.</li>
<li><strong>Collaboration is Key:</strong> Inter-agent communication and collaboration is critical, going beyond existing protocols like MCP. Proposes “Agency,” an open-source architecture for agentic AI that includes a semantic layer, authentication, and agent directory.</li>
<li><strong>Workflow-centric approach:</strong> LLMs are great with language but not with workflows. Tools like LangGraph platform are better to follow deterministic workflows.</li>
<li><strong>Context is important</strong>: Going beyond MCP context to provide better hyper-personalization.</li>
<li><strong>AI-Augmented CX, Not Replacing Human Touch:</strong> Optimizing for people and maximizing returns to the business by adopting AI.</li>
</ul>
<p><strong>In essence, Cisco is leveraging multi-agent AI, facilitated by Langchain, to create a more personalized, efficient, and proactive customer experience. They emphasize a strategic, use-case-driven approach, focusing on real-world applications and acknowledging the challenges and complexities of integrating AI into existing enterprise systems.</strong></p>
<hr>
</section>
<section id="building-reliable-agents-raising-the-bar" class="level2">
<h2 class="anchored" data-anchor-id="building-reliable-agents-raising-the-bar">Building Reliable Agents: Raising the Bar</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/kuXtW03cZEA" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_kuXtW03cZEA.html" class="uri">https://lawwu.github.io/transcripts/transcript_kuXtW03cZEA.html</a></p>
<p>AI Summary:</p>
<p>This transcript is a presentation about how Harvey, an AI company specializing in legal and professional services, builds and evaluates its AI products. Here’s a summary of the key points:</p>
<ul>
<li><strong>Harvey Overview:</strong> Harvey offers AI-powered tools for legal tasks, including document summarization, drafting, large-scale document analysis, and custom workflows. Their vision is to enable users to do all their work in Harvey, accessible wherever they work.</li>
<li><strong>Quality Challenges in Legal AI:</strong>
<ul>
<li>Lawyers work with complex, lengthy documents with many references.</li>
<li>Outputs must be accurate and nuanced, as mistakes have significant consequences.</li>
<li>Quality is subjective; even factually correct answers can vary in preference due to nuance and detail.</li>
<li>Sensitive customer data makes obtaining datasets and feedback difficult.</li>
</ul></li>
<li><strong>Product Development Principles:</strong>
<ul>
<li><strong>Applied AI:</strong> Combine state-of-the-art AI with best-in-class UI to solve real-world problems.</li>
<li><strong>Lawyer in the Loop:</strong> Involve lawyers throughout the product development process (use case identification, data collection, evaluation, UI design, testing, and go-to-market).</li>
<li><strong>Prototype over PRD:</strong> Prioritize rapid prototyping and iteration over extensive documentation.</li>
</ul></li>
<li><strong>Evaluation Methods:</strong>
<ul>
<li><strong>Human Preference Judgments:</strong> Collect human feedback on model outputs, considered the highest quality signal. Use side-by-side comparisons and ratings.</li>
<li><strong>Model-Based Auto Evaluations (LLM as Judge):</strong> Create automated evaluations using LLMs, breaking down complex tasks into categories with rubrics crafted by legal experts.</li>
<li><strong>Breaking Down Complex Problems:</strong> For workflows and agents, break down the process into steps to evaluate each component separately (e.g., query rewriting, document retrieval, answer generation in RAG).</li>
</ul></li>
<li><strong>Example Launch (GPT 4.1):</strong> Demonstrates the evaluation process, including initial testing with the company’s “Big Law Bench” benchmark, followed by human evaluation, additional product-specific testing, and internal feedback.</li>
<li><strong>Learnings:</strong>
<ul>
<li><strong>Sharpen Your Axe:</strong> Invest in strong tooling, processes, and documentation to improve evaluation efficiency.</li>
<li><strong>Evals Matter, But Taste Matters Too:</strong> Balance rigorous evaluations with human judgment, qualitative feedback, and user experience.</li>
<li><strong>The Most Important Data Doesn’t Exist Yet:</strong> The next breakthrough in agentic systems will come from capturing “process data” - the undocumented knowledge of how complex tasks are performed within legal firms. This means focusing on how things actually get done.</li>
</ul></li>
</ul>
<hr>
</section>
<section id="unlocking-agent-creation-agentic-architecture-lessons" class="level2">
<h2 class="anchored" data-anchor-id="unlocking-agent-creation-agentic-architecture-lessons">Unlocking Agent Creation: Agentic Architecture Lessons</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/uNBIaANTJJw" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_uNBIaANTJJw.html" class="uri">https://lawwu.github.io/transcripts/transcript_uNBIaANTJJw.html</a></p>
<p>AI Summary:</p>
<p>This transcript is a presentation by Ben Kuss from Box about their experience in building agentic architectures for data extraction. Here’s a summary of the key points and main takeaways:</p>
<ul>
<li><p><strong>Context:</strong> Box, an unstructured data platform, initially implemented AI for content tasks like Q&amp;A, search, and data extraction. They focused on data extraction as a use case to highlight their journey towards agentic architectures.</p></li>
<li><p><strong>Problem:</strong> Initial “basic AI” approach for data extraction (document -&gt; fields -&gt; preprocessing/OCR -&gt; LLM -&gt; extracted data) worked initially but hit limitations when customers provided complex or varied documents:</p>
<ul>
<li>Large documents exceeding context windows.</li>
<li>Poor OCR quality (cross-outs, languages).</li>
<li>Requests for a high volume of data fields per document.</li>
<li>Lack of confidence scores from generative AI.</li>
<li>Difficult to scale and adapt to new document types.</li>
</ul></li>
<li><p><strong>Solution: Adopted a Multi-Agent Architecture:</strong></p>
<ul>
<li>Re-architected from scratch using an agentic approach, separating the problem into a series of sub-agents.</li>
<li>Created specialized agents with specific routines.</li>
<li>Each sub-agent solves specific problems (preprocessing, OCR, field grouping, data extraction, quality feedback).</li>
<li>Quality feedback loop allows the AI to try different techniques for accuracy.</li>
<li>Dynamic selection of tools and methods (e.g., using different models, page images in addition to OCR).</li>
</ul></li>
<li><p><strong>Benefits of Agentic Architecture:</strong></p>
<ul>
<li>Solved initial problems and improved accuracy.</li>
<li>Easy to update and evolve the system for new document types.</li>
<li>Clean abstraction for engineers, simplifying development and maintenance.</li>
<li>Facilitated specialized agents for different document types.</li>
<li>Enabled quicker response to customer issues.</li>
</ul></li>
<li><p><strong>Unexpected Benefits:</strong></p>
<ul>
<li>Engineers started thinking more about customer needs.</li>
<li>Improved understanding of how customers use Box as a tool in their own agentic systems.</li>
<li>Contributed to building an AI-first engineering organization.</li>
</ul></li>
<li><p><strong>Key Takeaway/Advice:</strong> Build agentic systems early when implementing intelligent features. This approach provides a better abstraction, is easier to evolve, and encourages a customer-centric engineering mindset.</p></li>
</ul>
<hr>
</section>
<section id="how-monday.com-built-their-digital-workforce" class="level2">
<h2 class="anchored" data-anchor-id="how-monday.com-built-their-digital-workforce">How Monday.com Built Their Digital Workforce</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/P8ewpJrZVwo" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_P8ewpJrZVwo.html" class="uri">https://lawwu.github.io/transcripts/transcript_P8ewpJrZVwo.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of Asaf’s presentation on how Monday.com is building their digital workforce with LangGraph, highlighting key points and takeaways:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Monday.com’s Scale &amp; Opportunity:</strong> Processes 1 billion tasks per year, representing a massive opportunity for AI-powered agents. They’ve seen rapid growth (100% MoM) in AI feature usage.</li>
<li><strong>Digital Workforce Vision:</strong> Agents working within the Monday.com ecosystem to handle various tasks for SMBs and enterprises.</li>
<li><strong>Trust &amp; User Experience are Paramount:</strong> The biggest barrier to AI adoption isn’t technology, but user trust. Focus on UX is crucial.</li>
<li><strong>Autonomy &amp; Control:</strong> Users want control over agents’ actions. Giving users control increases adoption.</li>
<li><strong>Seamless Integration:</strong> Integrate AI agents into existing workflows and UIs instead of creating entirely new experiences. Assign agents to tasks like assigning people.</li>
<li><strong>Preview &amp; Validation:</strong> Implement previews (UI in the Loop) so users can review agent outputs before they are pushed to production, ensuring confidence and preventing unexpected changes, which increased adoption.</li>
<li><strong>Explainability is Crucial:</strong> Explainability helps users understand <em>why</em> the AI made certain decisions, enabling them to improve their experience with AI over time by adjusting inputs.</li>
<li><strong>LangGraph as the Foundation:</strong> Monday.com built its agent ecosystem on LangGraph and LangSmith, citing its flexibility, built-in features (interrupts, checkpoints, memory), and scalability (millions of requests per month).</li>
<li><strong>Architecture:</strong> LangGraph at the center, surrounded by internal AI blocks, an evaluation framework, and an AI gateway for input/output control.</li>
<li><strong>Monday Expert Example:</strong> Conversational agent with a supervisor managing data retrieval, board actions, and answer composition agents. It has an “undo” feature.</li>
<li><strong>Lessons Learned (Conversational Agents):</strong>
<ul>
<li>Assume you can’t handle 99% of interactions. Implement fallbacks.</li>
<li>Evaluations are your IP as models change rapidly</li>
<li>Human-in-the-loop is critical to achieve product quality.</li>
<li>Build guardrails <em>outside</em> the LLM.</li>
<li>Balance the number of agents in multi-agent systems to avoid compound hallucination.</li>
</ul></li>
<li><strong>Future of Work: Orchestration:</strong> Aim for a finite set of specialized agents that can be dynamically orchestrated to handle infinite tasks, mimicking human work patterns.</li>
<li><strong>Marketplace:</strong> Opening up their agent marketplace.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li>Building a successful AI-powered digital workforce requires a strong focus on user trust, seamless integration into existing workflows, and providing users with control and explainability.</li>
<li>LangGraph provides a solid foundation for building and scaling agent ecosystems, offering the necessary flexibility and built-in features.</li>
<li>Continuous evaluation, human-in-the-loop feedback, and external guardrails are crucial for improving agent performance and ensuring safety.</li>
<li>The future of work involves dynamically orchestrating specialized agents to handle a wide range of tasks, mirroring how humans collaborate.</li>
</ul>
<hr>
</section>
<section id="from-llms-to-agents-the-next-leap" class="level2">
<h2 class="anchored" data-anchor-id="from-llms-to-agents-the-next-leap">From LLMs to Agents: The Next Leap</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/_XWJdCZM8Ag" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript__XWJdCZM8Ag.html" class="uri">https://lawwu.github.io/transcripts/transcript__XWJdCZM8Ag.html</a></p>
<p>AI Summary:</p>
<p>This is a summary of a fireside chat with Adam D’Angelo, co-founder and CEO of Quora, focusing on Poe and the future of AI.</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Poe’s Inspiration and Vision:</strong> D’Angelo and Quora recognized early on that interacting with large language models would be best through a chat-like interface. Poe aims to be a universal interface for diverse AI models and agents, similar to how web browsers enabled the internet’s growth.</li>
<li><strong>Consumer Use Cases:</strong> Consumers use AI on Poe for various tasks, including writing assistance, question answering, role-playing, homework help, job assistance, media creation, and marketing. Poe’s central value is providing access to many AI products under a single subscription.</li>
<li><strong>Popular Models:</strong> Reasoning models have seen significant growth in usage. These include models that are especially strong in writing code.</li>
<li><strong>Modalities:</strong> Text models dominate usage, but there is excitement around new image models, though they are not yet as practical or economically valuable as text models.</li>
<li><strong>Model Preference:</strong> Poe users often care about the specific model they use, especially when aiming for the best results in tasks like creative writing. They may test different models to find the best one for their needs.</li>
<li><strong>Bot Creation on Poe:</strong> Users can create bots via prompting (prompt bots) or through server bots.</li>
<li><strong>Agent Builders:</strong> Prompt bots are created by people who are empathetic with the model and persistent in trying different cases. Server bots are created by more sophisticated developers and AI model developers.</li>
<li><strong>Monetization:</strong> Bot creators can monetize their bots on Poe, with some earning significant revenue (millions of dollars per year for companies, hundreds of thousands for individuals).</li>
<li><strong>Agents:</strong> Most agents on Poe are currently read-only, focusing on generating artifacts rather than taking real-world actions. Poe aims to enable agents with real-world actions in the future.</li>
<li><strong>Most Promising Areas for Developers:</strong> Building agents is the most promising area, specifically building things more sophisticated than a simple prompt, but not as sophisticated as training a new model or fine-tuning.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li>Poe is positioning itself as a key platform in the AI ecosystem, connecting users with diverse models and enabling creators to build and monetize AI applications.</li>
<li>The field is rapidly evolving, with new models and capabilities emerging frequently, requiring constant adaptation.</li>
<li>The future of AI will involve increasingly powerful models, particularly in areas like code generation, which will lead to an explosion of software development.</li>
<li>D’Angelo is particularly excited about the future of code generation applications, and how tools within Poe like App Creator will improve as the code generation abilities of models continue to grow.</li>
</ul>
<hr>
</section>
<section id="state-of-agents-with-andrew-ng" class="level2">
<h2 class="anchored" data-anchor-id="state-of-agents-with-andrew-ng">State of Agents with Andrew Ng</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/4pYzYmSdSH4" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_4pYzYmSdSH4.html" class="uri">https://lawwu.github.io/transcripts/transcript_4pYzYmSdSH4.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the key points and main takeaways from Andrew Ng’s fireside chat:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Agentic-ness Spectrum:</strong> Focus on the degree of “agentic-ness” (autonomy) in a system rather than arguing whether it is “truly” an agent. This helps avoid unproductive debates and encourages building systems with varying levels of autonomy.</li>
<li><strong>Business Opportunities in Simpler Workflows:</strong> Many business opportunities exist in automating fairly linear workflows with occasional branches (e.g., data entry, compliance checks). The challenge lies in breaking down processes into micro-tasks and knowing which steps to improve.</li>
<li><strong>Essential Skills for Agent Builders:</strong>
<ul>
<li>Integrate data effectively and use tools like LandGraph.</li>
<li>Prompting and processing data through multiple steps.</li>
<li>Implement a robust evaluation (evals) framework to assess system performance and pinpoint areas for improvement (individual steps).</li>
</ul></li>
<li><strong>The “Lego Brick” Analogy:</strong> AI tools are like Lego bricks; the more diverse the tools (evals, RAG, guardrails, memory techniques), the more complex and effective systems you can build. Lack of familiarity with specific tools can significantly slow down development.</li>
<li><strong>Evals are Underrated:</strong> People often delay implementing systematic evals. Start with simple evals to address specific regressions and incrementally improve them.</li>
<li><strong>Voice Stack Potential:</strong> Voice applications are underrated, with significant enterprise interest. Voice interactions can reduce user friction compared to text prompts. Key considerations for voice include latency and user experience tweaks (e.g., pre-responses, background noise).</li>
<li><strong>AI-Assisted Coding:</strong> Companies should embrace AI-assisted coding to significantly boost developer productivity. Everyone should learn to code to better instruct computers and understand error cases.</li>
<li><strong>Importance of MCP:</strong> MCP is a fantastic way to try to standardize the interface to a lot of tools or API calls as well as data sources and can significantly streamline data integration for AI systems and should significantly reduce the amount of time spent working on plumbing. It allows one to avoid having to do N times M integrations with N models and M data sources.</li>
<li><strong>Agent to Agent is very early:</strong> It is difficult to get code to work and the idea of having to make code work with someone elses agent feels like a two miracle requirement.</li>
<li><strong>Vibe Coding:</strong> Vibe coding is essentially using AI-assisted coding to code and while it is an effective and real phenomenon, the name is misleading.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li><strong>Practicality over Perfection:</strong> Don’t get caught up in theoretical debates. Focus on building practical systems with the appropriate level of agentic-ness for the task.</li>
<li><strong>Master the Fundamentals:</strong> Data integration, prompting, processing, and systematic evals are crucial for building successful agentic systems.</li>
<li><strong>Embrace the Toolset:</strong> Familiarize yourself with a wide range of AI tools and be ready to adapt as the landscape evolves.</li>
<li><strong>Voice is Coming:</strong> Pay attention to voice applications; they offer unique interaction advantages.</li>
<li><strong>AI-Assisted Coding is a Must:</strong> Encourage and enable the use of AI coding assistants to boost developer productivity.</li>
</ul>
<hr>
</section>
<section id="building-reliable-agents-agent-evaluations" class="level2">
<h2 class="anchored" data-anchor-id="building-reliable-agents-agent-evaluations">Building Reliable Agents: Agent Evaluations</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/DsjkO2vB618" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Transcript: <a href="https://lawwu.github.io/transcripts/transcript_DsjkO2vB618.html" class="uri">https://lawwu.github.io/transcripts/transcript_DsjkO2vB618.html</a></p>
<p>AI Summary:</p>
<p>Here’s a summary of the transcript, highlighting key points and main takeaways from the presentation on Agent Evaluations:</p>
<p><strong>Key Points:</strong></p>
<ul>
<li><strong>Quality is the Biggest Blocker:</strong> A survey revealed that the biggest hurdle in deploying agents to production is ensuring quality.</li>
<li><strong>Eval-Driven Development:</strong> Using evaluations (evals) throughout the development process is crucial for bridging the gap between prototype and production.</li>
<li><strong>Evals as a Continuous Journey:</strong> Emphasized that evals should be a continuous process throughout the entire lifecycle of an agent, not a one-time activity.</li>
</ul>
<p><strong>Three Types of Evals:</strong></p>
<ol type="1">
<li><strong>Offline Evals:</strong>
<ul>
<li>Performed before production.</li>
<li>Uses a static data set to measure performance.</li>
<li>Allows comparison of different models/prompts.</li>
</ul></li>
<li><strong>Online Evals:</strong>
<ul>
<li>Conducted on a subset of production data in real-time.</li>
<li>Tracks performance with real user queries.</li>
</ul></li>
<li><strong>In-the-Loop Evals:</strong>
<ul>
<li>Occur during the agent’s runtime.</li>
<li>Aims to correct the agent’s behavior on the fly, blocking bad responses.</li>
<li>Most beneficial when tolerance for mistakes is low or latency isn’t critical.</li>
</ul></li>
</ol>
<p><strong>Components of Evals:</strong></p>
<ul>
<li><strong>Data:</strong> The information used for evaluation (data sets, production data, etc.).</li>
<li><strong>Evaluators:</strong> The methods used to score performance (code, LLMs, human annotation).
<ul>
<li><strong>Ground Truth/Reference Evals:</strong> Compare against a known correct answer.</li>
<li><strong>Reference-Free Evals:</strong> Used when a ground truth is unavailable.</li>
</ul></li>
</ul>
<p><strong>How Langtrain Helps:</strong></p>
<ul>
<li><strong>Observability:</strong> Great evals start with great observability.</li>
<li><strong>Tracing in Langsmith:</strong> Tracks inputs, outputs, and steps, facilitating online evals.</li>
<li><strong>Easy Dataset Creation:</strong> Langsmith provides tools to easily add data to sets for offline evals.</li>
<li><strong>Open Source Evaluators:</strong> Providing a set of open-source evaluators for common use cases (code, RAG, extraction, tool calling).</li>
<li><strong>Customizable Evals:</strong> Allowing configuration for specific use cases, including LLM-as-a-judge and agent trajectory evaluations.</li>
<li><strong>Chat Simulations:</strong> Launching utilities to run and score evaluators in conversational settings.</li>
<li><strong>Align Eval and Eval Calibration (Private Preview):</strong> New features to help with LLM-as-a-judge techniques, addressing the challenges of prompt engineering and trust.</li>
</ul>
<p><strong>Main Takeaways:</strong></p>
<ul>
<li>Evals are an ongoing process that should be integrated throughout the agent’s lifecycle.</li>
<li>Data and evaluators are the two fundamental components of any evaluation type.</li>
<li>Langtrain provides tools and resources to simplify data set creation, run evals, and build custom evaluators.</li>
<li>LLM-as-a-judge evaluators are powerful but require careful setup and calibration.</li>
</ul>


</section>

 ]]></description>
  <category>LangChain</category>
  <category>Conference</category>
  <category>Recap</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-05-23-langchain-interrupt-2025-recap/</guid>
  <pubDate>Fri, 23 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Andrew Ng &amp; Harrison Chase Fireside Chat</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-05-13-andrew-ng-harrison-chase-fireside-chat/</link>
  <description><![CDATA[ 




<p>The questions and answers extracted from the fireside chat between Harrison Chase (LangChain) and Andrew Ng (AI Fund) at LangChain Interrupt 2025.</p>
<hr>
<section id="q1-what-is-agenticness-and-has-your-thinking-changed" class="level2">
<h2 class="anchored" data-anchor-id="q1-what-is-agenticness-and-has-your-thinking-changed">Q1: What is “agenticness,” and has your thinking changed?</h2>
<p><strong>Andrew Ng:</strong><br>
The debate over whether something “is an agent” is less productive than discussing <em>degrees of autonomy</em>. It’s more useful to see systems on a spectrum—from simple automation to full autonomy—rather than binary classification. Many business workflows are linear and agentic to a low degree but still valuable.</p>
<hr>
</section>
<section id="q2-what-skills-are-most-important-for-building-agent-systems" class="level2">
<h2 class="anchored" data-anchor-id="q2-what-skills-are-most-important-for-building-agent-systems">Q2: What skills are most important for building agent systems?</h2>
<p><strong>Andrew Ng:</strong><br>
- Break down complex tasks into modular steps<br>
- Define the right KPIs (including evals)<br>
- Interpret traces, debug step-by-step<br>
- Develop “tactile knowledge” by building, testing, and iterating<br>
- Use many tools to strengthen decision-making intuition</p>
<hr>
</section>
<section id="q3-is-that-tactile-knowledge-mostly-about-llms" class="level2">
<h2 class="anchored" data-anchor-id="q3-is-that-tactile-knowledge-mostly-about-llms">Q3: Is that tactile knowledge mostly about LLMs?</h2>
<p><strong>Andrew Ng:</strong><br>
It extends beyond LLMs. Think of tools like Lego bricks—the more diverse your pieces, the more flexible your build. You need squiggly, odd-shaped blocks sometimes, not just standard ones. Practicing with a wide toolset helps build strong product instincts.</p>
<hr>
</section>
<section id="q4-what-lego-bricks-are-underrated" class="level2">
<h2 class="anchored" data-anchor-id="q4-what-lego-bricks-are-underrated">Q4: What “Lego bricks” are underrated?</h2>
<p><strong>Andrew Ng:</strong><br>
<strong>Evals.</strong><br>
People think they need to be comprehensive and perfect. Start with something fast and imperfect—5 examples and a simple check. Use it to catch regressions. You’ll naturally improve it over time.</p>
<hr>
</section>
<section id="q5-any-underrated-application-areas" class="level2">
<h2 class="anchored" data-anchor-id="q5-any-underrated-application-areas">Q5: Any underrated application areas?</h2>
<p><strong>Andrew Ng:</strong><br>
<strong>Voice stack applications.</strong><br>
They’re low-friction for users but underexplored. Latency expectations make them hard (users expect 1–2s responses), but agents + voice stack pipelines are more controllable than end-to-end speech models.</p>
<hr>
</section>
<section id="q6-is-building-voice-agents-similar-to-text-based-ones" class="level2">
<h2 class="anchored" data-anchor-id="q6-is-building-voice-agents-similar-to-text-based-ones">Q6: Is building voice agents similar to text-based ones?</h2>
<p><strong>Andrew Ng:</strong><br>
Skills are transferable, but differences matter: - Voice has tighter latency constraints - Pre-response fillers (“Hmm…”) help mask lag - Background noise helps users tolerate delays - Voice interactions are more forgiving and expressive than typed ones</p>
<hr>
</section>
<section id="q7-thoughts-on-mcp-model-component-protocol" class="level2">
<h2 class="anchored" data-anchor-id="q7-thoughts-on-mcp-model-component-protocol">Q7: Thoughts on MCP (Model Component Protocol)?</h2>
<p><strong>Andrew Ng:</strong><br>
MCP is a promising step toward standardized tool calling and integration.<br>
Today’s structure is flat, but future versions need hierarchy and composition.<br>
MCP could help unify models, tools, and data across ecosystems.</p>
<hr>
</section>
<section id="q8-what-about-agent-to-agent-protocols" class="level2">
<h2 class="anchored" data-anchor-id="q8-what-about-agent-to-agent-protocols">Q8: What about agent-to-agent protocols?</h2>
<p><strong>Andrew Ng:</strong><br>
Still early. Multi-agent systems work within single teams, but cross-team agent collaboration isn’t there yet. We’re a few steps away from successful real-world examples.</p>
<hr>
</section>
<section id="q9-do-you-like-the-term-vibe-coding" class="level2">
<h2 class="anchored" data-anchor-id="q9-do-you-like-the-term-vibe-coding">Q9: Do you like the term “vibe coding”?</h2>
<p><strong>Andrew Ng:</strong><br>
Not really.<br>
The name is misleading—it sounds effortless, but it’s cognitively intense.<br>
Coding is becoming more accessible, not obsolete.<br>
Understanding how code works is still essential for prompting and debugging.</p>
<hr>
</section>
<section id="q10-advice-for-ai-startup-founders" class="level2">
<h2 class="anchored" data-anchor-id="q10-advice-for-ai-startup-founders">Q10: Advice for AI startup founders?</h2>
<p><strong>Andrew Ng:</strong><br>
- <strong>#1 predictor of success: SPEED</strong><br>
- <strong>#2: Technical depth</strong><br>
Business knowledge is widespread, but deep tech knowledge and instincts are rare and differentiating.</p>
<hr>
</section>
<section id="full-transcript" class="level2">
<h2 class="anchored" data-anchor-id="full-transcript">Full Transcript</h2>
<p>Transcribed by whisper-small</p>
<p>[INAUDIBLE] This is a track that we see more and more as a lot of the building blocks are starting to get figured out. I’m really excited for this next section. So we’ll be doing a fireside chat with Andrew and Andrew. Probably doesn’t need any introduction to most of our stuff here. I’m guessing a lot of people are thinking as soon as classes begin to work, Sarah will learn deep learning. But I have to admit that this is a big part of the building thing of the story. So I met Andrew a little over two years ago at a conference. We started talking about LinkedIn and he graciously invited us to do a course on LinkedIn. He’s learning, I think, in my son’s best of a second or third one that they ever did. And I know a lot of people here would probably watch that course or I started on LinkedIn because of that course. So Andrew has been a huge part of the LinkedIn journey and I’m super excited to welcome him on stage for a fireside chat. So let’s welcome him to it. [Applause] [Music] [Inaudible] [Inaudible] You’ve obviously touched and thought about so many things in this industry. But one of their takes that I cite a lot and probably people have talked about is your take on kind of like talking about the agendicness of an application as opposed to whether something is an agent. You know as we’re here now at an agent conference, maybe we should rename it to an adjunct conference, but would you mind clarifying that? And I think it was like a year and a half, two years ago that you said that and so I’m curious if things have changed in your mind since then. I remember I mentioned, how was it when I spoke at a conference over a year ago and at that time I think both of us were trying to convince a lot of people that agents are a fling machine. And that was before maybe I think it was this summer last year, a bunch of law underscored the agent in terms of starting to save that sticker everywhere it was. But to her, especially, I mean about a year and a half ago I saw that long people are arguing this is an agent, this is not a particular thing. My presence is a child of law, this is not an agent. And I felt that it was not at the argument that we would succeed. And I think that as a community we just say that there are decreases in something that is an agent. So then we just say that if you want to know an agent system, you can move with autonomy or a lot of autonomy, there’s a high ability to spend time arguing. This is truly an agent. That’s just how it seems an agent system to a different decrease in autonomy. And I think that actually hopefully producing a ton of people, at least it’s been argued that something is an agent. This is called an all-agent thing. Where on that spectrum of kind of like a little autonomy to a lot of autonomy do you see people building for this system? So on the team, the team uses many of these problems, right, with complex problems and so on. I’m also seeing tons of these opportunities that frankly are fairly in danger for a food system, they’re just vocational cyber-assures. So a lot of businesses are opportunities where you’re right now with people looking to form a website, doing a website, checking something. They would be able to see if it’s a compliance issue or if there are some issues, some certain stuff too. It’s kind of like take something, copy paste it into a website, do it in a different way. So in business processes they’re actually a lot of fairly free work. Those are linear with very small business-paginal branches. Usually you could look into a failure with a rejected smartphone though. So I see a lot of work too. But one of my challenges I see businesses have is it’s still pretty difficult to look at some stuff that’s being done in business and figure out how to turn it into a new, gender-work mode. So for this degree of granularity, we should try to bring down the state into a micro-touch and then out to people in the financial prototype. It doesn’t work well enough. Originally, SEVS team worked hard to improve performance. I think that whole bag of skills on how to look at a bunch of stuff that people are doing, break into sequential steps, where the small number of branches hardly put in place in the VALS, all that, that skillset is still hard to work with. And then of course in the national conference agency, I think you heard much about the very complex and most stuff that’s very valid as well. But I see much more in terms of number of opportunities that are now valid. There’s a lot of simple things that I think are still being done as well. Let’s talk about some of those skills. So you’ve been doing deep learning and a lot of courses are in pursuit of helping people kind of build a general. So what are some of the skills that you think each and every one of those all across the spectrum should kind of like master and get started with? Well, it’s a good question. I wish I could answer that. I think a lot about this actually is that I think one of the challenges of having a business process run through your law firm, which would be compliance, people, and the job, whatever the steps. How do you put the business in the background, type integration, how to see if the CEP helps us on that too, to adjust the data, and then how do you process and model steps to build this into a system? And one thing I see about this, putting in place the right key values for your work, to not only understand the performance of your process, but to trace the individual steps, to put in less than one step that is broken, less than one step that is broken to work on. I find that a lot of the teams probably would walk in the nation just using changing key values very effectively. You can sit there and talk about your own things. I see most teams probably slowly take over the place of key values, systematic values in this item. But I find that having the right mistakes, slowly taking two days to college, is still really difficult. The school teams, the teams are still learning how to deal with the off and build-down line-out of these very recent, like a few months, trying to improve one group or another. The most, as he would say, I don’t think this can ever be made to work, so just don’t just find the different variables as well. I wish I had been more efficient to get this almost tactile knowledge. Often you’re there, you know, look at the output, look at the trace, look at the last output, and just sort of make a decision, right, in minutes or hours on the two-to-mix, and that’s still very difficult. And is this kind of like tactile knowledge mostly around LLMs and their limitations, or more around like just the product, bringing those things and that skill of taking a job and breaking it down, that’s something that’s still getting to us. I think it’s all we need, actually. So I feel like over the last couple of years, the AI2 companies have created an amazing set of tools that this includes tools like, you know, that graph also helped you. I guess like, how do you think about the chat box, of many, many different ways of approaching family, and what else, how do you believe that was helping with the audience. But I feel like there’s this, you know, one strong link, a range of various I think tools. But what I’m trying to have in my head is, if all you have are, you know, purple makeup breaks, right, you can’t build out a GCC stuff. And I think of these tools as being the kinds of makeup breaks, right, that the more tools you have, it’s as if you don’t just have purple makeup breaks, but the red one, the black one, the yellow one, the blue one. And as you get more different colors and shades of makeup breaks, you can very quickly assemble them into really cool things. And so I think a lot of these tools, they want those random products, different types of makeup breaks. And when you’re trying to build something, you know, sometimes you need that very squiggly, weird-shaped makeup break, and some of you want to go with a makeup bucket, and just get the job done. But if you’ve never built e-dots at a certain time, then, you know, then you could actually end up spending three or two months doing something that someone else has done that before, because they all, well, we should just build e-dots this way, just to know how to manage it more. And just go through that process and get it done much faster. So one of the unfortunate things about AI is that it’s not just one tool that in my coding, I just use a whole bunch of different stuff, right, a lot of master, and I’ve stopped myself from doing enough tools to set that up. And I think how that practice with different tools also helps a lot of the chasm decision making. And one of the things, they’ve also changed, so for example, just all of a sudden, having longer, longer context, longer best practices, or rag, from, you know, a year and a half ago, or whatever, much less than today. You know, and ever, Harrison was pretty early, he took off the same cycle, played with a early man, changed rag frameworks, the crystal civilization and all that. As Elm Contest Reviews got longer, now we’ve just done the long stuff into our columns. As Elm’s practice got way, but the hyper-fronted team has gotten way easier. It’s a huge range of hyper-fronted that we’re, you know, just fine. So as Elm keeps practicing, the instincts will be holy, you know, two years ago, but they won’t be helping rather than you want to. You mentioned a lot of things that I want to talk about. So, okay, what are some of the level breaks that are maybe underrated right now that you would recommend that people aren’t talking about? Like, e-balls, I think, we have had, we have three people talking about e-balls, and I think that’s top of people’s mind. But what are some things that most people maybe haven’t thought of or haven’t heard of yet that you would recommend that we’re moving into? Good question. I don’t know. I’m sure, even though people talk about e-balls, there’s some ways that people don’t do it. I think it’s because people often have, I saw a post on e-balls right this long, people think of writing e-balls as this huge thing you have to do, right? I think that e-balls is something I’m going to fill together really quickly, you know, in 20 minutes, and it’s not that good, but it starts to complement my human eye-ball e-balls. And so what often happens is that our system has this one problem, right, do you want to get an e-bression? I thought I made it work, and it breaks, I’m sure our average of $1,000 has gotten a $1,000. Then the code is a very simple e-mail, maybe with, you know, five different examples, and some very simple administration to just check for this one regression, right, to this one thing. And then I’m not swapping out human e-mails for a multimeter e-mails, and I’m still looking all through my cell, but when I change something out from just e-mails to just take this word and something, psycho-pattern thing about it, and then what happens is, just like the way we write English, maybe, once you have some slightly helpful but clearly very broken imperfect e-mail, then you’re sad, you know what, I can improve my e-mail to make it better, and I can improve the e-mail to make it better. So just as when we build a lot of applications, we build some very quick and dirty thing that doesn’t work, and we improve e-mail better. From all of the way I go e-mails, I go really all-only-mails, they’re very home, and then when you look at what it does, you go, you know, it’s just e-mails broken, I can fix it, and you improve my e-mail to make it better. So that’s one thing. Actually, one thing that people have talked about, and I think is so automated, is the voice stack. This one thing is that I’m actually very excited about voice applications, a lot of my friends are very excited about voice applications. I see a bunch of logic interfaces, very excited about voice applications, very logic, very logic interfaces. For some reason, while there are some developers in this community to voice the amount of developer attention on voice stack applications, there is software, it’s not really a good thing, but that’s one thing that feels so much smaller than the large enterprise of the important ICS, which is what’s happening on the market. And not all of this is the real-time voice-in-house, it’s not all speech-to-speech-native, what we’re working on, all of this. I find those models are very hard to control, but we use more of an agent-to-e-voice stack for the code, which is great, which we find much more controllable. So, in the end, I’ve been working with a ton of teams on voice stack stuff that some of which hopefully did not seem to be a big problem. And then, other things that are automated, one of the ones that make this not automated, and one of those that should do it, I think many of you have seen that developers that use AI systems in our company is so much faster than developers that don’t. I’ve been, it’s been interesting to see how many companies, CIOs and CTOs still have policies that don’t let the geniuses use AI systems in their company. I think maybe sometimes they’re good reasons, but I think we have to work with them, because I think my teams in our hour just hate to ever have to code again with AI systems in their company, so I think some of this is just something different. I think underrated is the idea that I think everyone should learn to code. One fun fact about AI fun, everyone in the iPhone, including the person that runs out front is perceptionist, and my CFO, and my attorney, and the general counsel, everyone in the iPhone actually knows how to code. It’s not that one day to solve it, it’s not that they respect their job functions, maybe as a member of the code, but they’re able to tell the computer what they wanted to do, and so it’s actually driving the whole productivity across all of these job functions that are not solved in AI. Talking about AI, what tools are you using for that first time? So, we’re working on something that will not get announced. Exciting. So, maybe I do use cursor, red server, and some other things. Alright. Talking about voice, if people here want to get into voice and they’re familiar with building kind of like agents with LLMs, how similar is it? Are there a lot of ideas that are transferable, or what to do, what will they have to learn? So, in terms of the applications where I think voice is important, to increase certain interactions that are not much more important, in terms of the application perspective, input text problems are kind of intimidating. For other applications, we’re going to use the same type of machine, because it’s a local text problem, very much a text problem. That’s very intimidating for users. And one of the problems with that is people can use backspace, and so people are just slowly learning to respond via text. Whereas, the voice, time rules for when you’re just thinking, talking, you could change your mind, and you could say, “Oh, I changed my mind to get that early thing that I wanted, which is pretty good to do.” But I find that the amount of applications for the user are friction to just giving them to use in this little way. So, you know, tell me what you think, and then they respond to voice. So, in terms of voice, one of the biggest differences in terms of agent and client is the expectancy, is if someone says something, and I don’t really want to respond, you know, in some point or second, right? And that’s a fact that in those seconds is great, but really, I’m going to use something in a second. And with a lot of agent work flows that were run for many seconds. So, when you do that, then I want to grow avatar to build an avatar, and that is on my vision, tell the avatar if you want. I mean, this show version had kind of, I think, nine seconds of this, and it’s just an ad user experience. So, it’s something, you know, nine seconds of silence that might have to respond. But some of the building things went from a kind of pre-response. So, just as if you ask a question, I go, “Huh, that’s interesting.” [laughter] So, how to basically do that to hide the latency, and it actually seems to work great. And there are all these other little tricks as well. So, if you’re building a voice console service to chatbot, it turns out that when you play background noise at a console contact center, it’s a dead silence. People are much more sensitive of that, of that latency. So, I find that there are all of these things that are different in a pure text based algorithm. But in applications where a voice based modality doesn’t use to be comfortable and just not talking, I think it’s sometimes really good to use this to use a friction. So, I’m going to give you some information on that. I think when we talk, we don’t feel like we need to deliver perfection as much as we’re afraid. So, somehow, you see a bridge just starting to tell your ideas and change them on, and then we’re going to fail. And that lets us get the information from them that we need to help you use it to the point. [inaudible] Hi. [laughter] One of the new things that’s out there you mentioned recently is MCP. How are you seeing that transform of how people are building apps, what types of apps are building or what’s happening in the ecosystem? Yeah, I think it’s really exciting. Just this morning, we released a new enthralment, I’m sure, was an MCP. I actually saw a lot of stuff, you know, on the internet on MCP that I found quite confusing. So, what’s going on there is that, you know, let’s put a really good short pause on MCP that explains security. I think MCP is fantastic. I think it’s very clear, properly, that that open app adopted it. Also, I think it’s based on the importance of this. I think the MCP’s standard won’t continue to evolve. So, for example, I think many of you know what MCP is, right? It’s much easier for agents primarily, but frankly, I think other types of software took over the two types of data. When I’m using OBS myself or when I’m building applications, frankly, for all of us, we spend so much time on the platform, right? So, I think, for those of you from Washington, Pryce, as well, the AI, especially, you know, using OBS, are pretty darn intelligent to evolve stuff when doing the right context. So, I found that I spent my time working and applying on the data integration to get the context of the OBS to make it feel like it’s something that offers a pretty sensible market spread for the context. So, MCP, I think, is a fantastic way to try to standardize interface to other tools. You can call us as well, say, as well as this. It feels like, it feels a little bit like, wow, as long as the MCP serves, you finally internet do your work, right? And then the authentication systems are kind of, you know, even for the very large companies, you know, the MCP service of the company, the nuclear authentication token, token worlds, and these bias along that way on. I think the MCP protocol itself is also really, right now, MCP gives a long list of the resources in the role. You know, eventually, I think we’ll be something more hierarchical and destructive. So, imagine you want to build something, I don’t know, I know that there will be an MCP interface to a land graph, but land graph is still the API calls, you just kind of have like a long list of everything under the sun for agents to sort out. So, I think MCP is a really good task at first step. Definitely encourage you to learn about it. It won’t make your life easier. Probably, you’ll find a good MCP service in the communications service, in the communications operations. I think what we’re important is this idea of, you know, any models for agents and data sources, they show up in any type of effort to do all the integration and plus them. I think MCP is a fantastic first step. It will need to be all like a fantastic first step to what the data integration is. Another type of protocol that seems less likely than MCP is the agent-to-agent system. And I remember when we were in Harvard a year or so ago, I think you were talking about multi-agent systems, which this kind of enabled. So, how do you see some of the multi-agent or agent-to-agent stuff of the protocol? So, I think, you know, agent and AI are still so early. Both of us, right, we struggle, we didn’t make our code work. And so, making my code, my agent work with someone else’s agent, it feels like a two-miracle. [laughter] So, I see that one team is building multi-agent systems. That often works because people have a bunch of agents, they can be themselves and their protocols, that works. But right now, at least at this moment in time, maybe I’m off. The number of examples I’m seeing of when, you know, one team’s agent and correction agent successfully made agents, it’s totally different teams’ agent and correction agents. I think we’re a little bit early to that. I’m sure we’ll get there, but I’m not personally seeing, you know, real success, pure success stories of that. Yeah, I don’t think that’s true. No, I think it’s super early. I think if MCP is early, I think the agent stuff is super early. Another thing that’s kind of like top of what’s mine right now is it’s kind of vibe coding. And all that, I touched on it a little bit earlier with how people are using these AI coding systems. But how do you think about vibe coding? Is that a different skill than before or what kind of a mis-disaster? Yeah, so I think many of us code, we’re barely looking at the code, right? I think it’s a fantastic thing to do. I think it’s unfortunate that that code, “vine coding” is misleading a lot of people. I think it just goes by, you know, just like that. And frankly, when I’m coding for a day, you know, with vinyl or whatever, I forget code systems, I’m frankly exhausted by the end of the day, so I’m thinking it’s an Android device. And so I think the name is unfortunate, but the phenomenon is real and it’s been taking part in this great. So, I mean, over the last year, a few people have been advising others to come up to code on the basis that they have more to be coding. I think we’ll back this on the worst career advice that we’ve ever done. Because over the last many decades, as coding is getting easier, more people started to code. So it turns out, you know, when we went from punch-cost to key-cost, that’s how it went, very well. But it turns out, actually, thousands of variable algorithms went probably from a sending language to a literally code wall. There were people arguing back then, “Yeah, code wall is so easy, we don’t need programs anymore.” And I’ll say, it’s getting easier, more people are going to code. And so, we’ve been coding systems, more people should code. But I think, and it turns out, one of the most important schools in the future for developers and developers, is the ability to tell a code to exactly what you want, so they want to do it for you. And I think understanding at some level, which I’ll be talking about, understanding at some level how a computer works, lets you prompt on a stronger future, so they’re much more accessible. Which is why I still try to advise everyone to learn one program, and I try to hide them by something. And then, I think some of you know this, but I personally about, you know, a much stronger height than developer, I did say JavaScript, right? But with AI system coding, I now write a lot more JavaScript in types of code than I ever used to. But even with debugging, you know, JavaScript code, that something else, really understanding what are the error cases, what does that mean, that it’s pretty difficult to write on JavaScript. If you don’t like the name “by” coding, do you have a better name for “by”? Oh, that’s a good question. I shouldn’t think about that. We’ll get back to you on that. One of the things that you announced recently is a new fund for AI funds, so if you grab some of that, for people in the audience who are really thinking of starting a startup, what advice would you give them? So, in front of the just studios, we build companies, and we have to consider the investment companies that we co-founded. So, I think in terms of running back on AI funds lessons learned, I would say that the number one predictor of a startup success is split. I know it’s looking value, but I see it all the people that I’ve never seen yet, the speed through which a skilled team can execute, and if you’ve never seen it before, I know many of you have seen it. It’s just so much faster than anything that slow businesses can hardly do. And I think the number two predictor also very important is tech-con knowledge. It turns out that we look at the schools in the new sector to some things like how we market, how we sell, how we price. All that is important, but that knowledge has to be constantly more widespread. The knowledge that’s really rare is how this technology actually works, because technology evolves so quickly. So, I have deep respect for good market. How good pricing is hard, how good marketing is hard, position is hard, but that knowledge is more diffused. And the most rare reason is somewhat, they’re being understood how the technology works. So, what I found really is that there are community tech-con people that have good instincts, understand, do this, don’t do that, just as good ties as that. And then I think along with the business stuff, that the knowledge is very important to the transition needs here to figure out. Alright, that’s great advice for starting something. We are going to wrap this up. We’re going to go to a break now, but before we do, please join me in giving Andrew a big hand. [Applause] Our next session is in 15 minutes. [Indistinct conversation] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music]</p>


</section>

 ]]></description>
  <category>AI</category>
  <category>LLMs</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-05-13-andrew-ng-harrison-chase-fireside-chat/</guid>
  <pubDate>Wed, 14 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LangChain Interrupt Conference - Day 1</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-05-13-langchain-interrupt-day-1/</link>
  <description><![CDATA[ 




<p>I had the privilege of attending LangChain’s first conference. The first day was a hands-on workshop going through the creation of an agent (an email assistant) from scratch. It went through many of the components of building an agent:</p>
<ul>
<li>Overview of LangGraph</li>
<li>Writing the Agent</li>
<li>Evaluation / Testing</li>
<li>Human Feedback</li>
<li>Memory</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-05-13-langchain-interrupt-day-1/email_assistant_diagram.png" class="img-fluid figure-img"></p>
<figcaption>Email Assistant Diagram</figcaption>
</figure>
</div>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<ul>
<li>Python: <a href="https://github.com/langchain-ai/agents-from-scratch">https://github.com/langchain-ai/agents-from-scratch</a></li>
<li>Typescript: <a href="https://github.com/langchain-ai/agents-from-scratch-ts">https://github.com/langchain-ai/agents-from-scratch-ts</a> (this is the first time I’ve seen Typescript Jupyter notebooks)</li>
</ul>
</section>
<section id="notebook-1-langgraph-101" class="level2">
<h2 class="anchored" data-anchor-id="notebook-1-langgraph-101">Notebook 1: LangGraph 101</h2>
<p>Notebook: <a href="https://github.com/langchain-ai/agents-from-scratch/blob/main/notebooks/langgraph_101.ipynb">langgraph_101.ipynb</a></p>
<p>Lance Martin gave an overview of LangGraph that was largely review. It was a good reminder that “tool calling is just structured output.”</p>
<p>LangGraph code to create the agent:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Literal</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MessagesState</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> email_assistant.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> show_graph</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> call_llm(state: MessagesState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> MessagesState:</span>
<span id="cb1-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Run LLM"""</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_with_tools.invoke(state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>])</span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [output]}</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># actually what happens when a tool call is made</span></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run_tool(state: MessagesState):</span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Performs the tool call"""</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> tool_call <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].tool_calls:</span>
<span id="cb1-17">        observation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> write_email.invoke(tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>])</span>
<span id="cb1-18">        result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: observation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb1-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: result}</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> should_continue(state: MessagesState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span>, END]:</span>
<span id="cb1-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Route to tool handler, or end if Done tool called"""</span></span>
<span id="cb1-23">    </span>
<span id="cb1-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the last message</span></span>
<span id="cb1-25">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb1-26">    last_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> messages[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-27">    </span>
<span id="cb1-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the last message is a tool call, check if it's a Done tool call</span></span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> last_message.tool_calls:</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span></span>
<span id="cb1-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Otherwise, we stop (reply to the user)</span></span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> END</span>
<span id="cb1-33"></span>
<span id="cb1-34">workflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(MessagesState)</span>
<span id="cb1-35">workflow.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"call_llm"</span>, call_llm)</span>
<span id="cb1-36">workflow.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span>, run_tool)</span>
<span id="cb1-37">workflow.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"call_llm"</span>)</span>
<span id="cb1-38">workflow.add_conditional_edges(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"call_llm"</span>, should_continue, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span>, END: END})</span>
<span id="cb1-39">workflow.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_tool"</span>, END)</span>
<span id="cb1-40"></span>
<span id="cb1-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the workflow</span></span>
<span id="cb1-42">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> workflow.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span></code></pre></div>
</section>
<section id="notebook-2-building-the-agent" class="level2">
<h2 class="anchored" data-anchor-id="notebook-2-building-the-agent">Notebook 2: Building the Agent</h2>
<p>Notebook: <a href="https://github.com/langchain-ai/agents-from-scratch/blob/main/notebooks/agent.ipynb">agent.ipynb</a></p>
<p>Example Code for the Router in LangGraph</p>
<ul>
<li><code>Command</code> does control flow AND state up dates in one</li>
<li>In the example below: <code>return Command(goto=goto, update=update)</code></li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> RouterSchema(BaseModel):</span>
<span id="cb2-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Analyze the unread email and route it according to its content."""</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">    reasoning: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(</span>
<span id="cb2-5">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Step-by-step reasoning behind the classification."</span></span>
<span id="cb2-6">    )</span>
<span id="cb2-7">    classification: Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"respond"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notify"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(</span>
<span id="cb2-8">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The classification of an email: 'ignore' for irrelevant emails, "</span></span>
<span id="cb2-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'notify' for important information that doesn't need a response, "</span></span>
<span id="cb2-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'respond' for emails that need a reply"</span>,</span>
<span id="cb2-11">    )</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the LLM for use with router / structured output</span></span>
<span id="cb2-14">llm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> init_chat_model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openai:gpt-4.1"</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span>
<span id="cb2-15">llm_router <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> llm.with_structured_output(RouterSchema) </span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> triage_router(state: State) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Command[Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response_agent"</span>, END]]:</span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Analyze email content to decide if we should respond, notify, or ignore."""</span></span>
<span id="cb2-19">    </span>
<span id="cb2-20">    author, to, subject, email_thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_email(state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email_input"</span>])</span>
<span id="cb2-21">    system_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triage_system_prompt.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(</span>
<span id="cb2-22">        background<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>default_background,</span>
<span id="cb2-23">        triage_instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>default_triage_instructions</span>
<span id="cb2-24">    )</span>
<span id="cb2-25"></span>
<span id="cb2-26">    user_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triage_user_prompt.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(</span>
<span id="cb2-27">        author<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>author, to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>to, subject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>subject, email_thread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>email_thread</span>
<span id="cb2-28">    )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> llm_router.invoke(</span>
<span id="cb2-31">        [</span>
<span id="cb2-32">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: system_prompt},</span>
<span id="cb2-33">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: user_prompt},</span>
<span id="cb2-34">        ]</span>
<span id="cb2-35">    )</span>
<span id="cb2-36">    </span>
<span id="cb2-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result.classification <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"respond"</span>:</span>
<span id="cb2-38">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"📧 Classification: RESPOND - This email requires a response"</span>)</span>
<span id="cb2-39">        goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response_agent"</span></span>
<span id="cb2-40">        update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-41">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [</span>
<span id="cb2-42">                {</span>
<span id="cb2-43">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb2-44">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Respond to the email: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>format_email_markdown(subject, author, to, email_thread)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-45">                }</span>
<span id="cb2-46">            ],</span>
<span id="cb2-47">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification_decision"</span>: result.classification,</span>
<span id="cb2-48">        }</span>
<span id="cb2-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> result.classification <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>:</span>
<span id="cb2-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🚫 Classification: IGNORE - This email can be safely ignored"</span>)</span>
<span id="cb2-51">        goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb2-52">        update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  {</span>
<span id="cb2-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification_decision"</span>: result.classification,</span>
<span id="cb2-54">        }</span>
<span id="cb2-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> result.classification <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notify"</span>:</span>
<span id="cb2-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🔔 Classification: NOTIFY - This email contains important information"</span>)</span>
<span id="cb2-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For now, we go to </span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">. But we will add to this later!</span></span>
<span id="cb2-58">        goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb2-59">        update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-60">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification_decision"</span>: result.classification,</span>
<span id="cb2-61">        }</span>
<span id="cb2-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid classification: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>classification<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-64">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Command(goto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>goto, update<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>update)</span></code></pre></div>
<p>You can add agents in nodes in LangGraph:</p>
<ul>
<li>xray show true shows it</li>
<li>If a LangGraph agent is deployed in LangGraph platform, I think I can also use this as a Remote Graph</li>
</ul>
</section>
<section id="notebook-3-evaluating-the-agent" class="level2">
<h2 class="anchored" data-anchor-id="notebook-3-evaluating-the-agent">Notebook 3: Evaluating the Agent</h2>
<p>Notebook: <a href="https://github.com/langchain-ai/agents-from-scratch/blob/main/notebooks/evaluation.ipynb">evaluation</a></p>
<ul>
<li>When thinking of evaluations, if an expected input does not have a static expected output, you can define “Response Criteria” which a LLM as Judge could take in.</li>
<li>Below is an example with “Response Criteria”</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Users<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>lawrence.wu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>github<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>agents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>scratch</span>
<span id="cb3-2"></span>
<span id="cb3-3">Email Input: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'author'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Alice Smith &lt;alice.smith@company.com&gt;'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'to'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lance Martin &lt;lance@company.com&gt;'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'subject'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Quick question about API documentation'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'email_thread'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hi Lance,</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">I was reviewing the API documentation for the new authentication service and noticed a few endpoints seem to be missing from the specs. Could you help clarify if this was intentional or if we should update the docs?</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Specifically, I'm looking at:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- /auth/refresh</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- /auth/validate</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Thanks!</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Alice"</span>}</span>
<span id="cb3-4">Expected Triage Output: respond</span>
<span id="cb3-5">Expected Tool Calls: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'write_email'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'done'</span>]</span>
<span id="cb3-6">Response Criteria: </span>
<span id="cb3-7">• Send email <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> write_email tool call to acknowledge the question <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> confirm it will be investigated  </span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">all_messages_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> format_messages_string(response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>])</span>
<span id="cb4-2">eval_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> criteria_eval_structured_llm.invoke([</span>
<span id="cb4-3">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>,</span>
<span id="cb4-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: RESPONSE_CRITERIA_SYSTEM_PROMPT},</span>
<span id="cb4-5">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb4-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Response criteria: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>success_criteria<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Assistant's response: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>all_messages_str<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Evaluate whether the assistant's response meets the criteria and provide justification for your evaluation."""</span>}</span>
<span id="cb4-7">    ])</span>
<span id="cb4-8">eval_result</span></code></pre></div>
<p>new interrupt node</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> triage_interrupt_handler(state: State) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Command[Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response_agent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__end__"</span>]]:</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Handles interrupts from the triage step."""</span></span>
<span id="cb5-3">    </span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the email input</span></span>
<span id="cb5-5">    author, to, subject, email_thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_email(state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email_input"</span>])</span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create email markdown for Agent Inbox in case of notification  </span></span>
<span id="cb5-8">    email_markdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> format_email_markdown(subject, author, to, email_thread)</span>
<span id="cb5-9"></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create messages</span></span>
<span id="cb5-11">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb5-12">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Email to notify user about: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>email_markdown<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-13">                }]</span>
<span id="cb5-14"></span>
<span id="cb5-15"></span>
<span id="cb5-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create interrupt that is shown to the user</span></span>
<span id="cb5-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This request schema is what Agent Inbox expects</span></span>
<span id="cb5-18">    request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action_request"</span>: {</span>
<span id="cb5-20">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Email Assistant: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classification_decision'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb5-21">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>: {}</span>
<span id="cb5-22">        },</span>
<span id="cb5-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config"</span>: {</span>
<span id="cb5-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_ignore"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  </span>
<span id="cb5-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_respond"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb5-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_edit"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, </span>
<span id="cb5-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_accept"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  </span>
<span id="cb5-28">        },</span>
<span id="cb5-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Email to show in Agent Inbox</span></span>
<span id="cb5-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: email_markdown,</span>
<span id="cb5-31">    }</span>
<span id="cb5-32"></span>
<span id="cb5-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Agent Inbox responds with a list of dicts with a single key `type` that can be `accept`, `edit`, `ignore`, or `response`.  </span></span>
<span id="cb5-34">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interrupt([request])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-35"></span>
<span id="cb5-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If user provides feedback, go to response agent and use feedback to respond to email   </span></span>
<span id="cb5-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>:</span>
<span id="cb5-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add feedback to messages </span></span>
<span id="cb5-39">        user_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>]</span>
<span id="cb5-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Used by the response agent</span></span>
<span id="cb5-41">        messages.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb5-42">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"User wants to reply to the email. Use this feedback to respond: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-43">                        })</span>
<span id="cb5-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Go to response agent</span></span>
<span id="cb5-45">        goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response_agent"</span></span>
<span id="cb5-46"></span>
<span id="cb5-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If user ignores email, go to </span><span class="re">END</span></span>
<span id="cb5-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>:</span>
<span id="cb5-49">        goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb5-50"></span>
<span id="cb5-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catch all other responses</span></span>
<span id="cb5-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb5-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid response: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-54"></span>
<span id="cb5-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the state </span></span>
<span id="cb5-56">    update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-57">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: messages,</span>
<span id="cb5-58">    }</span>
<span id="cb5-59"></span>
<span id="cb5-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Command(goto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>goto, update<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>update)</span></code></pre></div>
<p>Actually thinking through all of the different use cases and how it affects the workflow of the agent is important. Pretty complicated even just for a simple email assistant.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-05-13-langchain-interrupt-day-1/response_agent_outcomes.png" class="img-fluid figure-img"></p>
<figcaption>Response Agent Outcomes</figcaption>
</figure>
</div>
<p>Interrupt handler, define the config for each node</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> interrupt_handler(state: State) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Command[Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llm_call"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__end__"</span>]]:</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Creates an interrupt for human review of tool calls"""</span></span>
<span id="cb6-3">    </span>
<span id="cb6-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store messages</span></span>
<span id="cb6-5">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-6"></span>
<span id="cb6-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Go to the LLM call node next</span></span>
<span id="cb6-8">    goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llm_call"</span></span>
<span id="cb6-9"></span>
<span id="cb6-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate over the tool calls in the last message</span></span>
<span id="cb6-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> tool_call <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].tool_calls:</span>
<span id="cb6-12">        </span>
<span id="cb6-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Allowed tools for HITL</span></span>
<span id="cb6-14">        hitl_tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"write_email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"schedule_meeting"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question"</span>]</span>
<span id="cb6-15">        </span>
<span id="cb6-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If tool is not in our HITL list, execute it directly without interruption</span></span>
<span id="cb6-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> hitl_tools:</span>
<span id="cb6-18"></span>
<span id="cb6-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Execute search_memory and other tools without interruption</span></span>
<span id="cb6-20">            tool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tools_by_name[tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>]]</span>
<span id="cb6-21">            observation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.invoke(tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>])</span>
<span id="cb6-22">            result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: observation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb6-24">            </span>
<span id="cb6-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get original email from email_input in state</span></span>
<span id="cb6-26">        email_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email_input"</span>]</span>
<span id="cb6-27">        author, to, subject, email_thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_email(email_input)</span>
<span id="cb6-28">        original_email_markdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> format_email_markdown(subject, author, to, email_thread)</span>
<span id="cb6-29">        </span>
<span id="cb6-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Format tool call for display and prepend the original email</span></span>
<span id="cb6-31">        tool_display <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> format_for_display(state, tool_call)</span>
<span id="cb6-32">        description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_email_markdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tool_display</span>
<span id="cb6-33"></span>
<span id="cb6-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configure what actions are allowed in Agent Inbox</span></span>
<span id="cb6-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"write_email"</span>:</span>
<span id="cb6-36">            config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-37">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_ignore"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-38">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_respond"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-39">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_edit"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-40">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_accept"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-41">            }</span>
<span id="cb6-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"schedule_meeting"</span>:</span>
<span id="cb6-43">            config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-44">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_ignore"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-45">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_respond"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_edit"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-47">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_accept"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-48">            }</span>
<span id="cb6-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question"</span>:</span>
<span id="cb6-50">            config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-51">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_ignore"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-52">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_respond"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-53">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_edit"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb6-54">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allow_accept"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb6-55">            }</span>
<span id="cb6-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid tool call: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-58"></span>
<span id="cb6-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the interrupt request</span></span>
<span id="cb6-60">        request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-61">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action_request"</span>: {</span>
<span id="cb6-62">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>],</span>
<span id="cb6-63">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>]</span>
<span id="cb6-64">            },</span>
<span id="cb6-65">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config"</span>: config,</span>
<span id="cb6-66">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: description,</span>
<span id="cb6-67">        }</span>
<span id="cb6-68"></span>
<span id="cb6-69">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Send to Agent Inbox and wait for response</span></span>
<span id="cb6-70">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interrupt([request])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-71"></span>
<span id="cb6-72">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Handle the responses </span></span>
<span id="cb6-73">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accept"</span>:</span>
<span id="cb6-74"></span>
<span id="cb6-75">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Execute the tool with original args</span></span>
<span id="cb6-76">            tool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tools_by_name[tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>]]</span>
<span id="cb6-77">            observation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.invoke(tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>])</span>
<span id="cb6-78">            result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: observation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-79">                        </span>
<span id="cb6-80">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"edit"</span>:</span>
<span id="cb6-81"></span>
<span id="cb6-82">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tool selection </span></span>
<span id="cb6-83">            tool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tools_by_name[tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>]]</span>
<span id="cb6-84">            </span>
<span id="cb6-85">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get edited args from Agent Inbox</span></span>
<span id="cb6-86">            edited_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>]</span>
<span id="cb6-87"></span>
<span id="cb6-88">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the AI message's tool call with edited content (reference to the message in the state)</span></span>
<span id="cb6-89">            ai_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the most recent message from the state</span></span>
<span id="cb6-90">            current_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the ID of the tool call being edited</span></span>
<span id="cb6-91">            </span>
<span id="cb6-92">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new list of tool calls by filtering out the one being edited and adding the updated version</span></span>
<span id="cb6-93">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This avoids modifying the original list directly (immutable approach)</span></span>
<span id="cb6-94">            updated_tool_calls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [tc <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> tc <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ai_message.tool_calls <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> current_id] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [</span>
<span id="cb6-95">                {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>: edited_args, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: current_id}</span>
<span id="cb6-96">            ]</span>
<span id="cb6-97"></span>
<span id="cb6-98">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new copy of the message with updated tool calls rather than modifying the original</span></span>
<span id="cb6-99">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This ensures state immutability and prevents side effects in other parts of the code</span></span>
<span id="cb6-100">            result.append(ai_message.model_copy(update<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_calls"</span>: updated_tool_calls}))</span>
<span id="cb6-101"></span>
<span id="cb6-102">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the write_email tool call with the edited content from Agent Inbox</span></span>
<span id="cb6-103">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"write_email"</span>:</span>
<span id="cb6-104">                </span>
<span id="cb6-105">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Execute the tool with edited args</span></span>
<span id="cb6-106">                observation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.invoke(edited_args)</span>
<span id="cb6-107">                </span>
<span id="cb6-108">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add only the tool response message</span></span>
<span id="cb6-109">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: observation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: current_id})</span>
<span id="cb6-110">            </span>
<span id="cb6-111">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the schedule_meeting tool call with the edited content from Agent Inbox</span></span>
<span id="cb6-112">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"schedule_meeting"</span>:</span>
<span id="cb6-113">                </span>
<span id="cb6-114">                </span>
<span id="cb6-115">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Execute the tool with edited args</span></span>
<span id="cb6-116">                observation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.invoke(edited_args)</span>
<span id="cb6-117">                </span>
<span id="cb6-118">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add only the tool response message</span></span>
<span id="cb6-119">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: observation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: current_id})</span>
<span id="cb6-120">            </span>
<span id="cb6-121">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catch all other tool calls</span></span>
<span id="cb6-122">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-123">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid tool call: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-124"></span>
<span id="cb6-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>:</span>
<span id="cb6-126">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"write_email"</span>:</span>
<span id="cb6-127">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and tell the agent how to proceed</span></span>
<span id="cb6-128">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User ignored this email draft. Ignore this email and end the workflow."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-129">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Go to </span><span class="re">END</span></span>
<span id="cb6-130">                goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb6-131">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"schedule_meeting"</span>:</span>
<span id="cb6-132">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and tell the agent how to proceed</span></span>
<span id="cb6-133">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User ignored this calendar meeting draft. Ignore this email and end the workflow."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-134">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Go to </span><span class="re">END</span></span>
<span id="cb6-135">                goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb6-136">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question"</span>:</span>
<span id="cb6-137">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and tell the agent how to proceed</span></span>
<span id="cb6-138">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User ignored this question. Ignore this email and end the workflow."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-139">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Go to </span><span class="re">END</span></span>
<span id="cb6-140">                goto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> END</span>
<span id="cb6-141">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-142">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid tool call: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-143">            </span>
<span id="cb6-144">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>:</span>
<span id="cb6-145">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># User provided feedback</span></span>
<span id="cb6-146">            user_feedback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span>]</span>
<span id="cb6-147">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"write_email"</span>:</span>
<span id="cb6-148">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and add a message with the user feedback to incorporate into the email</span></span>
<span id="cb6-149">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"User gave feedback, which can we incorporate into the email. Feedback: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_feedback<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-150">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"schedule_meeting"</span>:</span>
<span id="cb6-151">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and add a message with the user feedback to incorporate into the email</span></span>
<span id="cb6-152">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"User gave feedback, which can we incorporate into the meeting request. Feedback: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_feedback<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-153">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question"</span>:</span>
<span id="cb6-154">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't execute the tool, and add a message with the user feedback to incorporate into the email</span></span>
<span id="cb6-155">                result.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"User answered the question, which can we can use for any follow up actions. Feedback: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_feedback<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>]})</span>
<span id="cb6-156">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-157">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid tool call: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-158"></span>
<span id="cb6-159">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catch all other responses</span></span>
<span id="cb6-160">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-161">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Invalid response: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-162">            </span>
<span id="cb6-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the state </span></span>
<span id="cb6-164">    update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-165">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: result,</span>
<span id="cb6-166">    }</span>
<span id="cb6-167"></span>
<span id="cb6-168">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Command(goto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>goto, update<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>update)</span></code></pre></div>
<p>Then the graph looks like this now:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> email_assistant.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> show_graph</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conditional edge function</span></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> should_continue(state: State) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interrupt_handler"</span>, END]:</span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Route to tool handler, or end if Done tool called"""</span></span>
<span id="cb7-6">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb7-7">    last_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> messages[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> last_message.tool_calls:</span>
<span id="cb7-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> tool_call <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> last_message.tool_calls: </span>
<span id="cb7-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tool_call[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Done"</span>:</span>
<span id="cb7-11">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> END</span>
<span id="cb7-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-13">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interrupt_handler"</span></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build workflow</span></span>
<span id="cb7-16">agent_builder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(State)</span>
<span id="cb7-17"></span>
<span id="cb7-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add nodes</span></span>
<span id="cb7-19">agent_builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llm_call"</span>, llm_call)</span>
<span id="cb7-20">agent_builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interrupt_handler"</span>, interrupt_handler)</span>
<span id="cb7-21"></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add edges</span></span>
<span id="cb7-23">agent_builder.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llm_call"</span>)</span>
<span id="cb7-24">agent_builder.add_conditional_edges(</span>
<span id="cb7-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llm_call"</span>,</span>
<span id="cb7-26">    should_continue,</span>
<span id="cb7-27">    {</span>
<span id="cb7-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interrupt_handler"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interrupt_handler"</span>,</span>
<span id="cb7-29">        END: END,</span>
<span id="cb7-30">    },</span>
<span id="cb7-31">)</span>
<span id="cb7-32"></span>
<span id="cb7-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compile the agent</span></span>
<span id="cb7-34">response_agent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> agent_builder.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span>
<span id="cb7-35"></span>
<span id="cb7-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build overall workflow</span></span>
<span id="cb7-37">overall_workflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb7-38">    StateGraph(State, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>StateInput)</span>
<span id="cb7-39">    .add_node(triage_router)</span>
<span id="cb7-40">    .add_node(triage_interrupt_handler)</span>
<span id="cb7-41">    .add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response_agent"</span>, response_agent)</span>
<span id="cb7-42">    .add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"triage_router"</span>)</span>
<span id="cb7-43">    </span>
<span id="cb7-44">)</span>
<span id="cb7-45"></span>
<span id="cb7-46">email_assistant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overall_workflow.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span>
<span id="cb7-47">show_graph(email_assistant, xray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</section>
<section id="notebook-4-human-in-the-loop" class="level2">
<h2 class="anchored" data-anchor-id="notebook-4-human-in-the-loop">Notebook 4: Human-in-the-loop</h2>
<p>Notebook: <a href="https://github.com/langchain-ai/agents-from-scratch/blob/main/notebooks/hitl.ipynb">hitl.ipynb</a></p>
<p>This was a very interesting demo showcasing how a LangGraph agent that has an interrupt, can send that interrupt to a UI, in this case <a href="https://github.com/langchain-ai/agent-inbox">Agent Inbox</a>. A human can give that feedback in the Agent Inbox UI and the LangGraph graph will take that feedback and continue processing.</p>
</section>
<section id="notebook-5-memory" class="level2">
<h2 class="anchored" data-anchor-id="notebook-5-memory">Notebook 5: Memory</h2>
<p>Notebook: <a href="https://github.com/langchain-ai/agents-from-scratch/blob/main/notebooks/memory.ipynb">memory.ipynb</a></p>
<p>Update memory instructions - some of this was taken from the gpt-4.1 prompting guide</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">MEMORY_UPDATE_INSTRUCTIONS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Role and Objective</span></span>
<span id="cb8-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You are a memory profile manager for an email assistant agent that selectively updates user preferences based on feedback messages from human-in-the-loop interactions with the email assistant.</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Instructions</span></span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- NEVER overwrite the entire memory profile</span></span>
<span id="cb8-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- ONLY make targeted additions of new information</span></span>
<span id="cb8-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- ONLY update specific facts that are directly contradicted by feedback messages</span></span>
<span id="cb8-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- PRESERVE all other existing information in the profile</span></span>
<span id="cb8-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Format the profile consistently with the original style</span></span>
<span id="cb8-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Generate the profile as a string</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Reasoning Steps</span></span>
<span id="cb8-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1. Analyze the current memory profile structure and content</span></span>
<span id="cb8-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2. Review feedback messages from human-in-the-loop interactions</span></span>
<span id="cb8-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3. Extract relevant user preferences from these feedback messages (such as edits to emails/calendar invites, explicit feedback on assistant performance, user decisions to ignore certain emails)</span></span>
<span id="cb8-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">4. Compare new information against existing profile</span></span>
<span id="cb8-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">5. Identify only specific facts to add or update</span></span>
<span id="cb8-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">6. Preserve all other existing information</span></span>
<span id="cb8-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">7. Output the complete updated profile</span></span>
<span id="cb8-21"></span>
<span id="cb8-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Example</span></span>
<span id="cb8-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;memory_profile&gt;</span></span>
<span id="cb8-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">RESPOND:</span></span>
<span id="cb8-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- wife</span></span>
<span id="cb8-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- specific questions</span></span>
<span id="cb8-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- system admin notifications</span></span>
<span id="cb8-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">NOTIFY: </span></span>
<span id="cb8-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- meeting invites</span></span>
<span id="cb8-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">IGNORE:</span></span>
<span id="cb8-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- marketing emails</span></span>
<span id="cb8-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- company-wide announcements</span></span>
<span id="cb8-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- messages meant for other teams</span></span>
<span id="cb8-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/memory_profile&gt;</span></span>
<span id="cb8-35"></span>
<span id="cb8-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;user_messages&gt;</span></span>
<span id="cb8-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The assistant shouldn't have responded to that system admin notification."</span></span>
<span id="cb8-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/user_messages&gt;</span></span>
<span id="cb8-39"></span>
<span id="cb8-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;updated_profile&gt;</span></span>
<span id="cb8-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">RESPOND:</span></span>
<span id="cb8-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- wife</span></span>
<span id="cb8-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- specific questions</span></span>
<span id="cb8-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">NOTIFY: </span></span>
<span id="cb8-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- meeting invites</span></span>
<span id="cb8-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- system admin notifications</span></span>
<span id="cb8-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">IGNORE:</span></span>
<span id="cb8-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- marketing emails</span></span>
<span id="cb8-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- company-wide announcements</span></span>
<span id="cb8-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- messages meant for other teams</span></span>
<span id="cb8-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/updated_profile&gt;</span></span>
<span id="cb8-52"></span>
<span id="cb8-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Process current profile for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{namespace}</span></span>
<span id="cb8-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;memory_profile&gt;</span></span>
<span id="cb8-55"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{current_profile}</span></span>
<span id="cb8-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/memory_profile&gt;</span></span>
<span id="cb8-57"></span>
<span id="cb8-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Think step by step about what specific feedback is being provided and what specific information should be added or updated in the profile while preserving everything else."""</span></span>
<span id="cb8-59"></span>
<span id="cb8-60">MEMORY_UPDATE_INSTRUCTIONS_REINFORCEMENT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Remember:</span></span>
<span id="cb8-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- NEVER overwrite the entire profile</span></span>
<span id="cb8-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- ONLY make targeted additions or changes based on explicit feedback</span></span>
<span id="cb8-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- PRESERVE all existing information not directly contradicted</span></span>
<span id="cb8-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Output the complete updated profile as a string</span></span>
<span id="cb8-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
<p>Update Memory function, notably - this uses structured output to do the updating</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> UserPreferences(BaseModel):</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""User preferences."""</span></span>
<span id="cb9-3">    preferences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb9-4">    justification: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update_memory(store, namespace, messages):</span>
<span id="cb9-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Update memory profile in the store.</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        store: LangGraph BaseStore instance to update memory</span></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        namespace: Tuple defining the memory namespace, e.g. ("email_assistant", "triage_preferences")</span></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        messages: List of messages to update the memory with</span></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-14"></span>
<span id="cb9-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the existing memory</span></span>
<span id="cb9-16">    user_preferences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> store.get(namespace, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user_preferences"</span>)</span>
<span id="cb9-17"></span>
<span id="cb9-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the memory</span></span>
<span id="cb9-19">    llm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> init_chat_model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openai:gpt-4.1"</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>).with_structured_output(UserPreferences)</span>
<span id="cb9-20">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> llm.invoke(</span>
<span id="cb9-21">        [</span>
<span id="cb9-22">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: MEMORY_UPDATE_INSTRUCTIONS.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(current_profile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_preferences.value, namespace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>namespace)},</span>
<span id="cb9-23">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Think carefully and update the memory profile based upon these user messages:"</span>}</span>
<span id="cb9-24">        ] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> messages</span>
<span id="cb9-25">    )</span>
<span id="cb9-26">    </span>
<span id="cb9-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the updated memory to the store</span></span>
<span id="cb9-28">    store.put(namespace, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user_preferences"</span>, result.preferences)</span></code></pre></div>
<p>The triage function needs to be updated according to WHEN to update the user preferences</p>
<ul>
<li>Gave feedback to reply to this email –&gt; update the preferences accordingly</li>
<li>Ignore email even when it was classified as notify –&gt; update the preferences accordingly</li>
<li>If the user edits the email written by the AI –&gt; update the writing email preferences</li>
</ul>


</section>

 ]]></description>
  <category>LangChain</category>
  <category>Conference</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-05-13-langchain-interrupt-day-1/</guid>
  <pubDate>Wed, 14 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Summary of Karpathy’s Deep Dive into LLMs like ChatGPT</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-02-24-karpathy-deep-dive-llms/</link>
  <description><![CDATA[ 




<p>I’ve been experimeting with writing CLI utilities to fetch and summarize YouTube videos. This is primarily for personal use. <del>May open source the CLI in the future</del>. The CLI is called <a href="https://github.com/lawwu/yt-transcript">yt-transcript</a>. The model I used was <code>gpt-4o-mini</code>. The summary of Andrej Karpathy’s Deep Dive into LLMs video is below:</p>
<section id="deep-dive-into-llms-like-chatgpt" class="level1">
<h1>Deep Dive into LLMs like ChatGPT</h1>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/7xTGNNLPyMI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<section id="introduction-00000" class="level3">
<h3 class="anchored" data-anchor-id="introduction-00000"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=0">introduction</a> (0:00:00)</h3>
<p>In this video, Andrej Karpathy aims to provide a comprehensive introduction to large language models like ChatGPT, making it accessible for a general audience. He plans to explore how these models work, what users should input, and the nature of the responses generated. Karpathy will discuss the building process of such models while also addressing their strengths, weaknesses, and cognitive psychological implications.</p>
</section>
<section id="pretraining-data-internet-00100" class="level3">
<h3 class="anchored" data-anchor-id="pretraining-data-internet-00100"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=60">pretraining data (internet)</a> (0:01:00)</h3>
<p>The pre-training stage for large language models (LLMs) involves downloading and processing vast amounts of text data from the internet, primarily sourced from datasets like Common Crawl. This process includes multiple filtering stages to ensure high-quality and diverse content, such as removing undesirable URLs, extracting text from raw HTML, and filtering for language and personally identifiable information (PII). The resulting curated dataset, like the Fine Web dataset, typically amounts to around 44 terabytes of text, forming the foundation for training neural networks to understand and generate human-like text.</p>
</section>
<section id="tokenization-00747" class="level3">
<h3 class="anchored" data-anchor-id="tokenization-00747"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=467">tokenization</a> (0:07:47)</h3>
<p>In the tokenization process for neural networks like ChatGPT, text is represented as a one-dimensional sequence of symbols. To optimize this representation, raw text is encoded into a finite set of symbols, with techniques like byte pair encoding reducing sequence length while increasing vocabulary size. This allows models, such as GPT-4, to utilize around 100,000 unique tokens. Tokenization transforms text into these symbols, enabling efficient processing by the model.</p>
</section>
<section id="neural-network-io-01427" class="level3">
<h3 class="anchored" data-anchor-id="neural-network-io-01427"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=867">neural network I/O</a> (0:14:27)</h3>
<p>The section discusses the process of transforming a large dataset of text into tokens, highlighting that it consists of about 15 trillion tokens represented as unique IDs. It explains how neural networks are trained to predict the next token in a sequence using context windows of variable lengths, typically ranging up to 8,000 tokens. The neural network outputs probabilities for the next token, which are initially random, and through a mathematical updating process, these probabilities are adjusted to better match the actual sequences in the training data. This training occurs in parallel across multiple windows and tokens to ensure consistent predictions aligned with the statistical patterns of the dataset.</p>
</section>
<section id="neural-network-internals-02011" class="level3">
<h3 class="anchored" data-anchor-id="neural-network-internals-02011"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1211">neural network internals</a> (0:20:11)</h3>
<p>This section delves into the internals of neural networks, particularly focusing on Transformers, which process sequences of tokens using billions of parameters. Initially, these parameters are set randomly and are adjusted through training to improve prediction accuracy based on training data. The mathematical expressions used in these networks, while complex in scale, involve simple operations like multiplication and addition to transform inputs into outputs. The section emphasizes that understanding the general structure and function of these networks is more important than the intricate mathematical details.</p>
</section>
<section id="inference-02601" class="level3">
<h3 class="anchored" data-anchor-id="inference-02601"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1561">inference</a> (0:26:01)</h3>
<p>Inference is the process of generating new data from a trained neural network by predicting the next token based on a probability distribution derived from the model’s internalized patterns. This involves sampling tokens sequentially, which can sometimes reproduce sequences from the training data but often results in unique combinations. The process is stochastic, meaning the generated output varies with each inference due to the random nature of token sampling. Once a model is trained, it operates solely on inference, using fixed parameters to complete token sequences during interactions, such as in ChatGPT.</p>
</section>
<section id="gpt-2-training-and-inference-03109" class="level3">
<h3 class="anchored" data-anchor-id="gpt-2-training-and-inference-03109"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1869">GPT-2: training and inference</a> (0:31:09)</h3>
<p>The section discusses GPT-2, the second iteration of OpenAI’s generative pre-trained transformer models, highlighting its significance as a precursor to modern language models like GPT-4. GPT-2, launched in 2019, featured 1.6 billion parameters and was trained on approximately 100 billion tokens, a relatively small dataset by today’s standards. The costs and efficiency of training such models have significantly improved due to advancements in hardware and better data processing techniques. The training process involves updating the model’s parameters to reduce loss and improve token prediction, which requires powerful GPUs running in cloud data centers.</p>
</section>
<section id="llama-3.1-base-model-inference-04252" class="level3">
<h3 class="anchored" data-anchor-id="llama-3.1-base-model-inference-04252"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=2572">Llama 3.1 base model inference</a> (0:42:52)</h3>
<p>The section discusses the concept of base models in language learning models (LLMs), specifically focusing on Llama 3.1, a 405 billion parameter model trained on extensive data. Base models serve as token simulators and are not inherently useful for interactive tasks, as they generate text based on statistical patterns from training data. The section also highlights the importance of prompt design in eliciting useful responses from base models and demonstrates how clever prompting can simulate an assistant-like behavior, even without the full capabilities of a trained assistant model.</p>
</section>
<section id="pretraining-to-post-training-05923" class="level3">
<h3 class="anchored" data-anchor-id="pretraining-to-post-training-05923"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=3563">pretraining to post-training</a> (0:59:23)</h3>
<p>In this section, the video discusses the two main stages of training language models for assistant applications, focusing on pre-training and post-training. Pre-training involves creating a base model by predicting token sequences from internet documents, resulting in a simulator that generates text similar to online content. The subsequent post-training stage, which is less computationally intensive, is crucial for refining the model to provide accurate answers to user questions, transforming it from a document generator into a functional assistant.</p>
</section>
<section id="post-training-data-conversations-10106" class="level3">
<h3 class="anchored" data-anchor-id="post-training-data-conversations-10106"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=3666">post-training data (conversations)</a> (1:01:06)</h3>
<p>This section discusses the post-training phase of language models, focusing on how they learn to handle multi-turn conversations through datasets created by human labelers. The assistant’s responses are shaped by examples of ideal interactions, which are compiled and used to fine-tune the model. The process involves converting conversations into token sequences for training, allowing the model to generate responses based on statistical patterns learned from the data. Ultimately, the assistant’s behavior mimics that of skilled human labelers, providing responses aligned with the training data rather than representing a distinct AI intelligence.</p>
</section>
<section id="hallucinations-tool-use-knowledgeworking-memory-12032" class="level3">
<h3 class="anchored" data-anchor-id="hallucinations-tool-use-knowledgeworking-memory-12032"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=4832">hallucinations, tool use, knowledge/working memory</a> (1:20:32)</h3>
<p>The video discusses the cognitive effects of training large language models (LLMs) like ChatGPT, focusing on issues such as hallucinations, where models fabricate information due to their statistical nature. To mitigate these hallucinations, one approach is to include training data that teaches models when to express uncertainty. Additionally, models can be equipped with tools, such as web search, allowing them to access current information and improve their responses, akin to refreshing working memory. This dual strategy enhances factual accuracy and reduces the occurrence of false claims by enabling LLMs to either admit ignorance or seek information when needed.</p>
</section>
<section id="knowledge-of-self-14146" class="level3">
<h3 class="anchored" data-anchor-id="knowledge-of-self-14146"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=6106">knowledge of self</a> (1:41:46)</h3>
<p>The section discusses the concept of “knowledge of self” in large language models (LLMs) like ChatGPT, emphasizing that these models lack a persistent identity or self-awareness. When asked about their origins, LLMs generate answers based on statistical patterns from their training data, often leading to fabricated responses. Developers can influence how models respond to such questions by including hardcoded prompts or system messages during fine-tuning, but fundamentally, the models do not possess a true sense of self as humans do.</p>
</section>
<section id="models-need-tokens-to-think-14656" class="level3">
<h3 class="anchored" data-anchor-id="models-need-tokens-to-think-14656"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=6416">models need tokens to think</a> (1:46:56)</h3>
<p>In this section, Andrej Karpathy emphasizes the importance of structuring prompts for language models (LLMs) to effectively distribute computational tasks across multiple tokens. He illustrates this with examples of simple math problems, highlighting that models perform better when they can generate intermediate results rather than attempting to compute answers in a single token. He also advises using code as a tool for complex tasks, as it provides more reliable results than relying on the model’s mental arithmetic, especially for tasks like counting, which LLMs struggle with.</p>
</section>
<section id="tokenization-revisited-models-struggle-with-spelling-20111" class="level3">
<h3 class="anchored" data-anchor-id="tokenization-revisited-models-struggle-with-spelling-20111"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7271">tokenization revisited: models struggle with spelling</a> (2:01:11)</h3>
<p>The video discusses the limitations of language models like ChatGPT, particularly regarding spelling tasks due to their reliance on tokenization rather than individual characters. This leads to difficulties in performing simple character-level tasks, such as extracting every third character from a string. The models also struggle with counting, as illustrated by their past inaccuracies in determining the number of ’R’s in the word “strawberry.” Overall, the section highlights the cognitive deficits of these models and the challenges posed by their token-based processing.</p>
</section>
<section id="jagged-intelligence-20453" class="level3">
<h3 class="anchored" data-anchor-id="jagged-intelligence-20453"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7493">jagged intelligence</a> (2:04:53)</h3>
<p>In this section, the speaker discusses the inconsistencies and unexpected shortcomings of large language models (LLMs) like ChatGPT, particularly their struggle with simple questions despite excelling at complex problems. An example is given where the model incorrectly evaluates the numerical comparison of 9.11 and 9.9, highlighting a puzzling cognitive distraction linked to Bible verse markers. The speaker emphasizes that while LLMs are powerful tools, they are not fully reliable and should be used cautiously rather than as definitive sources of truth.</p>
</section>
<section id="supervised-finetuning-to-reinforcement-learning-20728" class="level3">
<h3 class="anchored" data-anchor-id="supervised-finetuning-to-reinforcement-learning-20728"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7648">supervised finetuning to reinforcement learning</a> (2:07:28)</h3>
<p>This section discusses the training stages of large language models, emphasizing the transition from pre-training on internet documents to supervised fine-tuning with curated human conversations. It highlights the importance of creating a diverse dataset of prompts and ideal responses through human curation and the use of language models. The discussion then shifts to the final stage of training, reinforcement learning, which is likened to the learning process in school, where models practice problem-solving using background knowledge and expert imitation to refine their skills.</p>
</section>
<section id="reinforcement-learning-21442" class="level3">
<h3 class="anchored" data-anchor-id="reinforcement-learning-21442"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=8082">reinforcement learning</a> (2:14:42)</h3>
<p>The section discusses the challenges of annotating solutions for large language models (LLMs) like ChatGPT, emphasizing the differences in cognition between humans and LLMs. It highlights how human labelers may struggle to determine the best token sequences for problem-solving, leading to inefficiencies. The reinforcement learning (RL) process is introduced as a method for LLMs to explore and refine their own solutions through trial and error, ultimately allowing the model to learn effective token sequences independently rather than relying solely on human-generated examples. This iterative learning process is likened to how children practice and learn problem-solving.</p>
</section>
<section id="deepseek-r1-22747" class="level3">
<h3 class="anchored" data-anchor-id="deepseek-r1-22747"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=8867">DeepSeek-R1</a> (2:27:47)</h3>
<p>The video discusses the evolution of large language models (LLMs), emphasizing the significance of reinforcement learning (RL) in fine-tuning compared to the more established stages of pre-training and supervised fine-tuning. The recent DeepSeek R1 paper highlights how RL can enhance a model’s reasoning capabilities, enabling it to solve mathematical problems more accurately by employing cognitive strategies like re-evaluating steps and exploring different perspectives. This emergent thinking process leads to longer, more detailed responses, showcasing the model’s ability to discover effective problem-solving techniques independently. The video also compares the performance of DeepSeek’s reasoning model to other LLMs, noting that while many mainstream models primarily utilize supervised fine-tuning, there are emerging options that incorporate RL for advanced reasoning tasks.</p>
</section>
<section id="alphago-24207" class="level3">
<h3 class="anchored" data-anchor-id="alphago-24207"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=9727">AlphaGo</a> (2:42:07)</h3>
<p>The section discusses the power of reinforcement learning demonstrated by DeepMind’s AlphaGo, which learned to play Go better than human experts by playing against itself and discovering unique strategies, such as the famous “move 37.” Unlike supervised learning, which only imitates human performance, reinforcement learning allows the system to explore a wider range of solutions and potentially develop new strategies beyond human comprehension. The implications for large language models (LLMs) are significant, suggesting that with diverse problems and environments, LLMs could similarly discover novel reasoning methods or even new languages that enhance their problem-solving capabilities.</p>
</section>
<section id="reinforcement-learning-from-human-feedback-rlhf-24826" class="level3">
<h3 class="anchored" data-anchor-id="reinforcement-learning-from-human-feedback-rlhf-24826"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=10106">reinforcement learning from human feedback (RLHF)</a> (2:48:26)</h3>
<p>The section discusses reinforcement learning from human feedback (RLHF) and its application in unverifiable domains, such as creative writing, where scoring solutions is challenging. Instead of relying on extensive human evaluations, RLHF uses a reward model trained to simulate human preferences, allowing for efficient reinforcement learning without requiring infinite human input. While RLHF improves model performance, it has limitations, including the risk of the model gaming the reward system, making it less reliable than traditional reinforcement learning methods. Ultimately, RLHF is seen as a useful but imperfect enhancement to model training.</p>
</section>
<section id="preview-of-things-to-come-30939" class="level3">
<h3 class="anchored" data-anchor-id="preview-of-things-to-come-30939"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11379">preview of things to come</a> (3:09:39)</h3>
<p>Future language models (LLMs) like ChatGPT are expected to become multimodal, capable of processing text, audio, and images natively, enabling more natural interactions. They will evolve into agents that can perform long-running tasks with human supervision, improving their ability to manage complex jobs over time. Additionally, these models will become more pervasive, integrating seamlessly into various tools and potentially taking actions on users’ behalf. Ongoing research is needed to enhance their learning capabilities, particularly for handling extensive context windows in multimodal tasks.</p>
</section>
<section id="keeping-track-of-llms-31515" class="level3">
<h3 class="anchored" data-anchor-id="keeping-track-of-llms-31515"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11715">keeping track of LLMs</a> (3:15:15)</h3>
<p>In this section, Andrej Karpathy shares three key resources for staying updated on LLMs. He highlights El Marina, an LLM leaderboard that ranks models based on human comparisons, noting that some models, like Deep Seek and Llama, offer open weights. He also recommends the AI News newsletter for its comprehensive coverage of AI developments and suggests following trusted individuals on X (formerly Twitter) for real-time updates. Karpathy emphasizes the importance of testing different models to find the best fit for specific tasks.</p>
</section>
<section id="where-to-find-llms-31834" class="level3">
<h3 class="anchored" data-anchor-id="where-to-find-llms-31834"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11914">where to find LLMs</a> (3:18:34)</h3>
<p>The video discusses where to find and use various large language models (LLMs). Proprietary models can be accessed via their respective provider websites, such as OpenAI and Google. For open-weight models, platforms like Together.AI allow users to interact with various models, while base models can often be found on Hyperbolic. Additionally, smaller distilled models can be run locally on personal computers using applications like LM Studio, despite its interface challenges.</p>
</section>
<section id="grand-summary-32146" class="level3">
<h3 class="anchored" data-anchor-id="grand-summary-32146"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=12106">grand summary</a> (3:21:46)</h3>
<p>The video discusses the inner workings of language models like ChatGPT, explaining how user queries are processed as token sequences and how the models generate responses. It highlights the two main stages of training: pre-training for knowledge acquisition and supervised fine-tuning for developing response behavior through human data curation. Additionally, the video touches on the differences between standard models and those using reinforcement learning, suggesting that while the latter shows promise for problem-solving, they still have limitations and should be used as tools with caution. Overall, the narrator expresses excitement about the potential of these models while emphasizing the importance of verifying their outputs.</p>


</section>
</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <category>Summary</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-02-24-karpathy-deep-dive-llms/</guid>
  <pubDate>Mon, 24 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Second Half-Marathon in the Books</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/finish_pic.jpg" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Finish Line Picture!</figcaption>
</figure>
</div>
<p>Second half-marathon complete (<a href="https://www.strava.com/activities/13521918538">Strava</a>)! Goals for this race at Surf City 2025 was just to 1) not get injured and 2) beat my first HM time of 1:49. Felt like the conditions were perfect in terms of the weather, how the body felt and having other runners to run with at certain points. Thankful to have achieved both those goals! By God’s grace was able to PR and run 1:42.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/strava_hm.png" class="img-fluid figure-img"></p>
<figcaption>Surf City HM - Strava</figcaption>
</figure>
</div>
<p>Strategy was to go 8:00-8:05 for the first 10 miles. But I started following people who were going around 7:50-7:55. Felt strong and just raced the last 5k. The ending was a little sketchy because the 5k walkers were in our path so lot of weaving in and out.</p>
<p>I did prefer the Long Beach Half. Better course (closer to the water) and better organized.</p>
<p>My chip time <a href="https://results2.xacte.com/#/e/2571/searchable/7288">didn’t register</a> :(</p>
<section id="marathon-build-details" class="level2">
<h2 class="anchored" data-anchor-id="marathon-build-details">Marathon Build Details</h2>
<p>This build started 10/17/24 and ended 2/2/2024 at Surf City:</p>
<ul>
<li>16 weeks</li>
<li>484 total miles</li>
<li>28.6 miles on average per week</li>
<li>80.2 total hours</li>
<li>4.84 hours per week</li>
<li>97 runs</li>
<li>1 race, 13 long, 26 workouts, 58 easy</li>
<li>Conversational pace improvement - 9:42/mi to 9:09/mi</li>
</ul>
</section>
<section id="thoughts-on-runna" class="level2">
<h2 class="anchored" data-anchor-id="thoughts-on-runna">Thoughts on Runna</h2>
<p>I used Runna for the 16 week training plan and I really liked it. It pushed me pretty hard. There were many workouts I didn’t think I’d be able to do. Runna also adapted the paces according to how I performed during the speed work. I thought their estimates fluctuated too quickly. The VDOT estimated paces were more in-line. For example the 5k time-trial I did in December gave a VDOT estimated HM time of 1:44 which was really close. The training plan had a variety of runs (for easy, workouts and long) that kept things interesting. Although now that I’ve gone through this full plan once, I likely can use ChatGPT to create plans for myself now. Runna recently allowed syncing workouts using the native Apple Workouts app which was really nice.</p>


</section>

 ]]></description>
  <category>Running</category>
  <category>Fitness</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/</guid>
  <pubDate>Sun, 02 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Lessons</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/</link>
  <description><![CDATA[ 




<p>I never considered myself a runner. I actually never enjoyed the activity of running. I usually didn’t look forward to it. I would occassionally still do it because I knew it was good for me. I also usually did enjoy how I felt afterwards, feeling like I put in some work, got my heart pumping and it was generally healthy. Over the past 5 months though, I’ve come to really enjoy running. I’ll share some of the things I’ve learned along the way about running and life.</p>
<section id="why-i-started-running" class="level2">
<h2 class="anchored" data-anchor-id="why-i-started-running">Why I Started Running</h2>
<p>On May 4th, I went for a 2 mile run. Little did I know that be the first run of many more runs over the next 5 months.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/first_run.png" class="img-fluid figure-img" width="500"></p>
<figcaption>First Run in May 2024</figcaption>
</figure>
</div>
<p>As noted in the image above, I was motivated to run after reading the book <a href="https://amzn.to/3zVzvqC">Outlive by Peter Attia</a>. In his chapter on exercise, he talks about cardiovascular health and strength training as two key necessary things you need to do to stay healthy. That’s not anything I haven’t heard before. But what triggered something in me was this graph in the book. The metric plotted is VO2 max which measures how much oxygen your body can use during intense exercise.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/vo2_max.png" class="img-fluid figure-img" width="500"></p>
<figcaption>VO2 Max Declines with Age</figcaption>
</figure>
</div>
<p>One of the main arguments he makes in the book is if you want to do normal activities in your 60s, 70s, and 80s+, you need to train for that. Everyone’s VO2 max will decline over as they get older. However, the average person starts with a lower VO2 max than someone with above average fitness. And you need a certain amount of VO2 max (aka fitness) to do basic things like walk up hill, lift/carry heavy objects or run. I do want to do normal activities when God-willing my kids get older and I have grandchildren. I do want to be able to lift and carry my grandchildren and run after them. Imagining that future really did flip a switch in me where I became very motivated to take my health more seriously and so I went on that 2 mile run.</p>
<p>I chose running as my exercise of choice because I found it to be the best-bang-for-your-buck form of exercise. I could go out for a couple mile run and be done in 20-30 minutes. A 20-30 bike ride didn’t really feel like much exercise. I didn’t enjoy swimming. I also had to give up basketball because of injuries. Praise God I could still run so I wanted to take advantage of that.</p>
</section>
<section id="consistently-running" class="level2">
<h2 class="anchored" data-anchor-id="consistently-running">Consistently Running</h2>
<p>I slowly built up mileage over the coming weeks, 5 miles that first week to eventually 10 per week and then 15. You can see how infrequently I ran in the proceeding months. There are some sparse weeks there!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/weekly_miles_first_month.png" class="img-fluid figure-img" width="450"></p>
<figcaption>Weekly Miles - First Month</figcaption>
</figure>
</div>
<p>In late June, I decided to sign up for a 10k race because a friend told me about one. A couple friends and I signed up for it (thanks for running with me Andy &amp; Shannon!). I thought running a race would be a good experience. And it was! There was a lot of adrenaline from the crowd and my kids even got to run the 1 mile “race” which they were excited about. I set a PR of 58:00 at this 10k (9:20 mins/mile).</p>
<p>During this time, I knew some of my friends were already planning on doing the Long Beach Half-Marathon in October. When they were talking about a few months back, my thought was “No way.” But after running more consistently, I was on the fence in June. I said I was 50/50 in our group chat. The day after running the 10k, I went for it and signed up for the half.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/signed_up.png" class="img-fluid figure-img" width="450"></p>
<figcaption>Signed Up!</figcaption>
</figure>
</div>
<p>I started Nike Run Club’s 14 week half-marathon plan since the timing was perfect and I had heard good things about their Guided Runs. Well, fast forward 5 months and on Oct 6, I ran the Long Beach Half-Marathon in 1:49:15 (8:20 mins/mile). It was a joy doing this with some brothers and sisters from church and seeing a bunch of friends trying to get healthier and make fitness a regular part of their lives.</p>
<p>People had recommended setting 3 goals: a bare minimum goal, a reachable goal and a stretch goal. So I did.</p>
<ul>
<li><p>Bare Minimum Goal: Don’t get hurt</p></li>
<li><p>Reachable Goal: Finish the race</p></li>
<li><p>Stretch Goal: Sub 2 hours</p></li>
</ul>
<p>After training for something for 3+ months and meeting my stretch goal, it’s hard to explain how happy I was crossing this finish line.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/lb_hm_finish_line.JPG" class="img-fluid figure-img"></p>
<figcaption>Long Beach Half-Marathon finish line</figcaption>
</figure>
</div>
<p>Seeing my wife and kids at the finish line cheering me on was so awesome!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/lb_hm_finish.jpg" class="img-fluid figure-img" width="2000"></p>
<figcaption>Long Beach Half-Marathon finish</figcaption>
</figure>
</div>
<p>I also downloaded some of the GPX data from Strava for some of my friends and I and animated it using <a href="https://gpx-animator.app/">GPX Animator</a>.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/_Ntj5AeAQSk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="things-ive-learned-about-running" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-about-running">Things I’ve Learned about Running</h2>
<section id="types-of-runs" class="level3">
<h3 class="anchored" data-anchor-id="types-of-runs">Types of Runs</h3>
<p>Easy Running: Most runs should be “easy.” And by most, this is 80% of your total miles! Coming from basketball I was used to running fast, quick bursts. So when I would go for “runs” I would be going at a moderate to fast pace. I would quickly tire because my aerobic fitness was not very good and it just wouldn’t be pleasant. Reading a little about running and other endurance spots, you quickly learn a common recommendation “run easy” and “run at a conversational pace” and “run in Zone 2” to build your “aerobic base.” I didn’t fully understand what all of this meant yet but I just took their advice and started running easy. It did feel abnormally slow because I wasn’t used it. One of the main benefits is you can run for longer at this slower pace, it’s more enjoyable and it’s scientifically proven to train your mitochondria (<a href="https://chatgpt.com/share/670cae86-c538-8011-b200-5a292ae6ca52">I think?</a>). Stephen Seiler has a <a href="https://www.youtube.com/watch?v=MALsI0mJ09I&amp;ab_channel=TEDxTalks">TED talk</a> where he explains the above idea in about 15 minutes. One of the slides shows the percentage of time spent in different training zones. You can see even for professional athletes, they spend 80% of their time in this “Low/Easy Intensity” area.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/stephen_seiler_training_sessions.png" class="img-fluid figure-img" width="700"></p>
<figcaption>% of training sessions</figcaption>
</figure>
</div>
<p>The other 20% of the running should be speed work. I used the Nike Run Club (NRC) app’s <a href="https://www.nike.com/running/half-marathon-training-plan">half-marathon training plan</a>. Every week there were two recovery runs (1 15 minute run basically introducing the runs that week, another longer recovery run), two speed runs and 1 long run. The speed runs varied from intervals, tempo, to fartleks. I got to learn what all of these different runs were. The NRC app was particularly helpful for these runs because it guides you - when to start and stop a given interval and what type of effort to give at each interval (4-5 easy warmup, 6 for a 10k pace, 7-8 for a 5k pace, 8-9 for a mile pace and 10 for all out of ‘celebration’ pace).</p>
<p>You run out of energy at around 90 minutes. I remember one of my first long runs (Strava link) where I went past 60 minutes, I didn’t have any water or nutrition on me. It felt really terrible at around 80 minutes. I think my heart rate even peaked.</p>
</section>
<section id="gear" class="level3">
<h3 class="anchored" data-anchor-id="gear">Gear</h3>
<ul>
<li><p>Shoes:</p>
<ul>
<li>First pair with <a href="https://amzn.to/3A0BIkz">Brooks Ghost</a>. I got Ghost 15s but only Ghost 16s are available now. My friend sent me this comic that was pretty accurate why I picked them:</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/brooks_ghost_comic.png" class="img-fluid figure-img" width="500"></p>
<figcaption>Brooks Ghost Comic</figcaption>
</figure>
</div>
<ul>
<li><p>Second pair was a <a href="https://amzn.to/4eU2LwU">Asics Novablast 4</a>.</p></li>
<li><p>I also started a 6 month membership to <a href="https://www.roadrunnersports.com/vip/rewards">Road Runner Sports</a> for $1.99. This allows you to buy shoes, run with them and return them if you do not like them. I wound up doing this a couple times for shoes that felt okay in store but for various reasons I didn’t like when going on an actual run. Not sure I’ll keep this membership after the trial though.</p></li>
<li><p>Shorts:</p>
<ul>
<li><p><a href="https://amzn.to/3zNfwdJ">Northyard 5-inch shorts</a> - Bought a few of the cheapest / well-reviewed shorts on Amazon.</p></li>
<li><p><a href="https://amzn.to/3BFeHEm">BALEAF Running Shirt</a> - Similar search, bought a few.</p></li>
</ul></li>
<li><p>Running Belt:</p>
<ul>
<li><a href="https://amzn.to/4f05swK">Spibelt</a> - Running belt to hold phone, keys.</li>
</ul></li>
<li><p>Hydration Vest:</p>
<ul>
<li><a href="https://amzn.to/4h0NiNd">Salomon ADV Skin 12</a> - For longer runs, this vest was very useful to carry water, gels, phone. I got a medium.</li>
</ul></li>
<li><p>Nutrition:</p>
<ul>
<li><p><a href="https://amzn.to/4h0NiNd">Huma Chia Energy Gels</a> - For longer runs, I ate these. I haven’t tried other gels yet but I liked how these tasted and just stuck with them.</p></li>
<li><p><a href="https://amzn.to/4dFv0hC">BODYARMOR Flash IV Electrolyte</a> - Also for longer runs. This is a 6 pack from Amazon ($1/pack) which is honestly a little egregious for salt. In theory you can make your own. I bought this <a href="https://www.costco.com/BODYARMOR-Flash-I.V.-Hydration-Booster,-30-Individual-Serving-Stick-Packs,-Variety-Pack.product.1838221.html">30 pack</a> from Costco that was a little cheaper.</p></li>
</ul></li>
<li><p>GPS Watch: Apple Watch - I already had an Apple Watch so I just used it to track my runs using the native Fitness App.</p>
<ul>
<li>When starting an activity, there’s usually a count down, you can double tap to start it immediately</li>
<li>When running, you can double tap the screen to start a new segment. This is useful when you are doing interval runs.</li>
</ul></li>
<li><p>iOS Apps:</p>
<ul>
<li>Fitness: Apple’s native fitness app. Can see detailed information on your workout. This gets really granular because GPS watches these days measure cadence, stride length and vertical oscillation.</li>
<li>Health: Seeing heart health data like Cardio Fitness (VO2 Max) and resting heart rate trend in better directions was so motivating!</li>
<li>HealthFit: I used this to import all of my previous Apple Fitness data into Strava</li>
<li>WorkOutDoors: More customizable fitness app. For example you can configure interval runs, total times for each interval, target paces for each interval and the app will warn you when you are outside of your target pace (too fast and too slow). This app makes your Apple Watch behave more like a Garmin.</li>
<li>Strava: Fun and somewhat motivating to see how friends are staying active. Being a sucker for data, I enjoy seeing Strava’s global heatmaps by activity type and also the user created segments and receiving random rewards like “You set your best 2nd mile time!” Side note: I find it pretty amazing that Strava has built a business on monetizing fitness data that users are giving them.</li>
</ul></li>
</ul>
<p>These are the Strava weekly heatmaps. It’s cool thinking about all the people that went running and/or biking the last week to make this heatmap.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/heatmap_ride.png" class="img-fluid figure-img" width="700"></p>
<figcaption>Heatmap - Ride</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/heatmap_run.png" class="img-fluid figure-img" width="700"></p>
<figcaption>Heatmap - Run</figcaption>
</figure>
</div>
</section>
<section id="racing" class="level3">
<h3 class="anchored" data-anchor-id="racing">Racing</h3>
<ul>
<li>Race strategy: Treat the first 75% of the race like a “warmup” for the last 25% of the race. Once you get to the last quarter, you can see how much you have left in the tank.</li>
<li>It’s must harder to go from the beginning of a training block to the starting line of a race than going from the starting line of a race to the finish line. So many things can go wrong over a 14-16 week training block, you can get sick, injured, or your kids can get sick. All kinds of things can come up.</li>
</ul>
</section>
</section>
<section id="things-ive-learned-in-general-and-about-myself" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-in-general-and-about-myself">Things I’ve Learned in General and about Myself</h2>
<ul>
<li>People Can Change: Running a marathon (or half) was never on my bucket list. I never thought I could even run this distance let alone do it and enjoy it and enjoy the whole training process. I grew up playing basketball which requires a totally different set of muscles. You need short bursts and fast twitch muscles. I still have yet to meet a basketball player who likes long distance running.</li>
<li>The human body has an amazing ability to be trained</li>
<li>Running regularly has given more time to think, pray and listen to audiobooks. It’s also given me more energy throughout the day.</li>
<li>The running community is generally positive. Nowadays it’s pretty easy to form groups around a share interest. I’ve found the running communities to be quite encouraging. It doesn’t matter what pace you are running.</li>
</ul>
</section>
<section id="things-ive-learned-about-christian-life" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-about-christian-life">Things I’ve Learned about Christian Life</h2>
<p>The Bible uses many running illustrations that have become more vivid as I’ve started running more consistently:</p>
<ul>
<li><strong>Do you not know that in a race all the runners run, but only one receives the prize? So run that you may obtain it.</strong> Every athlete exercises self-control in all things. They do it to receive a perishable wreath, but we an imperishable. <strong>So I do not run aimlessly</strong>; I do not box as one beating the air. But I discipline my body and keep it under control, lest after preaching to others I myself should be disqualified. (1 Corinthians 9:24-27)</li>
<li>I have fought the good fight, <strong>I have finished the race</strong>, I have kept the faith. (2 Timothy 4:7)</li>
<li>Therefore, since we are surrounded by so great a cloud of witnesses, let us also lay aside every weight, and sin which clings so closely, and <strong>let us run with endurance the race that is set before us, looking to Jesus</strong>, the founder and perfecter of our faith, who for the joy that was set before him endured the cross, despising the shame, and is seated at the right hand of the throne of God. (Hebrews 12:1-2)</li>
</ul>
<p>From 1 Corinthians 9:24-27, we draw some parallels between physical running and spiritual running (basically Christian life):</p>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 37%">
<col style="width: 37%">
</colgroup>
<thead>
<tr class="header">
<th>Aspect</th>
<th>Physical Running</th>
<th>Spiritual Running</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Purpose</td>
<td>To win a perishable prize (e.g., a medal, wreath)</td>
<td>To receive an imperishable prize (eternal life, spiritual reward, crown of glory, commendation from God)</td>
</tr>
<tr class="even">
<td>Training</td>
<td>Requires self-control and discipline in physical training</td>
<td>Requires self-control and discipline in spiritual growth and character</td>
</tr>
<tr class="odd">
<td>Goal</td>
<td>To finish the race and win, physical fitness and health</td>
<td>To live life of praise and glorifying God, aiming for eternal rewards</td>
</tr>
<tr class="even">
<td>Focus</td>
<td>Winning the race, obtaining a temporary prize</td>
<td>Living with purpose, avoiding aimlessness, and striving for spiritual growth</td>
</tr>
<tr class="odd">
<td>Effort</td>
<td>Demands physical discipline and perseverance</td>
<td>Demands spiritual discipline, avoiding complacency, and personal holiness</td>
</tr>
<tr class="even">
<td>Motivation</td>
<td>Earthly recognition and achievement</td>
<td>Eternal recognition and spiritual fulfillment</td>
</tr>
<tr class="odd">
<td>Outcome</td>
<td>A perishable, temporary reward</td>
<td>An imperishable, everlasting reward</td>
</tr>
<tr class="even">
<td>Consequence of Failure</td>
<td>Losing the race, disqualification</td>
<td>Spiritual disqualification, falling short of spiritual goals</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Don’t compare yourself to others</strong>: I’ve also seen how easy it is to compare yourself to others in running and in Christian life. It’s easy to compare your pace or weekly mileage to others and say, “I wish I ran that fast.” But everyone is different. Everyone has had differing amounts of training up to that point. Everyone’s body is different. People have different goals. I’ve found it’s better to just be inspired by what others are able to do. Then if you want to compare, compare with your previous self. How long was I able to run at a conversational pace 1 month ago? 3 months ago? In Christian life it’s also easy to compare how fast/well one is running and compare yourself to others. But similarly, everyone is on a different spiritual journey with differing spiritual backgrounds. If you want to compare, compare with your previous self. How much have I grown in things like the fruit of the Spirit since I became a Christian? How much have I grown in love of God and people?</li>
<li><strong>Self-control is so important</strong>: 1 Cor 9:25 says, “Every athlete exercises self-control in all things.” Athletes exercise self-control because it’s necessary to have good performance. Even in building a simple habit of running for 30 minutes a day, this requires self-control and discipline to find the time to do so, sleeping early to wake up early to do this (if you want to do it in the morning before your kids wake up), committing to a running plan, actually running the runs on those plans, etc. In Christian life, growing in self-control over my desires means I can better fight temptation and sinful desires and ultimately be a better instrument for noble purposes, useful to God for any good work (2 Tim 2:21).</li>
<li><strong>Don’t run aimlessly</strong>: It’s been helpful to have goals while running. Following the NRC running plan was helpful. Knowing what runs I was going to do on each day was helpful. Knowing the purpose of each run and what it was doing to my body was motivating as well. There were times I didn’t have a good idea of how far I was going to run that day. Sometimes on those days I wound up cutting my runs short because of the lack of motivation. In Christian life, it’s important to have spiritual direction. Where is God leading you? And if you have a family and especially if you are a husband, how and where are you leading your family?</li>
<li><strong>Disciplining the body</strong>: Running has helped me discipline my body. Starting off the day with something physically demanding helps set the tone for the rest of the day. Another example is running provides an outlet for me to think and pray. This helps to get my mind settled for the day ahead as well.</li>
</ul>
<p>1 Tim 4:8 says, “for while bodily training is of some value, godliness is of value in every way, as it holds promise for the present life and also for the life to come.” The Bible says bodily training is of some value! This should provide some motivation to a Christian to take exercise seriously. However the passage goes onto say that godliness is more important because it holds promise for this life and the life to come. I take this to mean our spiritual fitness and our relationship with Christ is more important to God than our physical fitness. There were times on this running journey I took running too seriously and prioritized it above the things God wanted me to prioritize like my family. So one big takeaway has been to not allow good things (like running) to supercede the best things (honoring and glorifying God).</p>
</section>
<section id="why-i-plan-to-continue-to-run" class="level2">
<h2 class="anchored" data-anchor-id="why-i-plan-to-continue-to-run">Why I plan to continue to run</h2>
<p>I started out on this running journey because I wanted to reach my 70s and 80s healthy enough to be able to do normal activities that I take for granted like walk up hill or God-willing hold my grandkids. It started with a simple 2 mile run. It’s turned into a habit now that I really enjoy where I try to run 20-30 miles a week.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/last_6_months_450_miles.jpg" class="img-fluid figure-img" width="400"></p>
<figcaption>Last 6 months of running</figcaption>
</figure>
</div>
<p>Along the way I’ve learned so much about running, myself and even Christian life. Given I’ve also had 3 major leg injuries, I thank God he’s allowed me to run these hundreds of miles these last 5 months. I’m excited to see where running takes me next.</p>


</section>

 ]]></description>
  <category>Running</category>
  <category>Fitness</category>
  <category>Christian Life</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/</guid>
  <pubDate>Sun, 13 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Introduction to LangGraph Tutorial</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-09-20-langgraph-tutorial/</link>
  <description><![CDATA[ 




<p>The LangChain team recently released the first course in their LangChain Academy called Introduction to LangGraph (<a href="https://github.com/langchain-ai/langchain-academy">repo</a>). As I’m working through it I will make some notes on what I’ve learned. Note many of these snippets were generated using Claude 3.5 Sonnet (passing a prompt and the Jupyter notebook plain text, it did a better job than <code>o1-preview</code>, surprisingly)</p>
<section id="module-2---state-and-memory" class="level2">
<h2 class="anchored" data-anchor-id="module-2---state-and-memory">Module 2 - State and Memory</h2>
<section id="lesson-2---state-reducers" class="level3">
<h3 class="anchored" data-anchor-id="lesson-2---state-reducers">Lesson 2 - State Reducers</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/state-reducers.ipynb">Notebook</a></li>
</ul>
<p>Reducers are used to specify how state updates are performed when multiple nodes try to update the same key:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Annotated</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> operator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> State(TypedDict):</span>
<span id="cb1-5">    foo: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], add]</span></code></pre></div>
<p>Custom reducers can be defined to handle complex state update logic:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reduce_list(left: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, right: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>:</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> left:</span>
<span id="cb2-3">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> right:</span>
<span id="cb2-5">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> right</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomReducerState(TypedDict):</span>
<span id="cb2-9">    foo: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], reduce_list]</span></code></pre></div>
<p>MessagesState is a useful shortcut for working with message-based states. These two are equivalent:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Annotated</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MessagesState</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AnyMessage</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph.message <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add_messages</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a custom TypedDict that includes a list of messages with add_messages reducer</span></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomMessagesState(TypedDict):</span>
<span id="cb3-8">    messages: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[AnyMessage], add_messages]</span>
<span id="cb3-9">    added_key_1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-10">    added_key_2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use MessagesState, which includes the messages key with add_messages reducer</span></span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> ExtendedMessagesState(MessagesState):</span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add any keys needed beyond messages, which is pre-built </span></span>
<span id="cb3-16">    added_key_1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-17">    added_key_2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc</span></span></code></pre></div>
<p>The <code>add_messages</code> reducer allows appending messages to the state:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph.message <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add_messages</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AIMessage, HumanMessage</span>
<span id="cb4-3"></span>
<span id="cb4-4">new_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, new_message)</span></code></pre></div>
<p>Messages can be overwritten by using the same ID:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">new_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New content"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"existing_id"</span>)</span>
<span id="cb5-2">updated_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, new_message)</span></code></pre></div>
<p>Messages can be removed using <code>RemoveMessage</code>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RemoveMessage</span>
<span id="cb6-2"></span>
<span id="cb6-3">delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> messages_to_delete]</span>
<span id="cb6-4">updated_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, delete_messages)</span></code></pre></div>
</section>
<section id="lesson-3---multiple-schemas" class="level3">
<h3 class="anchored" data-anchor-id="lesson-3---multiple-schemas">Lesson 3 - Multiple Schemas</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/multiple-schemas.ipynb">Notebook</a></li>
<li>A graph can have multiple states. This is useful for controlling what information is shown to the user.</li>
</ul>
<p>Private State: You can pass private state between nodes that isn’t relevant for the overall graph input or output.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing_extensions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TypedDict</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, display</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StateGraph, START, END</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OverallState(TypedDict):</span>
<span id="cb7-6">    foo: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> PrivateState(TypedDict):</span>
<span id="cb7-9">    baz: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> node_1(state: OverallState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> PrivateState:</span>
<span id="cb7-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---Node 1---"</span>)</span>
<span id="cb7-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"baz"</span>: state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'foo'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>}</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> node_2(state: PrivateState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> OverallState:</span>
<span id="cb7-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---Node 2---"</span>)</span>
<span id="cb7-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"foo"</span>: state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'baz'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>}</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build graph</span></span>
<span id="cb7-20">builder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(OverallState)</span>
<span id="cb7-21">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>, node_1)</span>
<span id="cb7-22">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>, node_2)</span>
<span id="cb7-23"></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Logic</span></span>
<span id="cb7-25">builder.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>)</span>
<span id="cb7-26">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>)</span>
<span id="cb7-27">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>, END)</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add</span></span>
<span id="cb7-30">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> builder.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span></code></pre></div>
<p>Input/Output Schema: You can define explicit input and output schemas for a graph, which is useful for constraining the input and output. Filtering: Input and output schemas perform filtering on what keys are permitted on the input and output of the graph.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> InputState(TypedDict):</span>
<span id="cb8-2">    question: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OutputState(TypedDict):</span>
<span id="cb8-5">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OverallState(TypedDict):</span>
<span id="cb8-8">    question: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-9">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-10">    notes: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> thinking_node(state: InputState):</span>
<span id="cb8-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"... his is name is Lance"</span>}</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> answer_node(state: OverallState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> OutputState:</span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye Lance"</span>}</span>
<span id="cb8-17"></span>
<span id="cb8-18">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(OverallState, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>InputState, output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>OutputState)</span>
<span id="cb8-19">graph.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>, answer_node)</span>
<span id="cb8-20">graph.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>, thinking_node)</span>
<span id="cb8-21">graph.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>)</span>
<span id="cb8-22">graph.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>)</span>
<span id="cb8-23">graph.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>, END)</span>
<span id="cb8-24"></span>
<span id="cb8-25">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span>
<span id="cb8-26"></span>
<span id="cb8-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View</span></span>
<span id="cb8-28">display(Image(graph.get_graph().draw_mermaid_png()))</span>
<span id="cb8-29"></span>
<span id="cb8-30">graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"question"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi"</span>})</span>
<span id="cb8-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: {'answer': 'bye Lance'}</span></span></code></pre></div>
</section>
<section id="lesson-4---trim-and-filter-messages" class="level3">
<h3 class="anchored" data-anchor-id="lesson-4---trim-and-filter-messages">Lesson 4 - Trim and Filter Messages</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/trim-filter-messages.ipynb">Notebook</a></li>
<li>You can filter messages using the <code>RemoveMessage</code> class.</li>
<li>As a use case, you can preserve the state (e.g.&nbsp;with 5 messages in the message history) but only call the LLM with the last n messages</li>
<li>You can also trim messages based on a set number of tokens using <code>trim_messages</code></li>
</ul>
<p>Filtering messages using RemoveMessage:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RemoveMessage</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> filter_messages(state: MessagesState):</span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete all but the 2 most recent messages</span></span>
<span id="cb9-5">    delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb9-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: delete_messages}</span>
<span id="cb9-7"></span>
<span id="cb9-8">builder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(MessagesState)</span>
<span id="cb9-9">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>, filter_messages)</span>
<span id="cb9-10">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_model"</span>, chat_model_node)</span>
<span id="cb9-11">builder.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>)</span>
<span id="cb9-12">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_model"</span>)</span></code></pre></div>
<p>Trimming messages based on token count:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> trim_messages</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> chat_model_node(state: MessagesState):</span>
<span id="cb10-4">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> trim_messages(</span>
<span id="cb10-5">            state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>],</span>
<span id="cb10-6">            max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb10-7">            strategy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last"</span>,</span>
<span id="cb10-8">            token_counter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ChatOpenAI(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4o"</span>),</span>
<span id="cb10-9">            allow_partial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb10-10">        )</span>
<span id="cb10-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [llm.invoke(messages)]}</span></code></pre></div>
</section>
<section id="lesson-5---chatbot-w-summarizing-messages-and-memory" class="level3">
<h3 class="anchored" data-anchor-id="lesson-5---chatbot-w-summarizing-messages-and-memory">Lesson 5 - Chatbot w/ Summarizing Messages and Memory</h3>
<ul>
<li>Interesting example of using the above ideas to create a chatbot that creates a running summary of messages as a way of condensing the memory.</li>
<li>You can pass a thread to the LangChain runnable and the runnable will continue the conversation from that previous state.</li>
</ul>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MessagesState</span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> State(MessagesState):</span>
<span id="cb11-3">    summary: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SystemMessage, HumanMessage, RemoveMessage</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the logic to call the model</span></span>
<span id="cb11-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> call_model(state: State):</span>
<span id="cb11-9">    </span>
<span id="cb11-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get summary if it exists</span></span>
<span id="cb11-11">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb11-12"></span>
<span id="cb11-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If there is summary, then we add it</span></span>
<span id="cb11-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> summary:</span>
<span id="cb11-15">        </span>
<span id="cb11-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add summary to system message</span></span>
<span id="cb11-17">        system_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Summary of conversation earlier: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-18"></span>
<span id="cb11-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append summary to any newer messages</span></span>
<span id="cb11-20">        messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [SystemMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>system_message)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb11-21">    </span>
<span id="cb11-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-23">        messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb11-24">    </span>
<span id="cb11-25">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.invoke(messages)</span>
<span id="cb11-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: response}</span></code></pre></div>
<p>Note, here we’ll use <code>RemoveMessage</code> to filter our state after we’ve produced the summary.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> summarize_conversation(state: State):</span>
<span id="cb12-2">    </span>
<span id="cb12-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First, we get any existing summary</span></span>
<span id="cb12-4">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create our summarization prompt </span></span>
<span id="cb12-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> summary:</span>
<span id="cb12-8">        </span>
<span id="cb12-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A summary already exists</span></span>
<span id="cb12-10">        summary_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb12-11">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is summary of the conversation to date: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extend the summary by taking into account the new messages above:"</span></span>
<span id="cb12-13">        )</span>
<span id="cb12-14">        </span>
<span id="cb12-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-16">        summary_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create a summary of the conversation above:"</span></span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add prompt to our history</span></span>
<span id="cb12-19">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>summary_message)]</span>
<span id="cb12-20">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.invoke(messages)</span>
<span id="cb12-21">    </span>
<span id="cb12-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete all but the 2 most recent messages</span></span>
<span id="cb12-23">    delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb12-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>: response.content, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: delete_messages}</span></code></pre></div>
<p>Adding memory:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, display</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.checkpoint.memory <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MemorySaver</span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StateGraph, START</span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a new graph</span></span>
<span id="cb13-6">workflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(State)</span>
<span id="cb13-7">workflow.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>, call_model)</span>
<span id="cb13-8">workflow.add_node(summarize_conversation)</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the entrypoint as conversation</span></span>
<span id="cb13-11">workflow.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>)</span>
<span id="cb13-12">workflow.add_conditional_edges(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>, should_continue)</span>
<span id="cb13-13">workflow.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summarize_conversation"</span>, END)</span></code></pre></div>
<p>A checkpointer saves the state at each step as a checkpoint. These saved checkpoints can be grouped into a <code>thread</code> of conversation. Below we setting a thread_id. You can then continue the conversation by passing the config to the LangChain Runnable.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a thread</span></span>
<span id="cb14-2">config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"configurable"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thread_id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>}}</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start conversation</span></span>
<span id="cb14-5">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi! I'm Lance"</span>)</span>
<span id="cb14-6">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-8">    m.pretty_print()</span>
<span id="cb14-9"></span>
<span id="cb14-10">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what's my name?"</span>)</span>
<span id="cb14-11">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-13">    m.pretty_print()</span>
<span id="cb14-14"></span>
<span id="cb14-15">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i like the 49ers!"</span>)</span>
<span id="cb14-16">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-18">    m.pretty_print()</span></code></pre></div>
</section>
<section id="lesson-6---chatbot-w-summarizing-messages-and-external-memory" class="level3">
<h3 class="anchored" data-anchor-id="lesson-6---chatbot-w-summarizing-messages-and-external-memory">Lesson 6 - Chatbot w/ Summarizing Messages and External Memory</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/chatbot-external-memory.ipynb">Notebook</a></li>
<li>You can easily configure external memory to a database like sqlite.</li>
<li>Therefore you can persist memory across notebook sessions</li>
</ul>


</section>
</section>

 ]]></description>
  <category>LangGraph</category>
  <category>LLMs</category>
  <category>Agents</category>
  <category>Python</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-09-20-langgraph-tutorial/</guid>
  <pubDate>Fri, 20 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>God’s Design for Marriage</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/</link>
  <description><![CDATA[ 




<p>My church is hosting a retreat this weekend and we are privileged to have <a href="https://www.masters.edu/faculty_staff_bio/john-d-street/">John Street</a> as our speaker. He was planning to speak on God’s Design for Marriage. I was curious whether he had taught similar sessions before. He actually did at <a href="https://www.youtube.com/playlist?list=PLdY75M-gUuKC1G4PAseaT8O5IOte9yb3H">FBC Weston back in 2018</a>. Interestingly he gave 6 sessions (5 + a Q&amp;A). To get a preview, I <a href="https://lawwu.github.io/transcripts/index_john_street_gods_design_for_marriage.html">transcribed all of those talks</a> using my <a href="https://github.com/lawwu/transcripts">transcripts repo</a> and summarized them using Claude 3.5 Sonnet.</p>
<section id="summaries" class="level1">
<h1>Summaries</h1>
<p>See below for the summaries:</p>
<ul>
<li><a href="../../conferences/2024-08-14-john-street-1-marriage/index.html">Session 1 - God’s Design for Marriage</a></li>
<li><a href="../../conferences/2024-08-14-john-street-2-husbands/index.html">Session 2 - God’s Design for Husbands</a></li>
<li><a href="../../conferences/2024-08-14-john-street-3-wives/index.html">Session 3 - God’s Design for Wives</a></li>
<li><a href="../../conferences/2024-08-14-john-street-4-communication/index.html">Session 4 - God’s Design for Communication</a></li>
<li><a href="../../conferences/2024-08-14-john-street-5-marital-union/index.html">Session 5 - God’s Design for Marital Union</a></li>
<li><a href="../../conferences/2024-08-14-john-street-6-qa/index.html">Session 6 - Q&amp;A</a></li>
</ul>
</section>
<section id="steps-to-generate-summaries" class="level1">
<h1>Steps to Generate Summaries</h1>
<p>First I prompted Claude 3.5 Sonnet to create a prompt (I know this is kind of meta) but I rightly assumed the model would generate a better prompt than I would.</p>
<section id="step-1-prompting-an-llm-to-get-a-prompt" class="level2">
<h2 class="anchored" data-anchor-id="step-1-prompting-an-llm-to-get-a-prompt">Step 1: Prompting an LLM to get a Prompt</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/prompt_to_get_prompt.png" class="img-fluid figure-img"></p>
<figcaption>Prompt to get a Prompt</figcaption>
</figure>
</div>
<p>My prompt was:</p>
<pre><code>Create a prompt for getting the questions and answers from a youtube transcript of a Q&amp;A talk</code></pre>
<p>The generated Claude artifact was:</p>
<pre><code>Your task is to analyze a transcript from a YouTube Q&amp;A session and extract the questions and their corresponding answers. Follow these steps:

Read through the entire transcript carefully.
Identify each distinct question asked during the Q&amp;A session. Look for:

Direct questions from the audience or moderator
Implied questions based on the speaker's responses
Questions the speaker poses rhetorically or to frame their discussion


For each question:

Note the timestamp or approximate location in the transcript
Record the question verbatim if possible, or paraphrase clearly if the exact wording is unclear
Identify the start and end of the corresponding answer in the transcript
Summarize the key points of the answer concisely


Format your output as follows for each Q&amp;A pair:
Q[number]: [Question]
Timestamp: [Time in video where question occurs]
A: [Summarized answer]
If there are any ambiguities or unclear sections in the transcript, note these in your response.
After extracting all Q&amp;A pairs, provide a brief overview of the main themes or topics discussed in the session.

Remember to focus on the substantive content of the Q&amp;A, avoiding any unnecessary filler or off-topic conversation. Your goal is to create a clear, concise summary of the key questions and answers from the session.</code></pre>
<p>Some notes: - I added a line “Also if there are any verses cited, write those verses and quote the verse in the ESV translation.” because I wanted verses to be extracted. - I also generated a different version of this prompt to work on the non-Q&amp;A sections.</p>
<p>This is the non Q&amp;A version:</p>
<pre><code>Your task is to analyze the transcript of a marriage seminar taught by John Street at a church. The transcript includes timestamps. Follow these steps to summarize the main points, arguments, verses, and applications:

Read through the entire transcript carefully.
Identify and categorize the following elements:
a) Main Points: Overarching themes or key ideas presented in the seminar
b) Arguments: Logical reasoning or explanations supporting the main points
c) Verses: Bible verses cited or referenced during the seminar
d) Applications: Practical advice or suggestions for applying the teachings in real life
For each element, note the timestamp where it appears in the transcript.
Summarize each element concisely, capturing the essence of what John Street communicated.
Organize your analysis using the following structure:
Main Points

[Timestamp] [Summarized main point]
[Timestamp] [Summarized main point]
(Continue for all main points)

Arguments

[Timestamp] [Summarized argument]
[Timestamp] [Summarized argument]
(Continue for all significant arguments)

Bible Verses

[Timestamp] [Book Chapter:Verse] - [Brief context or how it was used]
[Timestamp] [Book Chapter:Verse] - [Brief context or how it was used]
(Continue for all verses mentioned)

Practical Applications

[Timestamp] [Summarized application]
[Timestamp] [Summarized application]
(Continue for all practical applications)


After completing the categorized summaries, provide a brief overview (2-3 paragraphs) of the seminar, highlighting:

The central message or theme of the seminar
How the arguments and verses support the main points
The overall approach to marriage presented by John Street


Note any recurring themes, emphasis, or unique perspectives presented throughout the seminar.
If there are any ambiguities or unclear sections in the transcript, mention these in your response.

Remember to focus on the substantive content of the seminar, capturing the essence of John Street's teachings on marriage. Your goal is to create a clear, concise, and well-organized summary that someone could use to quickly understand the key elements of the seminar without listening to the entire recording.

Return your output in pastable markdown.

Use this Youtube URL to generate links to the timestamps: </code></pre>
</section>
<section id="step-2-summarize" class="level2">
<h2 class="anchored" data-anchor-id="step-2-summarize">Step 2: Summarize</h2>
<p>I took the above prompt and transcript data to generate a summary of the conference talk. I did have to instruct the LLM to return the output in “pastable markdown.”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/summary_qa.png" class="img-fluid figure-img"></p>
<figcaption>Summary of Q&amp;A</figcaption>
</figure>
</div>
<p>The markdown genrated by Claude is below:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Biblical Counseling Q&amp;A Session Summary</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q1: How can I get training in true biblical counseling?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=101s)</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">Dr. Street recommends several options:</span>
<span id="cb4-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Get an accredited graduate degree in biblical counseling for in-depth study.</span>
<span id="cb4-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Attend training sessions offered by the Association of Certified Biblical Counselors (ACBC).</span>
<span id="cb4-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Look for undergraduate programs in biblical counseling at schools like Boyce College or The Master's University.</span>
<span id="cb4-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Attend seminars and workshops on biblical counseling.</span>
<span id="cb4-10"></span>
<span id="cb4-11">He emphasizes the importance of ensuring the training adheres to true biblical counseling standards, which can be verified by checking the ACBC website (biblicalcounseling.com) for their statement of faith and practice.</span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q2: How do we deal with past hurts, pains, difficulties and abuse?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=371s)</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">Dr. Street provides the following guidance:</span>
<span id="cb4-16"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Understand that we live in a sinful world where bad things happen.</span>
<span id="cb4-17"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Choose whether to let past traumas define you or allow Christ to define you.</span>
<span id="cb4-18"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Focus on doing good and not repaying evil with evil.</span>
<span id="cb4-19"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Seek peace and pursue righteousness.</span>
<span id="cb4-20"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Be prepared to explain your faith and hope to others who notice your changed behavior.</span>
<span id="cb4-21"></span>
<span id="cb4-22">He emphasizes that while traumatic experiences are real, Christians should not let them control their lives, but instead find their identity in Christ.</span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q3: At what age do you encourage children to move out of the home?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=748s)</span></span>
<span id="cb4-25"></span>
<span id="cb4-26">Dr. Street provides the following guidelines:</span>
<span id="cb4-27"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There's no specific age, as individual circumstances (like disabilities) may affect this decision.</span>
<span id="cb4-28"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Children should be raised with the expectation of eventually leaving home.</span>
<span id="cb4-29"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents should encourage independence when children are physically and mentally capable of supporting themselves.</span>
<span id="cb4-30"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>For adult children living at home, parents can implement strategies like charging rent to encourage moving out.</span>
<span id="cb4-31"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Parents should act as a safety net but not enable prolonged dependence.</span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q4: What do you say to couples living together prior to marriage?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=977s)</span></span>
<span id="cb4-34"></span>
<span id="cb4-35">Dr. Street strongly advises against cohabitation before marriage:</span>
<span id="cb4-36"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>He states that couples living together before marriage are "living openly in sin."</span>
<span id="cb4-37"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>He emphasizes that Christians should be different from worldly practices.</span>
<span id="cb4-38"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>He advises couples to stop cohabiting, repent, and ask each other for forgiveness.</span>
<span id="cb4-39"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>He explains that sexual relationships should only occur within a monogamous, heterosexual marriage.</span>
<span id="cb4-40"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>He warns that premarital cohabitation can undermine trust and integrity in the future marriage.</span>
<span id="cb4-41"></span>
<span id="cb4-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q5: What do Christian parents do when an unmarried couple want to spend the night together in their home?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1166s)</span></span>
<span id="cb4-43"></span>
<span id="cb4-44">Dr. Street advises:</span>
<span id="cb4-45"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Parents should not allow unmarried couples to share a room in their home.</span>
<span id="cb4-46"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>They should make separate sleeping arrangements, even if it means parents sleeping separately to accommodate guests.</span>
<span id="cb4-47"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents shouldn't compromise their principles to accommodate others' ungodliness.</span>
<span id="cb4-48"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>While parents can express love in other ways, they shouldn't enable or approve of sinful behavior.</span>
<span id="cb4-49"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>This applies to all unmarried couples, regardless of sexual orientation.</span>
<span id="cb4-50"></span>
<span id="cb4-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q6: How do we help young men and women who are not married but want to become married?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1353s)</span></span>
<span id="cb4-52"></span>
<span id="cb4-53">Dr. Street references 1 Thessalonians 4:3-7 and advises:</span>
<span id="cb4-54"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Teach them to choose a spouse based on holiness and honor, not primarily on physical attraction.</span>
<span id="cb4-55"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Encourage them to consider whether their relationship leads to greater holiness for both partners.</span>
<span id="cb4-56"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Help them understand the importance of honoring parents' wisdom in choosing a spouse.</span>
<span id="cb4-57"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Prepare them for the reality that they're marrying someone with flaws, not the idealized version they see while dating.</span>
<span id="cb4-58"></span>
<span id="cb4-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q7: What role do godly parents play in encouraging their children into a godly marriage?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1670s)</span></span>
<span id="cb4-60"></span>
<span id="cb4-61">Dr. Street suggests:</span>
<span id="cb4-62"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Parents should teach their children what Scripture says about marriage.</span>
<span id="cb4-63"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>They should guide their children in making decisions about marriage in an honorable and godly way.</span>
<span id="cb4-64"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents often have wisdom that younger people lack, even if the parents aren't believers.</span>
<span id="cb4-65"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Children should pay close attention to their parents' input about potential spouses.</span>
<span id="cb4-66"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Parents should help their children realize they're marrying someone with flaws, not a perfect person.</span>
<span id="cb4-67"></span>
<span id="cb4-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q8: Should married couples live with their in-laws?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1917s)</span></span>
<span id="cb4-69"></span>
<span id="cb4-70">Dr. Street provides the following guidance:</span>
<span id="cb4-71"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There's no simple yes or no answer, as circumstances vary.</span>
<span id="cb4-72"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Living with in-laws can be necessary for caregiving or financial reasons.</span>
<span id="cb4-73"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Generally, it's not the best arrangement for newly married couples.</span>
<span id="cb4-74"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>If couples do live with in-laws, it's crucial to maintain proper boundaries and priorities.</span>
<span id="cb4-75"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>The married couple must present a unified front and prioritize their relationship over parental relationships.</span>
<span id="cb4-76"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>The husband and wife should always side with each other, not their respective parents.</span>
<span id="cb4-77"></span>
<span id="cb4-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q9: How do I make my husband a priority when I have a career?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2164s)</span></span>
<span id="cb4-79"></span>
<span id="cb4-80">Dr. Street advises:</span>
<span id="cb4-81"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>It's not wrong for a woman to have a career, but it shouldn't dictate family priorities.</span>
<span id="cb4-82"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>A woman's primary responsibility should be to her husband, children, and home, not her career.</span>
<span id="cb4-83"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Husbands should take leadership in providing for the family financially.</span>
<span id="cb4-84"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Both spouses should work together to balance career and home responsibilities.</span>
<span id="cb4-85"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Husbands should actively help with household tasks, especially if both spouses work outside the home.</span>
<span id="cb4-86"></span>
<span id="cb4-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q10: Can I have a calling at work as a woman?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2470s)</span></span>
<span id="cb4-88"></span>
<span id="cb4-89">Dr. Street states:</span>
<span id="cb4-90"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There is no special "calling" for women in careers in the same way as pastoral ministry.</span>
<span id="cb4-91"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Women can have successful careers and be well-accomplished professionally.</span>
<span id="cb4-92"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Careers can be used in good and godly ways, including in Christian service.</span>
<span id="cb4-93"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>However, a woman's home and husband should always be her top priority.</span>
<span id="cb4-94"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Women should ensure their career doesn't overshadow their primary responsibilities to family and home.</span>
<span id="cb4-95"></span>
<span id="cb4-96"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q11: What are some basic principles to apply if a Christian is married to a non-Christian?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2674s)</span></span>
<span id="cb4-97"></span>
<span id="cb4-98">Dr. Street provides the following guidance based on 1 Peter 3:</span>
<span id="cb4-99"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>For wives with unbelieving husbands, follow 1 Peter 3:1-6 as your guide.</span>
<span id="cb4-100"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>For husbands with unbelieving wives, follow 1 Peter 3:7.</span>
<span id="cb4-101"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Focus on unity with other Christians, sympathy, love, and humility.</span>
<span id="cb4-102"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Don't repay evil with evil, but bless others instead.</span>
<span id="cb4-103"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Seek peace and pursue righteousness.</span>
<span id="cb4-104"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>Be prepared to explain your faith when your spouse asks about your changed behavior.</span>
<span id="cb4-105"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7. </span>View yourself as God's missionary to your unbelieving spouse.</span>
<span id="cb4-106"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">8. </span>Live out your faith consistently, even in the face of difficulties.</span>
<span id="cb4-107"></span>
<span id="cb4-108"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Main Themes of the Q&amp;A Session:</span></span>
<span id="cb4-109"></span>
<span id="cb4-110"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Biblical approach to counseling and dealing with past traumas</span>
<span id="cb4-111"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Christian perspectives on marriage, cohabitation, and family life</span>
<span id="cb4-112"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Balancing career and family responsibilities, especially for women</span>
<span id="cb4-113"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Parenting adult children and encouraging independence</span>
<span id="cb4-114"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Navigating relationships with in-laws</span>
<span id="cb4-115"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>Guidance for Christians married to non-believers</span>
<span id="cb4-116"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7. </span>The importance of maintaining biblical standards in a secular culture</span>
<span id="cb4-117"></span>
<span id="cb4-118">The session emphasizes a strong commitment to biblical principles in all aspects of life, particularly in marriage and family relationships. It also stresses the importance of distinctively Christian behavior in contrast to worldly practices.</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>God</category>
  <category>Marriage</category>
  <category>Summary</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/</guid>
  <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How Dwarkesh Patel Uses AI &amp; Claude</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-07-26-dwarkesh-claude/</link>
  <description><![CDATA[ 




<p>Dwarkesh Patel is becoming the new Lex Fridman of podcasting. Lex got his start a podcaster interviewing AI experts. Since then Lex has branched out and most of his guests are non AI-experts. Dwarkesh has filled this gap. In this interview, Dan Shipper interviews him:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Vm49oIPtyRE" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>I listened to 15 minutes but didn’t want to listen to the rest of it. But I was still curious how Dwarkesh uses AI in his day-to-day. So I grabbed the transcript (which is available via Youtube’s API). You can use a Python library <a href="https://pypi.org/project/youtube-transcript-api/">youtube-transcript-api</a> or <a href="https://youtubetranscript.com/?v=Vm49oIPtyRE">web services</a> that do the same thing from a web interface.</p>
<p>I copied the whole transcript into ChatGPT and Claude with the following prompt:</p>
<blockquote class="blockquote">
<p>What are the main ways that Dhwarkesh uses AI in his workflow based on this transcript summary below? Output the thing and more detail about it.</p>
</blockquote>
<p>with the full transcript below. ChatGPT actually was unable to process that amount of text but Claude 3.5 Sonnet was. Claude’s output is below (prompted it to regenerate in Markdown so it’s copy-pastable in a Quarto markdown document):</p>
<section id="dhwarkeshs-ai-workflow" class="level1">
<h1>Dhwarkesh’s AI Workflow</h1>
<section id="research-assistance" class="level2">
<h2 class="anchored" data-anchor-id="research-assistance">1. Research Assistance</h2>
<ul>
<li>Uses Claude to help understand complex topics and ideas when preparing for interviews</li>
<li>Uploads books/papers to Claude projects and asks questions to gain deeper understanding</li>
<li>Uses Claude to explain concepts he doesn’t fully grasp from his reading</li>
</ul>
</section>
<section id="space-repetition-flashcards" class="level2">
<h2 class="anchored" data-anchor-id="space-repetition-flashcards">2. Space Repetition Flashcards</h2>
<ul>
<li>Uses an AI tool (likely Claude) to generate question-answer pairs from content he’s studying</li>
<li>Adds these to a spaced repetition app called Mochi to reinforce learning over time</li>
</ul>
</section>
<section id="interview-preparation" class="level2">
<h2 class="anchored" data-anchor-id="interview-preparation">3. Interview Preparation</h2>
<ul>
<li>Experiments with using Claude to analyze patterns in his past interview questions</li>
<li>Tries to use this to generate potential questions for upcoming interviews, though with limited success so far</li>
</ul>
</section>
<section id="post-production-assistance" class="level2">
<h2 class="anchored" data-anchor-id="post-production-assistance">4. Post-production Assistance</h2>
<ul>
<li>Uses AI speech-to-text (Assembly AI) to generate initial podcast transcripts</li>
<li>Experiments with using GPT-4 to clean up and improve readability of transcripts</li>
<li>Working on workflows to use AI to generate title ideas, clip suggestions, and highlights from transcripts</li>
</ul>
</section>
<section id="writing-assistance" class="level2">
<h2 class="anchored" data-anchor-id="writing-assistance">5. Writing Assistance</h2>
<ul>
<li>Uses Claude projects to organize notes, quotes, and ideas for long-form writing</li>
<li>Asks Claude for help analyzing themes and creating outlines from his scattered notes</li>
</ul>
</section>
<section id="general-learning-companion" class="level2">
<h2 class="anchored" data-anchor-id="general-learning-companion">6. General Learning Companion</h2>
<ul>
<li>Frequently turns to Claude as a “first thing” when trying to understand new concepts or get context on topics</li>
</ul>
<p>I have been wanting to try Claude more so I signed up for a paid service. They’ve introduced a notion of <a href="https://www.anthropic.com/news/projects">Projects</a> which are areas where you can group chats and upload data to chat over.</p>
<p>In the “How to Use Claude” example project, one of the files is a Claude Prompting Guide that I found useful as a refresher for good prompt engineering practices:</p>
</section>
</section>
<section id="claude-prompting-guide" class="level1">
<h1>Claude prompting guide</h1>
<section id="general-tips-for-effective-prompting" class="level2">
<h2 class="anchored" data-anchor-id="general-tips-for-effective-prompting">General tips for effective prompting</h2>
<section id="be-clear-and-specific" class="level3">
<h3 class="anchored" data-anchor-id="be-clear-and-specific">1. Be clear and specific</h3>
<ul>
<li>Clearly state your task or question at the beginning of your message.</li>
<li>Provide context and details to help Claude understand your needs.</li>
<li>Break complex tasks into smaller, manageable steps.</li>
</ul>
<p>Bad prompt: <prompt> “Help me with a presentation.” </prompt></p>
<p>Good prompt: <prompt> “I need help creating a 10-slide presentation for our quarterly sales meeting. The presentation should cover our Q2 sales performance, top-selling products, and sales targets for Q3. Please provide an outline with key points for each slide.” </prompt></p>
<p>Why it’s better: The good prompt provides specific details about the task, including the number of slides, the purpose of the presentation, and the key topics to be covered.</p>
</section>
<section id="use-examples" class="level3">
<h3 class="anchored" data-anchor-id="use-examples">2. Use examples</h3>
<ul>
<li>Provide examples of the kind of output you’re looking for.</li>
<li>If you want a specific format or style, show Claude an example.</li>
</ul>
<p>Bad prompt: <prompt> “Write a professional email.” </prompt></p>
<p>Good prompt: <prompt> “I need to write a professional email to a client about a project delay. Here’s a similar email I’ve sent before:</prompt></p>
<p>‘Dear [Client], I hope this email finds you well. I wanted to update you on the progress of [Project Name]. Unfortunately, we’ve encountered an unexpected issue that will delay our completion date by approximately two weeks. We’re working diligently to resolve this and will keep you updated on our progress. Please let me know if you have any questions or concerns. Best regards, [Your Name]’</p>
<p>Help me draft a new email following a similar tone and structure, but for our current situation where we’re delayed by a month due to supply chain issues.” </p>
<p>Why it’s better: The good prompt provides a concrete example of the desired style and tone, giving Claude a clear reference point for the new email.</p>
</section>
<section id="encourage-thinking" class="level3">
<h3 class="anchored" data-anchor-id="encourage-thinking">3. Encourage thinking</h3>
<ul>
<li>For complex tasks, ask Claude to “think step-by-step” or “explain your reasoning.”</li>
<li>This can lead to more accurate and detailed responses.</li>
</ul>
<p>Bad prompt: <prompt> “How can I improve team productivity?” </prompt></p>
<p>Good prompt: <prompt> “I’m looking to improve my team’s productivity. Think through this step-by-step, considering the following factors: 1. Current productivity blockers (e.g., too many meetings, unclear priorities) 2. Potential solutions (e.g., time management techniques, project management tools) 3. Implementation challenges 4. Methods to measure improvement</prompt></p>
<p>For each step, please provide a brief explanation of your reasoning. Then summarize your ideas at the end.” </p>
<p>Why it’s better: The good prompt asks Claude to think through the problem systematically, providing a guided structure for the response and asking for explanations of the reasoning process. It also prompts Claude to create a summary at the end for easier reading.</p>
</section>
<section id="iterative-refinement" class="level3">
<h3 class="anchored" data-anchor-id="iterative-refinement">4. Iterative refinement</h3>
<ul>
<li>If Claude’s first response isn’t quite right, ask for clarifications or modifications.</li>
<li>You can always say “That’s close, but can you adjust X to be more like Y?”</li>
</ul>
<p>Bad prompt: <prompt> “Make it better.” </prompt></p>
<p>Good prompt: <prompt> “That’s a good start, but please refine it further. Make the following adjustments: 1. Make the tone more casual and friendly 2. Add a specific example of how our product has helped a customer 3. Shorten the second paragraph to focus more on the benefits rather than the features” </prompt></p>
<p>Why it’s better: The good prompt provides specific feedback and clear instructions for improvements, allowing Claude to make targeted adjustments instead of just relying on Claude’s innate sense of what “better” might be — which is likely different from the user’s definition!</p>
</section>
<section id="leverage-claudes-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="leverage-claudes-knowledge">5. Leverage Claude’s knowledge</h3>
<ul>
<li>Claude has broad knowledge across many fields. Don’t hesitate to ask for explanations or background information</li>
<li>Be sure to include relevant context and details so that Claude’s response is maximally targeted to be helpful</li>
</ul>
<p>Bad prompt: <prompt> “What is marketing? How do I do it?” </prompt></p>
<p>Good prompt: <prompt> “I’m developing a marketing strategy for a new eco-friendly cleaning product line. Can you provide an overview of current trends in green marketing? Please include: 1. Key messaging strategies that resonate with environmentally conscious consumers 2. Effective channels for reaching this audience 3. Examples of successful green marketing campaigns from the past year 4. Potential pitfalls to avoid (e.g., greenwashing accusations)</prompt></p>
<p>This information will help me shape our marketing approach.” </p>
<p>Why it’s better: The good prompt asks for specific, contextually relevant information that leverages Claude’s broad knowledge base. It provides context for how the information will be used, which helps Claude frame its answer in the most relevant way.</p>
</section>
<section id="use-role-playing" class="level3">
<h3 class="anchored" data-anchor-id="use-role-playing">6. Use role-playing</h3>
<ul>
<li>Ask Claude to adopt a specific role or perspective when responding.</li>
</ul>
<p>Bad prompt: <prompt> “Help me prepare for a negotiation.” </prompt></p>
<p>Good prompt: <prompt> “You are a fabric supplier for my backpack manufacturing company. I’m preparing for a negotiation with this supplier to reduce prices by 10%. As the supplier, please provide: 1. Three potential objections to our request for a price reduction 2. For each objection, suggest a counterargument from my perspective 3. Two alternative proposals the supplier might offer instead of a straight price cut</prompt></p>
<p>Then, switch roles and provide advice on how I, as the buyer, can best approach this negotiation to achieve our goal.” </p>
<p>Why it’s better: This prompt uses role-playing to explore multiple perspectives of the negotiation, providing a more comprehensive preparation. Role-playing also encourages Claude to more readily adopt the nuances of specific perspectives, increasing the intelligence and performance of Claude’s response.</p>
</section>
</section>
<section id="task-specific-tips-and-examples" class="level2">
<h2 class="anchored" data-anchor-id="task-specific-tips-and-examples">Task-specific tips and examples</h2>
<section id="content-creation" class="level3">
<h3 class="anchored" data-anchor-id="content-creation">Content Creation</h3>
<ol type="1">
<li><p><strong>Specify your audience</strong></p>
<ul>
<li>Tell Claude who the content is for.</li>
</ul>
<p>Bad prompt: <prompt> “Write something about cybersecurity.” </prompt></p>
<p>Good prompt: <prompt> “I need to write a blog post about cybersecurity best practices for small business owners. The audience is not very tech-savvy, so the content should be:</prompt></p>
<ol type="1">
<li>Easy to understand, avoiding technical jargon where possible</li>
<li>Practical, with actionable tips they can implement quickly</li>
<li>Engaging and slightly humorous to keep their interest</li>
</ol>
<p>Please provide an outline for a 1000-word blog post that covers the top 5 cybersecurity practices these business owners should adopt.” </p>
<p>Why it’s better: The good prompt specifies the audience, desired tone, and key characteristics of the content, giving Claude clear guidelines for creating appropriate and effective output.</p></li>
<li><p><strong>Define the tone and style</strong></p>
<ul>
<li>Describe the desired tone.</li>
<li>If you have a style guide, mention key points from it.</li>
</ul>
<p>Bad prompt: <prompt> “Write a product description.” </prompt></p>
<p>Good prompt: <prompt> “Please help me write a product description for our new ergonomic office chair. Use a professional but engaging tone. Our brand voice is friendly, innovative, and health-conscious. The description should:</prompt></p>
<ol type="1">
<li>Highlight the chair’s key ergonomic features</li>
<li>Explain how these features benefit the user’s health and productivity</li>
<li>Include a brief mention of the sustainable materials used</li>
<li>End with a call-to-action encouraging readers to try the chair</li>
</ol>
<p>Aim for about 200 words.” </p>
<p>Why it’s better: This prompt provides clear guidance on the tone, style, and specific elements to include in the product description.</p></li>
<li><p><strong>Define output structure</strong></p>
<ul>
<li>Provide a basic outline or list of points you want covered.</li>
</ul>
<p>Bad prompt: <prompt> “Create a presentation on our company results.” </prompt></p>
<p>Good prompt: <prompt> “I need to create a presentation on our Q2 results. Structure this with the following sections:</prompt></p>
<ol type="1">
<li>Overview</li>
<li>Sales Performance</li>
<li>Customer Acquisition</li>
<li>Challenges</li>
<li>Q3 Outlook</li>
</ol>
<p>For each section, suggest 3-4 key points to cover, based on typical business presentations. Also, recommend one type of data visualization (e.g., graph, chart) that would be effective for each section.” </p>
<p>Why it’s better: This prompt provides a clear structure and asks for specific elements (key points and data visualizations) for each section.</p></li>
</ol>
</section>
<section id="document-summary-and-qa" class="level3">
<h3 class="anchored" data-anchor-id="document-summary-and-qa">Document summary and Q&amp;A</h3>
<ol type="1">
<li><strong>Be specific about what you want</strong>
<ul>
<li>Ask for a summary of specific aspects or sections of the document.</li>
<li>Frame your questions clearly and directly.</li>
<li>Be sure to specify what kind of summary (output structure, content type) you want</li>
</ul></li>
<li><strong>Use the document names</strong>
<ul>
<li>Refer to attached documents by name.</li>
</ul></li>
<li><strong>Ask for citations</strong>
<ul>
<li>Request that Claude cites specific parts of the document in its answers.</li>
</ul></li>
</ol>
<p>Here is an example that combines all three of the above techniques:</p>
<p>Bad prompt: <prompt> “Summarize this report for me.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached a 50-page market research report called ‘Tech Industry Trends 2023’. Can you provide a 2-paragraph summary focusing on AI and machine learning trends? Then, please answer these questions: 1. What are the top 3 AI applications in business for this year? 2. How is machine learning impacting job roles in the tech industry? 3. What potential risks or challenges does the report mention regarding AI adoption?</prompt></p>
<p>Please cite specific sections or page numbers when answering these questions.” </p>
<p>Why it’s better: This prompt specifies the exact focus of the summary, provides specific questions, and asks for citations, ensuring a more targeted and useful response. It also indicates the ideal summary output structure, such as limiting the response to 2 paragraphs.</p>
</section>
<section id="data-analysis-and-visualization" class="level3">
<h3 class="anchored" data-anchor-id="data-analysis-and-visualization">Data analysis and visualization</h3>
<ol type="1">
<li><p><strong>Specify the desired format</strong></p>
<ul>
<li>Clearly describe the format you want the data in.</li>
</ul>
<p>Bad prompt: <prompt> “Analyze our sales data.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached a spreadsheet called ‘Sales Data 2023’. Can you analyze this data and present the key findings in the following format:</prompt></p>
<ol type="1">
<li><p>Executive Summary (2-3 sentences)</p></li>
<li><p>Key Metrics:</p>
<ul>
<li>Total sales for each quarter</li>
<li>Top-performing product category</li>
<li>Highest growth region</li>
</ul></li>
<li><p>Trends:</p>
<ul>
<li>List 3 notable trends, each with a brief explanation</li>
</ul></li>
<li><p>Recommendations:</p>
<ul>
<li>Provide 3 data-driven recommendations, each with a brief rationale</li>
</ul></li>
</ol>
<p>After the analysis, suggest three types of data visualizations that would effectively communicate these findings.” </p>
<p>Why it’s better: This prompt provides a clear structure for the analysis, specifies key metrics to focus on, and asks for recommendations and visualization suggestions for further formatting.</p></li>
</ol>
</section>
<section id="brainstorming" class="level3">
<h3 class="anchored" data-anchor-id="brainstorming">Brainstorming</h3>
<ol type="1">
<li>Use Claude to generate ideas by asking for a list of possibilities or alternatives.
<ul>
<li>Be specific about what topics you want Claude to cover in its brainstorming</li>
</ul></li>
</ol>
<p>Bad prompt: <prompt> “Give me some team-building ideas.” </prompt></p>
<p>Good prompt: <prompt> “We need to come up with team-building activities for our remote team of 20 people. Can you help me brainstorm by: 1. Suggesting 10 virtual team-building activities that promote collaboration 2. For each activity, briefly explain how it fosters teamwork 3. Indicate which activities are best for: a) Ice-breakers b) Improving communication c) Problem-solving skills 4. Suggest one low-cost option and one premium option.” </prompt></p>
<p>Why it’s better: This prompt provides specific parameters for the brainstorming session, including the number of ideas, type of activities, and additional categorization, resulting in a more structured and useful output.</p>
<ol start="2" type="1">
<li><p>Request responses in specific formats like bullet points, numbered lists, or tables for easier reading.</p>
<p>Bad Prompt: <prompt> “Compare project management software options.” </prompt></p>
<p>Good Prompt: <prompt> “We’re considering three different project management software options: Asana, Trello, and Microsoft Project. Can you compare these in a table format using the following criteria:</prompt></p>
<ol type="1">
<li>Key Features</li>
<li>Ease of Use</li>
<li>Scalability</li>
<li>Pricing (include specific plans if possible)</li>
<li>Integration capabilities</li>
<li>Best suited for (e.g., small teams, enterprise, specific industries)” </li>
</ol>
<p>Why it’s better: This prompt requests a specific structure (table) for the comparison, provides clear criteria, making the information easy to understand and apply.</p></li>
</ol>
</section>
</section>
<section id="troubleshooting-minimizing-hallucinations-and-maximizing-performance" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-minimizing-hallucinations-and-maximizing-performance">Troubleshooting, minimizing hallucinations, and maximizing performance</h2>
<ol type="1">
<li><strong>Allow Claude to acknowledge uncertainty</strong>
<ul>
<li>Tell Claude that it should say it doesn’t know if it doesn’t know. Ex. “If you’re unsure about something, it’s okay to admit it. Just say you don’t know.”</li>
</ul></li>
<li><strong>Break down complex tasks</strong>
<ul>
<li>If a task seems too large and Claude is missing steps or not performing certain steps well, break it into smaller steps and work through them with Claude one message at a time.</li>
</ul></li>
<li><strong>Include all contextual information for new requests</strong>
<ul>
<li>Claude doesn’t retain information from previous conversations, so include all necessary context in each new conversation.</li>
</ul></li>
</ol>
</section>
<section id="example-good-vs.-bad-prompt-examples" class="level2">
<h2 class="anchored" data-anchor-id="example-good-vs.-bad-prompt-examples">Example good vs.&nbsp;bad prompt examples</h2>
<p>These are more examples that combine multiple prompting techniques to showcase the stark difference between ineffective and highly effective prompts.</p>
<section id="example-1-marketing-strategy-development" class="level3">
<h3 class="anchored" data-anchor-id="example-1-marketing-strategy-development">Example 1: Marketing strategy development</h3>
<p>Bad prompt: <prompt> “Help me create a marketing strategy.” </prompt></p>
<p>Good prompt: <prompt> “As a senior marketing consultant, I need your help developing a comprehensive marketing strategy for our new eco-friendly smartphone accessory line. Our target audience is environmentally conscious millennials and Gen Z consumers. Please provide a detailed strategy that includes:</prompt></p>
<ol type="1">
<li>Market Analysis:
<ul>
<li>Current trends in eco-friendly tech accessories</li>
<li>2-3 key competitors and their strategies</li>
<li>Potential market size and growth projections</li>
</ul></li>
<li>Target Audience Persona:
<ul>
<li>Detailed description of our ideal customer</li>
<li>Their pain points and how our products solve them</li>
</ul></li>
<li>Marketing Mix:
<ul>
<li>Product: Key features to highlight</li>
<li>Price: Suggested pricing strategy with rationale</li>
<li>Place: Recommended distribution channels</li>
<li>Promotion:
<ol type="a">
<li>5 marketing channels to focus on, with pros and cons for each</li>
<li>3 creative campaign ideas for launch</li>
</ol></li>
</ul></li>
<li>Content Strategy:
<ul>
<li>5 content themes that would resonate with our audience</li>
<li>Suggested content types (e.g., blog posts, videos, infographics)</li>
</ul></li>
<li>KPIs and Measurement:
<ul>
<li>5 key metrics to track</li>
<li>Suggested tools for measuring these metrics</li>
</ul></li>
</ol>
<p>Please present this information in a structured format with headings and bullet points. Where relevant, explain your reasoning or provide brief examples.</p>
<p>After outlining the strategy, please identify any potential challenges or risks we should be aware of, and suggest mitigation strategies for each.” </p>
<p>Why it’s better: This prompt combines multiple techniques including role assignment, specific task breakdown, structured output request, brainstorming (for campaign ideas and content themes), and asking for explanations. It provides clear guidelines while allowing room for Claude’s analysis and creativity.</p>
</section>
<section id="example-2-financial-report-analysis" class="level3">
<h3 class="anchored" data-anchor-id="example-2-financial-report-analysis">Example 2: Financial report analysis</h3>
<p>Bad prompt: <prompt> “Analyze this financial report.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached our company’s Q2 financial report titled ‘Q2_2023_Financial_Report.pdf’. Act as a seasoned CFO and analyze this report and prepare a briefing for our board of directors. Please structure your analysis as follows:</prompt></p>
<ol type="1">
<li><p>Executive Summary (3-4 sentences highlighting key points)</p></li>
<li><p>Financial Performance Overview:</p>
<ol type="a">
<li>Revenue: Compare to previous quarter and same quarter last year</li>
<li>Profit margins: Gross and Net, with explanations for any significant changes</li>
<li>Cash flow: Highlight any concerns or positive developments</li>
</ol></li>
<li><p>Key Performance Indicators:</p>
<ul>
<li>List our top 5 KPIs and their current status (Use a table format)</li>
<li>For each KPI, provide a brief explanation of its significance and any notable trends</li>
</ul></li>
<li><p>Segment Analysis:</p>
<ul>
<li>Break down performance by our three main business segments</li>
<li>Identify the best and worst performing segments, with potential reasons for their performance</li>
</ul></li>
<li><p>Balance Sheet Review:</p>
<ul>
<li>Highlight any significant changes in assets, liabilities, or equity</li>
<li>Calculate and interpret key ratios (e.g., current ratio, debt-to-equity)</li>
</ul></li>
<li><p>Forward-Looking Statements:</p>
<ul>
<li>Based on this data, provide 3 key predictions for Q3</li>
<li>Suggest 2-3 strategic moves we should consider to improve our financial position</li>
</ul></li>
<li><p>Risk Assessment:</p>
<ul>
<li>Identify 3 potential financial risks based on this report</li>
<li>Propose mitigation strategies for each risk</li>
</ul></li>
<li><p>Peer Comparison:</p>
<ul>
<li>Compare our performance to 2-3 key competitors (use publicly available data)</li>
<li>Highlight areas where we’re outperforming and areas for improvement</li>
</ul></li>
</ol>
<p>Please use charts or tables where appropriate to visualize data. For any assumptions or interpretations you make, please clearly state them and provide your reasoning.</p>
<p>After completing the analysis, please generate 5 potential questions that board members might ask about this report, along with suggested responses.</p>
<p>Finally, summarize this entire analysis into a single paragraph that I can use as an opening statement in the board meeting.” </p>
<p>Why it’s better: This prompt combines role-playing (as CFO), structured output, specific data analysis requests, predictive analysis, risk assessment, comparative analysis, and even anticipates follow-up questions. It provides a clear framework while encouraging deep analysis and strategic thinking.</p>


</section>
</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-07-26-dwarkesh-claude/</guid>
  <pubDate>Fri, 26 Jul 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>What to do after getting laid off?</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-07-09-what-to-do-after-layoffs/</link>
  <description><![CDATA[ 




<p>My company, UKG, <a href="https://www.sun-sentinel.com/2024/07/a05/2200-layoffs-loom-for-technology-firm-ukg-in-south-florida-north-america-and-overseas/">announced layoffs</a> last Wednesday (see an <a href="https://joshbersin.com/2024/07/ukg-14-reduction-in-force-a-growth-move-that-makes-sense/">industry expert’s take</a> on reasons why). 14% of the company was let go which is around 2,200 out of the 15,000 employees. Many of my teammates and friends were let go. I have been a part of companies that have had larger percentage layoffs (&gt;30%). However, the sheer number of people that were affected is somewhat shocking. Considering the number of lives, families, and children that were disrupted is difficult to think about.</p>
<p>I compiled a list of to-dos after one get’s laid off. Note this list is compiled from the following sources (<a href="https://www.bogleheads.org/forum/viewtopic.php?t=422426">Bogleheads Thread 1</a>, <a href="https://www.bogleheads.org/forum/viewtopic.php?t=431118">Bogleheads Thread 2</a>, <a href="https://hbr.org/2022/11/what-to-do-after-being-laid-off">HBR article</a>). Then I extracted, categorized and ranked each items with gpt-4o.</p>
<section id="to-dos-after-getting-laid-off" class="level1">
<h1>To-Dos After Getting Laid Off</h1>
<section id="immediate-actions" class="level2">
<h2 class="anchored" data-anchor-id="immediate-actions">Immediate Actions:</h2>
<ol type="1">
<li><strong>File for Unemployment</strong>: Apply for unemployment compensation (U.C.).</li>
<li><strong>Review Severance Package</strong>: Understand severance details, including insurance continuation.</li>
<li><strong>Health Insurance</strong>: Decide between COBRA, ACA, or Medicaid based on coverage needs and costs.</li>
<li><strong>Update Resume and Network</strong>: Prepare resume and reach out to recruiters and professional networks.</li>
<li><strong>Take Time to Process</strong>: Allow at least 24 hours to process the layoff before job searching.</li>
<li><strong>Reconfigure Mindset</strong>: Adjust your mindset to stay positive and focused on the future.</li>
<li><strong>Emotional Adjustment</strong>: Take time to process emotions and plan next steps.</li>
<li><strong>Financial Planning</strong>:
<ul>
<li>Calculate monthly burn rate and adjust expenses.</li>
<li>Ensure emergency funds are accessible.</li>
<li>Maximize contributions to Roth IRA if eligible.</li>
</ul></li>
<li><strong>Health and Wellness</strong>: Focus on spiritual, mental and physical health (exercise, diet, socializing).</li>
</ol>
</section>
<section id="financial-considerations" class="level2">
<h2 class="anchored" data-anchor-id="financial-considerations">Financial Considerations:</h2>
<ol type="1">
<li><strong>Understand Severance and Benefits</strong>: Clarify severance package details, including eligibility and benefits.</li>
<li><strong>Expense Management</strong>:
<ul>
<li>Cut discretionary spending.</li>
<li>Consider subletting or exiting the lease if feasible.</li>
</ul></li>
<li><strong>Asset Allocation</strong>:
<ul>
<li>Reassess and adjust asset allocation if necessary.</li>
<li>Consider Roth conversions if in a lower tax bracket.</li>
</ul></li>
<li><strong>Document Accomplishments</strong>: Use <a href="https://www.ed.ac.uk/reflection/reflectors-toolkit/reflecting-on-experience/carl">CARL</a> (Context, Action, Result, Learning) or <a href="https://www.indeed.com/career-advice/interviewing/how-to-use-the-star-interview-response-technique">STAR(T)</a> (Situation, Task, Action, Result + Takeaways) methods to list accomplishments.</li>
<li><strong>Pension Decision</strong>: Evaluate whether to take a lump sum or monthly pension.</li>
</ol>
</section>
<section id="personal-well-being" class="level2">
<h2 class="anchored" data-anchor-id="personal-well-being">Personal Well-being:</h2>
<ol type="1">
<li><strong>Emotional Adjustment</strong>: Take time to process emotions and plan next steps.</li>
<li><strong>Health and Wellness</strong>: Focus on mental and physical health (exercise, diet, socializing).</li>
<li><strong>Positive Mentality</strong>: Engage in activities that improve mental well-being (yoga, meditation, hobbies).</li>
<li><strong>Career Reflection</strong>: Reflect on career goals and consider potential career changes or further education.</li>
</ol>
</section>
<section id="career-management" class="level2">
<h2 class="anchored" data-anchor-id="career-management">Career Management:</h2>
<ol type="1">
<li><strong>Update Resume</strong>: Prepare and tailor your resume for job applications.</li>
<li><strong>Network with Professionals</strong>: Reach out to former bosses, colleagues, and professional networks.</li>
<li><strong>Job Hunting Schedule</strong>: Create a schedule for job search activities.</li>
<li><strong>Behavioral Interview Prep</strong>: Prepare stories that demonstrate your accomplishments and problem-solving skills.</li>
<li><strong>Identify Job Keywords</strong>: Highlight keywords from job descriptions to tailor your resume.</li>
<li><strong>Explore Job Boards</strong>: Search for interesting job listings but delay applications until your resume is optimized.</li>
</ol>
</section>
<section id="long-term-strategy" class="level2">
<h2 class="anchored" data-anchor-id="long-term-strategy">Long-term Strategy:</h2>
<ol type="1">
<li><strong>Prepare for Transition Outcomes</strong>: Be ready for any possible outcomes, including potential layoff or job offer with new entity.</li>
<li><strong>Financial and Career Goal Setting</strong>: Set clear goals for your financial stability and career direction.</li>
<li><strong>Value Alignment</strong>: Identify your values and ensure potential jobs align with them.</li>
<li><strong>Monitor Job Market</strong>: Actively search for new opportunities while negotiating with current and potential employers.</li>
<li><strong>Relocation Considerations</strong>: Explore job opportunities in different locations if current lease can be terminated.</li>
<li><strong>Self-care and Growth</strong>: Use this time for personal growth and maintaining a positive mindset.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>layoffs</category>
  <category>UKG</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-07-09-what-to-do-after-layoffs/</guid>
  <pubDate>Tue, 09 Jul 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Finetuning LLMs with Axolotl</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-05-23-first-axolotl-finetune/</link>
  <description><![CDATA[ 




<p>I started Hamel Husain’s <del>fine-tuning LLM course</del> Mastering LLM course last week. I don’t have a ton of experience fine-tuning LLMs so I thought this would be a good way to learn.</p>
<p>One of the examples he is using throughout the course is fine-tuning an LLM to generate Honeycomb queries. So you can turn natural language into a domain specific language. My goal was to reproduce the model he trained <a href="https://huggingface.co/parlance-labs/hc-mistral-alpaca">here</a>. Here are the steps I took to reproduce what Hamel did:</p>
<p>The class gave us $200 of Jarvislabs credits so I spun up a VM using the <a href="https://jarvislabs.ai/templates/axolotl">Axolotl template</a>. I picked an <del>RTX5000 with 16GB VRAM</del> 1x A100 with 100GB of disk space. The default 20GB of disk space is not enough as the base models take 5-10GB of space each.</p>
<p>I cloned the repo:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> lfs install</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://huggingface.co/parlance-labs/hc-mistral-alpaca</span></code></pre></div>
<p>I logged into Weights and Biases:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install wandb</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb</span> login</span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># paste your api key from https://wandb.ai/home</span></span></code></pre></div>
<p>I logged into Huggingface. Make sure your token has <code>WRITE</code> access:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"huggingface_hub[cli]"</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">huggingface-cli</span> login</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># paste your huggingface token from https://huggingface.co/settings/tokens</span></span></code></pre></div>
<section id="fine-tuning-with-a-smaller-sample" class="level1">
<h1>Fine-Tuning with a Smaller Sample</h1>
<p>I sampled 100 rows of his training data to make the first fine-tune go faster. The uploaded model to huggingface is <a href="https://huggingface.co/lawrencewu/hc-mistral-7B-v0.3-alpaca-first-100">here</a>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_jsonl(file_path):</span>
<span id="cb4-4">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-7">            data.append(json.loads(line.strip()))</span>
<span id="cb4-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> data</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> write_jsonl(data, file_path):</span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> entry <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data:</span>
<span id="cb4-13">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(json.dumps(entry) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to the input JSONL file</span></span>
<span id="cb4-16">input_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/alpaca_synth_queries_healed.jsonl'</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to the output JSONL file</span></span>
<span id="cb4-18">output_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/output_first_100.jsonl'</span></span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the data from the input file</span></span>
<span id="cb4-21">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_jsonl(input_file_path)</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the first 100 rows</span></span>
<span id="cb4-24">first_100_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the first 100 rows to the output file</span></span>
<span id="cb4-27">write_jsonl(first_100_rows, output_file_path)</span>
<span id="cb4-28"></span>
<span id="cb4-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"First 100 rows have been written to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>This is the Axolotl config file I wound up with below. Some changes I made: - updated the base model to <code>mistralai/Mistral-7B-v0.3</code> - used a smaller dataset <code>data/output_first_100.jsonl</code> - updated <code>hub_model_id</code> and <code>wandb_project</code> and <code>wandb_entity</code></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mistralai/Mistral-7B-v0.3</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> MistralForCausalLM</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tokenizer_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LlamaTokenizer</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_mistral_derived_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_8bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_4bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strict</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb5-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datasets</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/output_first_100.jsonl</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sharegpt</span></span>
<span id="cb5-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conversation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpaca</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset_prepared_path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> last_run_prepared</span></span>
<span id="cb5-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val_set_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb5-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./qlora-alpaca-out</span></span>
<span id="cb5-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hub_model_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lawrencewu/hc-mistral-7B-v0.3-alpaca-first-100</span></span>
<span id="cb5-22"></span>
<span id="cb5-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adapter</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> qlora</span></span>
<span id="cb5-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_model_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-25"></span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span></span>
<span id="cb5-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_packing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pad_to_sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb5-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_alpha</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_dropout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb5-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_linear</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_modules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gate_proj</span></span>
<span id="cb5-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> down_proj</span></span>
<span id="cb5-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> up_proj</span></span>
<span id="cb5-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> q_proj</span></span>
<span id="cb5-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v_proj</span></span>
<span id="cb5-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> k_proj</span></span>
<span id="cb5-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> o_proj</span></span>
<span id="cb5-43"></span>
<span id="cb5-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hc-axolotl-mistral</span></span>
<span id="cb5-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_entity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> law</span></span>
<span id="cb5-46"></span>
<span id="cb5-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_accumulation_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb5-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">micro_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">num_epochs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb5-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimizer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> adamw_bnb_8bit</span></span>
<span id="cb5-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lr_scheduler</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosine</span></span>
<span id="cb5-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">learning_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0002</span></span>
<span id="cb5-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max_grad_norm</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb5-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_beta2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb5-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_epsilon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00001</span></span>
<span id="cb5-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_total_limit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb5-58"></span>
<span id="cb5-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train_on_inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fp16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tf32</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_checkpointing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">early_stopping_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-67"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local_rank</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-69"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logging_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xformers_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flash_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-72"></span>
<span id="cb5-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_threshold</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span></span>
<span id="cb5-74"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb5-75"></span>
<span id="cb5-76"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warmup_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb5-77"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evals_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb5-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-79"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_max_new_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb5-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saves_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb5-81"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-82"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weight_decay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb5-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-84"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp_config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-85"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">special_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span></span>
<span id="cb5-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span></span>
<span id="cb5-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unk_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;unk&gt;"</span></span>
<span id="cb5-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_safetensors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>I launched the training script:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc-first-100.yml </span></code></pre></div>
<p>Weighs and biases provides a nice summary of the run too:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> / 0.123 MB of 0.123 MB uploaded</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Run history:</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               eval/loss █▇▁</span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>            eval/runtime ▁▅█</span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> eval/samples_per_second █▄▁</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>   eval/steps_per_second █▄▁</span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>             train/epoch ▁▁▅▅███</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>       train/global_step ▁▁▅▅███</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>         train/grad_norm ██▁</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>     train/learning_rate ▁▅█</span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>              train/loss █▁▅</span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> </span>
<span id="cb7-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Run summary:</span>
<span id="cb7-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>                eval/loss 1.08833</span>
<span id="cb7-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>             eval/runtime 1.0702</span>
<span id="cb7-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>  eval/samples_per_second 9.344</span>
<span id="cb7-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>    eval/steps_per_second 0.934</span>
<span id="cb7-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               total_flos 6965062501662720.0</span>
<span id="cb7-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>              train/epoch 2.0</span>
<span id="cb7-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>        train/global_step 3</span>
<span id="cb7-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>          train/grad_norm 2.29688</span>
<span id="cb7-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>      train/learning_rate 3e-05</span>
<span id="cb7-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               train/loss 1.2203</span>
<span id="cb7-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               train_loss 1.22012</span>
<span id="cb7-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>            train_runtime 70.8206</span>
<span id="cb7-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> train_samples_per_second 3.812</span>
<span id="cb7-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>   train_steps_per_second 0.042</span>
<span id="cb7-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> </span>
<span id="cb7-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> 🚀 View run scarlet-lake-4 at: https://wandb.ai/law/hc-axolotl-mistral/runs/wrnox7vk</span>
<span id="cb7-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span>
<span id="cb7-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Synced 6 W<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">B</span> file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 0 media file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 1 artifact file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">and</span> 1 other file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Find logs at: ./wandb/run-20240523_235927-wrnox7vk/logs</span></code></pre></div>
</section>
<section id="some-things-i-learned" class="level1">
<h1>Some things I learned</h1>
<section id="runtimeerror-_amp_foreach_non_finite_check_and_unscale_cuda-not-implemented-for-bfloat16" class="level2">
<h2 class="anchored" data-anchor-id="runtimeerror-_amp_foreach_non_finite_check_and_unscale_cuda-not-implemented-for-bfloat16">RuntimeError: “_amp_foreach_non_finite_check_and_unscale_cuda” not implemented for ‘BFloat16’</h2>
<p>For one run I got this error:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iciency_estimate:</span> 0.96 total_num_tokens per device: 414041</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Traceback</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">most</span> recent call last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/runpy.py"</span>, line 196, in _run_module_as_main</span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">_run_code</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">code,</span> main_globals, None,</span>
<span id="cb8-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/runpy.py"</span>, line 86, in _run_code</span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">code,</span> run_globals<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 70, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb8-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fire.Fire</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">do_cli</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 143, in Fire</span>
<span id="cb8-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component_trace</span> = _Fire<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component,</span> args, parsed_flag_args, context, name<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 477, in _Fire</span>
<span id="cb8-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component,</span> remaining_args = _CallAndUpdateTrace<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 693, in _CallAndUpdateTrace</span>
<span id="cb8-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component</span> = fn<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*varargs,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">**</span>kwargs<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-15">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 38, in do_cli</span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">do_train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parsed_cfg,</span> parsed_cli_args<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-17">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 66, in do_train</span>
<span id="cb8-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cfg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cfg, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cli_args</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cli_args, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dataset_meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_meta<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-19">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/train.py"</span>, line 170, in train</span>
<span id="cb8-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trainer.train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>resume_from_checkpoint<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-21">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/transformers/trainer.py"</span>, line 1859, in train</span>
<span id="cb8-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">inner_training_loop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-23">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/transformers/trainer.py"</span>, line 2249, in _inner_training_loop</span>
<span id="cb8-24">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">_grad_norm</span> = self.accelerator.clip_grad_norm_<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-25">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/accelerator.py"</span>, line 2269, in clip_grad_norm_</span>
<span id="cb8-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">self.unscale_gradients()</span></span>
<span id="cb8-27">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/accelerator.py"</span>, line 2219, in unscale_gradients</span>
<span id="cb8-28">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">self.scaler.unscale_</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">opt</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-29">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py"</span>, line 307, in unscale_</span>
<span id="cb8-30">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">optimizer_state</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"found_inf_per_device"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> self._unscale_grads_<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py"</span>, line 248, in _unscale_grads_</span>
<span id="cb8-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">torch._amp_foreach_non_finite_check_and_unscale_</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RuntimeError:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_amp_foreach_non_finite_check_and_unscale_cuda"</span> not implemented for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BFloat16'</span></span></code></pre></div>
<p>Setting the parameter <code>bf16: false</code> resolved this issue. Although switching from an RTX5000 GPU to a 1x A100 GPU also resolved the issue.</p>
</section>
<section id="running-out-of-gpu-memory" class="level2">
<h2 class="anchored" data-anchor-id="running-out-of-gpu-memory">Running out of GPU memory</h2>
<p>I had a run where the GPU ran out of memory.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">torch.cuda.OutOfMemoryError:</span> CUDA out of memory. Tried to allocate 784.00 MiB. GPU 0 has a total capacty of 15.74 GiB of which 58.62 MiB is free. Process 1065967 has 15.67 GiB memory in use. Of the allocated memory 13.22 GiB is allocated by PyTorch, and 2.31 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> 🚀 View run crimson-aardvark-1 at: https://wandb.ai/law/hc-axolotl-mistral/runs/itak6glk</span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Synced 6 W<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">B</span> file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 0 media file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 1 artifact file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">and</span> 1 other file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Find logs at: ./wandb/run-20240523_233643-itak6glk/logs</span>
<span id="cb9-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Traceback</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">most</span> recent call last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/bin/accelerate"</span>, line 8, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sys.exit</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">main()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py"</span>, line 46, in main</span>
<span id="cb9-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args.func</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py"</span>, line 1082, in launch_command</span>
<span id="cb9-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">simple_launcher</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py"</span>, line 688, in simple_launcher</span>
<span id="cb9-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">raise</span> subprocess.CalledProcessError<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">returncode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>process.returncode, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cmd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmd<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">subprocess.CalledProcessError:</span> Command <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'['</span>/root/miniconda3/envs/py3.10/bin/python<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>-m<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>axolotl.cli.train<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>hc-first-100.yml<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">']'</span> returned non-zero exit status 1.</span></code></pre></div>
<p>I wound up needing to use a larger GPU to finetune <code>mistralai/Mistral-7B-v0.3</code>.</p>
</section>
</section>
<section id="fine-tuning-with-the-full-dataset" class="level1">
<h1>Fine-Tuning with the full dataset</h1>
<p>The config file I used is below:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mistralai/Mistral-7B-v0.3</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> MistralForCausalLM</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tokenizer_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LlamaTokenizer</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_mistral_derived_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_8bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_4bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strict</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datasets</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/alpaca_synth_queries_healed.jsonl</span></span>
<span id="cb10-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sharegpt</span></span>
<span id="cb10-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conversation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpaca</span></span>
<span id="cb10-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset_prepared_path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> last_run_prepared</span></span>
<span id="cb10-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val_set_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb10-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./qlora-alpaca-out</span></span>
<span id="cb10-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hub_model_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lawrencewu/hc-mistral-7B-v0.3-alpaca</span></span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adapter</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> qlora</span></span>
<span id="cb10-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_model_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-25"></span>
<span id="cb10-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span></span>
<span id="cb10-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_packing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pad_to_sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-29"></span>
<span id="cb10-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb10-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_alpha</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_dropout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb10-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_linear</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_modules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gate_proj</span></span>
<span id="cb10-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> down_proj</span></span>
<span id="cb10-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> up_proj</span></span>
<span id="cb10-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> q_proj</span></span>
<span id="cb10-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v_proj</span></span>
<span id="cb10-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> k_proj</span></span>
<span id="cb10-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> o_proj</span></span>
<span id="cb10-43"></span>
<span id="cb10-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hc-axolotl-mistral</span></span>
<span id="cb10-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_entity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> law</span></span>
<span id="cb10-46"></span>
<span id="cb10-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_accumulation_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">micro_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">num_epochs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimizer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> adamw_bnb_8bit</span></span>
<span id="cb10-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lr_scheduler</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosine</span></span>
<span id="cb10-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">learning_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0002</span></span>
<span id="cb10-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max_grad_norm</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb10-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_beta2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb10-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_epsilon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00001</span></span>
<span id="cb10-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_total_limit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb10-58"></span>
<span id="cb10-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train_on_inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fp16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tf32</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-64"></span>
<span id="cb10-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_checkpointing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">early_stopping_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-67"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local_rank</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-69"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logging_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xformers_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flash_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-72"></span>
<span id="cb10-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_threshold</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span></span>
<span id="cb10-74"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-75"></span>
<span id="cb10-76"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warmup_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb10-77"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evals_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-79"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_max_new_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb10-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saves_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb10-81"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-82"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weight_decay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb10-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-84"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp_config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-85"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">special_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span></span>
<span id="cb10-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span></span>
<span id="cb10-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unk_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;unk&gt;"</span></span>
<span id="cb10-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_safetensors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>I launched a run with:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc.yml</span></code></pre></div>
<p>I didn’t finish this run because it was going to take ~30 hours.</p>
<p>The logs are here:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root@6df7cfbf0d81:~/axolotl/hc-mistral-alpaca#</span> accelerate launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc.yml</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">The</span> following values were not passed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> and had defaults used instead:</span>
<span id="cb12-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--num_processes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--num_machines</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--mixed_precision</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'no'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--dynamo_backend</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'no'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> avoid this warning pass in values for each of the problematic parameters or run <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> config<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>.</span>
<span id="cb12-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WARNING:</span> BNB_CUDA_VERSION=118 environment variable detected<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loading</span> libbitsandbytes_cuda118.so.</span>
<span id="cb12-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">This</span> can be used to load a bitsandbytes version that is different from the PyTorch CUDA version.</span>
<span id="cb12-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">If</span> this was unintended set the BNB_CUDA_VERSION variable to an empty string: export BNB_CUDA_VERSION=</span>
<span id="cb12-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">If</span> you use the manual override make sure the right libcudart.so is in your LD_LIBRARY_PATH</span>
<span id="cb12-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">For</span> example by adding the following to your .bashrc: export LD_LIBRARY_PATH=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LD_LIBRARY_PATH</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>path_to_cuda_dir/lib64</span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:01,268] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [datasets.<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>:58] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> PyTorch version 2.1.2+cu118 available.</span>
<span id="cb12-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,171] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">real_accelerator.py:203:get_accelerator</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> Setting ds_accelerator to cuda <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auto</span> detect<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,240] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">root.spawn:38</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> gcc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-pthread</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-B</span> /root/miniconda3/envs/py3.10/compiler_compat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wno-unused-result</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wsign-compare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-DNDEBUG</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fwrapv</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wall</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-isystem</span> /root/miniconda3/envs/py3.10/include <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-isystem</span> /root/miniconda3/envs/py3.10/include <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> /tmp/tmp63g3s38_/test.c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /tmp/tmp63g3s38_/test.o</span>
<span id="cb12-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,258] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">root.spawn:38</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> gcc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-pthread</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-B</span> /root/miniconda3/envs/py3.10/compiler_compat /tmp/tmp63g3s38_/test.o <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-laio</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /tmp/tmp63g3s38_/a.out</span>
<span id="cb12-18"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  Please specify the CUTLASS repo directory as environment variable <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUTLASS_PATH</span></span>
<span id="cb12-19"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  sparse_attn requires a torch version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>= 1.5 and <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> 2.0 but detected 2.1</span>
<span id="cb12-20"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  using untested triton version <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2.1.0</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> only 1.0.0 is known to be compatible</span>
<span id="cb12-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132:</span> FutureWarning: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume_download</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">force_download</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>True<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb12-22">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warnings.warn</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb12-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:04,037] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">axolotl.normalize_config:182</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">RANK:0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> GPU memory usage baseline: 0.000GB <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+0.627GB</span> misc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-24">                                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dP</span>            dP   dP </span>
<span id="cb12-25">                                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span>            88   88 </span>
<span id="cb12-26">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.d8888b.</span> dP.  .dP .d8888b. 88 .d8888b. d8888P 88 </span>
<span id="cb12-27">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `88  `8bd8'</span>  88<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `88 88 88'</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span>   88   88 </span>
<span id="cb12-28">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88.</span>  .88  .d88b.  88.  .88 88 88.  .88   88   88 </span>
<span id="cb12-29">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>88888P8 dP<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `dP `88888P'</span> dP <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88888P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'   dP   dP </span></span>
<span id="cb12-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                       </span></span>
<span id="cb12-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                       </span></span>
<span id="cb12-32"></span>
<span id="cb12-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">****************************************</span></span>
<span id="cb12-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">**** Axolotl Dependency Versions *****</span></span>
<span id="cb12-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  accelerate: 0.30.1         </span></span>
<span id="cb12-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        peft: 0.10.0         </span></span>
<span id="cb12-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformers: 4.40.2         </span></span>
<span id="cb12-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">         trl: 0.8.5          </span></span>
<span id="cb12-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">       torch: 2.1.2+cu118    </span></span>
<span id="cb12-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bitsandbytes: 0.43.1         </span></span>
<span id="cb12-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">****************************************</span></span>
<span id="cb12-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.</span></span>
<span id="cb12-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  warnings.warn(</span></span>
<span id="cb12-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:280] [PID:4902] [RANK:0] EOS: 2 / &lt;/s&gt;</span></span>
<span id="cb12-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:281] [PID:4902] [RANK:0] BOS: 1 / &lt;s&gt;</span></span>
<span id="cb12-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:282] [PID:4902] [RANK:0] PAD: 2 / &lt;/s&gt;</span></span>
<span id="cb12-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:283] [PID:4902] [RANK:0] UNK: 0 / &lt;unk&gt;</span></span>
<span id="cb12-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [INFO] [axolotl.load_tokenizer:294] [PID:4902] [RANK:0] No Chat template selected. Consider adding a chat template for easier inference.</span></span>
<span id="cb12-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [INFO] [axolotl.load_tokenized_prepared_datasets:183] [PID:4902] [RANK:0] Unable to find prepared dataset in last_run_prepared/a1079e1609d0b7bf952979250cf0f7f4</span></span>
<span id="cb12-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,054] [INFO] [axolotl.load_tokenized_prepared_datasets:184] [PID:4902] [RANK:0] Loading raw datasets...</span></span>
<span id="cb12-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,054] [WARNING] [axolotl.load_tokenized_prepared_datasets:186] [PID:4902] [RANK:0] Processing datasets during training can lead to VRAM instability. Please pre-process your dataset.</span></span>
<span id="cb12-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Generating train split: 133501 examples [00:01, 75757.77 examples/s]</span></span>
<span id="cb12-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Tokenizing Prompts (num_proc=64): 100%|███████████████████████████████████████████| 133501/133501 [01:21&lt;00:00, 1635.33 examples/s]</span></span>
<span id="cb12-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:31,099] [INFO] [axolotl.load_tokenized_prepared_datasets:410] [PID:4902] [RANK:0] merging datasets</span></span>
<span id="cb12-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Dropping Long Sequences (num_proc=64): 100%|█████████████████████████████████████| 133501/133501 [00:10&lt;00:00, 12220.82 examples/s]</span></span>
<span id="cb12-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:43,227] [INFO] [axolotl.load_tokenized_prepared_datasets:423] [PID:4902] [RANK:0] Saving merged prepared dataset to disk... last_run_prepared/a1079e1609d0b7bf952979250cf0f7f4</span></span>
<span id="cb12-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Saving the dataset (2/2 shards): 100%|███████████████████████████████████████████| 127998/127998 [00:01&lt;00:00, 93288.97 examples/s]</span></span>
<span id="cb12-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:44,812] [DEBUG] [axolotl.calculate_total_num_steps:299] [PID:4902] [RANK:0] total_num_tokens: 70_440_026</span></span>
<span id="cb12-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,240] [DEBUG] [axolotl.calculate_total_num_steps:312] [PID:4902] [RANK:0] `total_supervised_tokens: 14_142_350`</span></span>
<span id="cb12-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,240] [DEBUG] [axolotl.calculate_total_num_steps:391] [PID:4902] [RANK:0] total_num_steps: 5400</span></span>
<span id="cb12-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,247] [DEBUG] [axolotl.train.train:56] [PID:4902] [RANK:0] loading tokenizer... mistralai/Mistral-7B-v0.3</span></span>
<span id="cb12-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:280] [PID:4902] [RANK:0] EOS: 2 / &lt;/s&gt;</span></span>
<span id="cb12-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:281] [PID:4902] [RANK:0] BOS: 1 / &lt;s&gt;</span></span>
<span id="cb12-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:282] [PID:4902] [RANK:0] PAD: 2 / &lt;/s&gt;</span></span>
<span id="cb12-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:283] [PID:4902] [RANK:0] UNK: 0 / &lt;unk&gt;</span></span>
<span id="cb12-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [INFO] [axolotl.load_tokenizer:294] [PID:4902] [RANK:0] No Chat template selected. Consider adding a chat template for easier inference.</span></span>
<span id="cb12-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.train.train:85] [PID:4902] [RANK:0] loading model and peft_config...</span></span>
<span id="cb12-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`low_cpu_mem_usage` was None, now set to True since model is quantized.</span></span>
<span id="cb12-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Loading checkpoint shards: 100%|█████████████████████████████████████████████████████████████████████| 3/3 [00:03&lt;00:00,  1.19s/it]</span></span>
<span id="cb12-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,315] [INFO] [axolotl.load_model:734] [PID:4902] [RANK:0] GPU memory usage after model load: 4.354GB (+0.146GB cache, +1.111GB misc)</span></span>
<span id="cb12-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,326] [INFO] [axolotl.load_model:785] [PID:4902] [RANK:0] converting PEFT model w/ prepare_model_for_kbit_training</span></span>
<span id="cb12-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,330] [INFO] [axolotl.load_model:794] [PID:4902] [RANK:0] converting modules to torch.bfloat16 for flash attention</span></span>
<span id="cb12-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,334] [INFO] [axolotl.load_lora:951] [PID:4902] [RANK:0] found linear modules: ['</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">up_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">q_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">k_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">down_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gate_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">o_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">']</span></span>
<span id="cb12-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">trainable params: 83,886,080 || all params: 7,331,909,632 || trainable%: 1.1441232122376492</span></span>
<span id="cb12-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,299] [INFO] [axolotl.load_model:843] [PID:4902] [RANK:0] GPU memory usage after adapters: 4.511GB (+1.146GB cache, +1.111GB misc)</span></span>
<span id="cb12-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,787] [INFO] [axolotl.train.train:119] [PID:4902] [RANK:0] Pre-saving adapter config to ./qlora-alpaca-out</span></span>
<span id="cb12-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,807] [INFO] [axolotl.train.train:156] [PID:4902] [RANK:0] Starting trainer...</span></span>
<span id="cb12-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Currently logged in as: law. Use `wandb login --relogin` to force relogin</span></span>
<span id="cb12-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Tracking run with wandb version 0.17.0</span></span>
<span id="cb12-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run data is saved locally in /home/axolotl/hc-mistral-alpaca/wandb/run-20240524_000556-iewv47f2</span></span>
<span id="cb12-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run `wandb offline` to turn off syncing.</span></span>
<span id="cb12-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Syncing run lyric-wildflower-5</span></span>
<span id="cb12-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: ⭐️ View project at https://wandb.ai/law/hc-axolotl-mistral</span></span>
<span id="cb12-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: 🚀 View run at https://wandb.ai/law/hc-axolotl-mistral/runs/iewv47f2</span></span>
<span id="cb12-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: WARNING Saving files without folders. If you want to preserve subdirectories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")</span></span>
<span id="cb12-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:58,369] [INFO] [axolotl.callbacks.on_train_begin:771] [PID:4902] [RANK:0] The Axolotl config has been saved to the WandB run under files.</span></span>
<span id="cb12-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2.078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}                                                       </span></span>
<span id="cb12-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  0%|                                                                                          | 1/5400 [00:21&lt;32:33:13, 21.71s</span></span>
<span id="cb12-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 49%|█████████████████████████████████████████████▍                      </span></span>
<span id="cb12-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 50%|███████████████████████████████████████████▌                        </span></span>
<span id="cb12-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                                         {'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1900806427001953, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_runtime</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1342.7584, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_samples_per_second</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 9.533, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_steps_per_second</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.596, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}      </span></span>
<span id="cb12-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  0%|                                | 1/5400 [22:44&lt;32:33:13, 21.71s/it[2024-05-24 00:29:04,813] [INFO] [axolotl.callbacks.on_step_end:126] [PID:4902] [RANK:0] GPU memory usage while training: 4.684GB (+12.633GB cache, +1.136GB misc)</span></span>
<span id="cb12-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1821, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2.125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1561, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.9609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 3e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1569, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.3671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 4e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1285, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 5e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0089, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 6e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 7e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.7215, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 8e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 9e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.4603, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.8984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3983, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.6796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00011000000000000002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.363, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00012, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.7421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00013000000000000002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.244, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.73046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00014, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2493, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.478515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00015000000000000001, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2496, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.373046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00016, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2267, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.400390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00017, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00018, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.283203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1825, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.28515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999998295075366, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2323, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.27734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999993180302042, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1805, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.37109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999984655681775, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.283203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999997272121747, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1843, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2333984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999957376913195, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1804, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999938622774187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1682, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2216796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999916458806832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1838, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199998908850187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.149, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999861901418502, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1628, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999829508016124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1699, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999979370482261, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1719, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999754491850172, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-124"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1624, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2001953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999711869112178, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1532, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999665836623162, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999616394398821, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1893, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999563542456015, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1594, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999507280812765, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1636, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999944760948825, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1473, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2470703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999384528502826, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1527, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999318037877995, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1473, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999248137636438, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1606, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999174827801984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-134"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1549, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999909810839963, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-135"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1742, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999017979455537, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.148, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999893444099703, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1534, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999884749305259, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1225, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999875713565187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999866336882568, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1731, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2119140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998566192605988, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998465607025935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1364, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998361612119813, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1443, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999825420792309, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-144"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1725, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2080078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998143394472386, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-145"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1547, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1572265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998029171805487, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-146"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1499, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997911539961337, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-147"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1617, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997790498980055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-148"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1443, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999766604890291, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1668, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997538189772335, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-150"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1624, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999740692163193, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-151"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1459, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997272244526456, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-152"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1433, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997134158501837, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1284, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996992663605156, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1618, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996847759884661, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1454, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996699447389764, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-156"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996547726171032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-157"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1387, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996392596280206, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-158"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1362, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996234057770184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-159"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1324, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996072110695017, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-160"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1306, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995906755109933, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-161"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995737991071314, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-162"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1264, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995565818636707, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-163"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995390237864818, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-164"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1376, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995211248815517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-165"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1344, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999502885154984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-166"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994843046129977, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-167"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1627, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994653832619292, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-168"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1353, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994461211082296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-169"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.132, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994265181584676, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1356, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994065744193272, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-171"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1466, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999386289897609, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-172"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1259, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993656646002296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-173"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1346, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993446985342223, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-174"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1388, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993233917067358, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-175"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1427, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993017441250356, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-176"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1246, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999279755796503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-177"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1381, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019992574267286358, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-178"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999234756929048, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-179"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019992117464054696, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-180"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019991883951657466, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-181"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1329, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999164703217842, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-182"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1249, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019991406705698338, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-183"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1215, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.154296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999116297229917, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-184"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1354, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990915832064025, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-185"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1266, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990665285077178, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-186"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1155, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990411331424052, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-187"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1454, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990153971191253, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-188"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1322, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989893204466527, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-189"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199896290313388, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-190"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1085, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989361451898144, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-191"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1441, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989090466235806, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-192"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.114, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019988816074444183, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-193"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1252, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1455078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998853827661684, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-194"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1251, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019988257072848503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-195"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987972463235057, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-196"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1249, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987684447873548, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-197"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998739302686219, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-198"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987098200300349, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-199"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.117, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019986799968288557, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-200"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1239, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1533203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019986498330928508, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-201"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1643, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998619328832305, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-202"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1051, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998588484057621, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-203"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1148, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998557298779315, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-204"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1135, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019985257730080217, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-205"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984939067544907, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-206"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.205078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984617000295876, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-207"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1103, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984291528442945, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-208"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1076, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199839626520971, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-209"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.123, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019983630371370477, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-210"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1194, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019983294686376382, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-211"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1164, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982955597229275, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-212"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1089, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982613104044784, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-213"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1328, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982267206939693, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-214"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981917906031947, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-215"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1077, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981565201440652, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-216"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1324, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981209093286077, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-217"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1138, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1494140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019980849581689646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-218"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1062, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998048666677395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-219"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1464, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1923828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019980120348662736, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-220"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979750627480914, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-221"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.113, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979377503354554, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-222"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1406, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979000976410886, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-223"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1111, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019978621046778296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-224"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1007, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997823771458634, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-225"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1047, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977850979965723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-226"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1217, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1455078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977460843048316, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-227"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1105, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977067303967154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-228"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1111, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019976670362856428, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-229"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019976270019851484, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-230"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0978, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019975866275088837, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-231"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1056, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019975459128706156, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-232"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.116, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997504858084227, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-233"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1197, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019974634631637173, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-234"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019974217281232019, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-235"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1131, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2216796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019973796529769108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-236"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1186, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997337237739192, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-237"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1044, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972944824245078, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-238"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1091, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972513870474375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-239"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1098, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.185546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972079516226754, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-240"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0996, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997164176165033, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-241"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.150390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997120060689437, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-242"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1075, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019970756052109295, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-243"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.112, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019970308097446698, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-244"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996985674305932, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-245"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996940198910107, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-246"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1015, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968943835727013, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-247"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1123, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968482283093367, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-248"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968017331357517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-249"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019967548980678008, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-250"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1166, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019967077231214535, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-251"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0998, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996660208312796, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-252"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0926, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019966123536580303, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-253"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019965641591734737, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-254"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0894, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019965156248755606, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-255"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.139, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.189453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019964667507808395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-256"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1024, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.20703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019964175369059764, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-257"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1251, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019963679832677518, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-258"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019963180898830633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-259"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1109, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996267856768924, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-260"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0973, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996217283942462, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-261"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1159, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996166371420922, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-262"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1231, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996115119221665, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-263"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0957, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2373046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019960635273621666, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-264"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1082, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019960115958600193, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-265"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1012, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019959593247329305, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-266"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995906713998724, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-267"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0988, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019958537636753393, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-268"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0922, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2451171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019958004737808318, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-269"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1051, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019957468443333723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-270"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995692875351248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-271"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1081, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019956385668528612, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-272"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0972, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.18359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019955839188567307, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-273"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199552893138149, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-274"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0851, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019954736044458892, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-275"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0979, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019954179380687946, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-276"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0904, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019953619322691865, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-277"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0865, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019953055870661627, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-278"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0862, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019952489024789363, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-279"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.201171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019951918785268352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-280"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1136, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995134515229304, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-281"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0864, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995076812605903, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-282"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0912, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019950187706763078, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-283"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019949603894603096, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-284"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0828, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019949016689778157, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-285"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0886, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019948426092488488, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-286"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0986, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2119140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019947832102935474, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-287"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0855, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.20703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019947234721321658, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-288"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.092, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019946633947850738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-289"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0766, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994602978272756, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-290"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1023, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994542222615815, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-291"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0769, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019944811278349667, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-292"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1332, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.208984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019944196939510435, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-293"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994357920984994, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-294"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0977, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994295808957881, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-295"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0902, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994233357890884, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-296"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019941705678052984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-297"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0833, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019941074387225344, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-298"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0999, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019940439706641176, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-299"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1172, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019939801636516903, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-300"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0768, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019939160177070094, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-301"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1099, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993851532851948, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-302"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1244, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993786709108494, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-303"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019937215464987514, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-304"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019936560450449403, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-305"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2353515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019935902047693948, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-306"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0775, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993524025694566, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-307"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.092, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.185546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199345750784302, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-308"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1904296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993390651237438, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-309"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0827, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019933234559006176, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-310"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0652, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019932559218554708, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-311"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0792, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2001953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019931880491250262, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-312"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0869, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019931198377324272, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-313"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0849, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019930512877009327, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-314"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1043, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019929823990539174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-315"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0628, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1533203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019929131718148714, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-316"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1013, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019928436060073998, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-317"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0878, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992773701655224, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-318"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0823, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019927034587821795, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-319"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.084, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992632877412219, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-320"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0913, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019925619575694094, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-321"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0853, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992490699277933, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-322"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019924191025620877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-323"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0963, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.236328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019923471674462875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-324"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0707, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992274893955061, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-325"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0704, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019922022821130517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-326"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0637, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199212933194502, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-327"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0749, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.205078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019920560434758406, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-328"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0842, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019919824167305035, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-329"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0794, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019919084517341145, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-330"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0816, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019918341485118942, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-331"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0912, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019917595070891798, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-332"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1035, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001991684527491422, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-333"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0785, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019916092097441878, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-334"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0704, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199153355387316, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-335"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1205, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019914575599041352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-336"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0902, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019913812278630274, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-337"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0841, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019913045577758633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-338"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1027, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1904296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019912275496687874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-339"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0851, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001991150203568058, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-340"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0725, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.263671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019910725195000485, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-341"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.081, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990994497491248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-342"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0643, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019909161375682616, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-343"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019908374397578082, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-344"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0708, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990758404086723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-345"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.067, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019906790305819553, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-346"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.21875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990599319270571, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-347"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0639, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019905192701797503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-348"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0857, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1923828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019904388833367882, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-349"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0855, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990358158769096, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-350"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0867, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1884765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019902770965041992, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-351"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0866, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2060546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019901956965697387, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-352"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0941, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019901139589934713, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-353"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0755, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990031883803268, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-354"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0792, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.18359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989949471027115, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-355"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989866720693114, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-356"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989783632829481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-357"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019897002074645485, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-358"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0795, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019896164446267633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-359"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.052, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019895323443446867, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-360"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.072, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989447906646996, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-361"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0774, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989363131562483, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-362"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0684, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2255859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989278019120055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-363"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019891925693487337, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-364"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0689, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019891067822776565, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-365"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0703, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989020657936075, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-366"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0784, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988934196353357, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-367"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019888473975589844, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-368"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0645, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988760261582554, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-369"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0749, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019886727884537778, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-370"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019885849782024832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-371"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0722, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988496830858612, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-372"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0981, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019884083464522212, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-373"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0957, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019883195250134823, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-374"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0924, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.201171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019882303665726828, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-375"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0593, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988140871160223, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-376"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0666, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988051038806621, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-377"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0799, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001987960869542508, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}                </span></span>
<span id="cb12-378"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019878703633986294, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}                </span></span>
<span id="cb12-379"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  5%|███▌                                                                | 287/5400 [2:07:55&lt;31:19:58, 22.06s/it]^CTraceback (most recent call last):</span></span>
<span id="cb12-380"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/bin/accelerate", line 8, in &lt;module&gt;</span></span>
<span id="cb12-381"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    sys.exit(main())</span></span>
<span id="cb12-382"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py", line 46, in main</span></span>
<span id="cb12-383"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    args.func(args)</span></span>
<span id="cb12-384"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py", line 1082, in launch_command</span></span>
<span id="cb12-385"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    simple_launcher(args)</span></span>
<span id="cb12-386"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py", line 685, in simple_launcher</span></span>
<span id="cb12-387"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    process.wait()</span></span>
<span id="cb12-388"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1209, in wait</span></span>
<span id="cb12-389"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    return self._wait(timeout=timeout)</span></span>
<span id="cb12-390"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1959, in _wait</span></span>
<span id="cb12-391"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    (pid, sts) = self._try_wait(0)</span></span>
<span id="cb12-392"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1917, in _try_wait</span></span>
<span id="cb12-393"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    (pid, sts) = os.waitpid(self.pid, wait_flags)</span></span>
<span id="cb12-394"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">KeyboardInterrupt</span></span>
<span id="cb12-395"></span>
<span id="cb12-396"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">root@6df7cfbf0d81:~/axolotl/hc-mistral-alpaca# /root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.</span></span>
<span id="cb12-397"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  warnings.warn(</span></span>
<span id="cb12-398"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  5%|███▌                                                                | 287/5400 [2:08:21&lt;38:06:49, 26.84s/it]</span></span>
<span id="cb12-399"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">^Cndb: - 0.011 MB of 0.011 MB uploaded</span></span>
<span id="cb12-400"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: / 0.054 MB of 0.054 MB uploaded-alpaca# wandb: \ 0.011 MB of 0.054 MB uploaded</span></span>
<span id="cb12-401"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run history:</span></span>
<span id="cb12-402"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:               eval/loss ▁</span></span>
<span id="cb12-403"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:            eval/runtime ▁</span></span>
<span id="cb12-404"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: eval/samples_per_second ▁</span></span>
<span id="cb12-405"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:   eval/steps_per_second ▁</span></span>
<span id="cb12-406"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:             train/epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</span></span>
<span id="cb12-407"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:       train/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</span></span>
<span id="cb12-408"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:         train/grad_norm █▆▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁</span></span>
<span id="cb12-409"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:     train/learning_rate ▁▃▆█████████████████████████████████████</span></span>
<span id="cb12-410"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:              train/loss █▅▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</span></span>
<span id="cb12-411"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: </span></span>
<span id="cb12-412"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run summary:</span></span>
<span id="cb12-413"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:               eval/loss 1.19008</span></span>
<span id="cb12-414"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:            eval/runtime 1342.7584</span></span>
<span id="cb12-415"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: eval/samples_per_second 9.533</span></span>
<span id="cb12-416"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:   eval/steps_per_second 0.596</span></span>
<span id="cb12-417"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:             train/epoch 0.15944</span></span>
<span id="cb12-418"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:       train/global_step 287</span></span>
<span id="cb12-419"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:         train/grad_norm 0.19922</span></span>
<span id="cb12-420"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:     train/learning_rate 0.0002</span></span>
<span id="cb12-421"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:              train/loss 0.0625</span></span>
<span id="cb12-422"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: </span></span>
<span id="cb12-423"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: 🚀 View run lyric-wildflower-5 at: https://wandb.ai/law/hc-axolotl-mistral/runs/iewv47f2</span></span>
<span id="cb12-424"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span></span>
<span id="cb12-425"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Synced 6 W&amp;B file(s), 0 media file(s), 1 artifact file(s) and 1 other file(s)</span></span>
<span id="cb12-426"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Find logs at: ./wandb/run-20240524_000556-iewv47f2/logs</span></span></code></pre></div>


</section>

 ]]></description>
  <category>LLMs</category>
  <category>Fine-tune</category>
  <category>Axolotl</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-05-23-first-axolotl-finetune/</guid>
  <pubDate>Thu, 23 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Dario Amodei &amp; Elad Gil</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/</link>
  <description><![CDATA[ 




<p>At Google Cloud Next 2024, Elad Gil interviewed Dario Amodei, the CEO of Anthropic. I recorded the talk (really bad audio) and transcribed it using a whisper (small-en) model. I passed the transcription to Claude 3 (Haiku), Gemini Pro 1.5 and GPT-4 to summarize it with this prompt:</p>
<blockquote class="blockquote">
<p>This is a podcast transcript for your CEO Dario Amodei being interviewed by Elad Gil. Can you 1) summarize the main takeaways and important points made and below that 2) extract all of the questions and a summary of his answer?</p>
</blockquote>
<p>The results are generally pretty good. My qualitative assessment is Gemini Pro 1.5 did the best. GPT-4 was second best. Claude 3 Haiku did a decent job which is not really a fair comparison since Haiku is likely a much smaller model than the previous 2. Google has done a good job with their user interface with the markdown toggle as nice touch. One of the best features of Anthropic is how pasted text is distinct from the user entered text in the prompt which is nice from a UI perspective but also likely helps the LLM know what text it is to operate on.</p>
<section id="gemini-pro-1.5" class="level1">
<h1>Gemini Pro 1.5</h1>
<ul>
<li>Google’s gemini-pro-1.5 does the best job of summarizing the main takeaways</li>
<li>It actually gets every question (Claude 3’s Haiku only returned 8 questions)</li>
<li>It corrected spelling errors in the transcription</li>
<li>There’s a toggle to show the raw markdown (which is really nice!)</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/gemini-pro-1.5.png" class="img-fluid figure-img"></p>
<figcaption>Gemini Pro 1.5</figcaption>
</figure>
</div>
<section id="summary-of-main-takeaways-and-important-points" class="level2">
<h2 class="anchored" data-anchor-id="summary-of-main-takeaways-and-important-points">Summary of Main Takeaways and Important Points:</h2>
<ul>
<li><strong>Anthropic’s focus on personality and engagement in language models:</strong> Anthropic emphasizes the importance of not only reasoning capabilities but also personality, engagement, and natural conversation flow in their language models. This is evident in the development of Claude 3, with its focus on being warm and human-like in interactions.</li>
<li><strong>The Claude family of models caters to diverse needs:</strong> Anthropic offers a range of models with different sizes and capabilities to meet the varying requirements of enterprises. Claude Instant is fast and affordable, Claude is a good all-rounder, and Claude+ excels in complex tasks requiring high accuracy.</li>
<li><strong>The cost of training AI models is decreasing but spending is increasing:</strong> While the cost of training AI models is decreasing due to advancements in hardware and algorithms, the economic value of these models is driving an exponential increase in overall spending on training.</li>
<li><strong>Future capabilities of AI models:</strong> Anthropic predicts significant advancements in AI capabilities, including improved intelligence through scaling, multi-modality (incorporating video, audio, and real-world interaction), reduced hallucinations, and the development of agents that can act autonomously in the world.</li>
<li><strong>Growing enterprise use cases:</strong> AI models are finding increasing application in various sectors such as coding, healthcare, biomedicine, finance, legal, and consumer applications.</li>
<li><strong>Challenges in enterprise adoption:</strong> Obstacles to wider enterprise adoption of AI include the complexity of understanding and controlling models, the need for effective prompt engineering, and the gap between demos and real-world deployment.</li>
<li><strong>Anthropic’s commitment to safety and reliability:</strong> Anthropic prioritizes safety and reliability in AI development, focusing on reducing hallucinations, preventing jailbreaking, and ensuring models are helpful, honest, and harmless.</li>
<li><strong>Potential risks of AI:</strong> Short-term risks include bias, misinformation, and misuse in critical decision-making. Long-term risks encompass autonomous AI actions that could lead to unintended consequences or misuse with malicious intent.</li>
<li><strong>Exciting opportunities for AI:</strong> AI holds immense potential to revolutionize fields like healthcare and education, offering personalized tutoring, accelerating scientific research, and improving access to information and resources globally.</li>
<li><strong>Anthropic’s vision for the future:</strong> Anthropic aims to develop AI models that act as co-workers, seamlessly integrating with enterprise systems and data to enhance productivity and decision-making. They also strive to set an example for responsible AI development and collaboration within the industry to address challenges and ensure the technology benefits everyone.</li>
</ul>
</section>
<section id="questions-and-answers" class="level2">
<h2 class="anchored" data-anchor-id="questions-and-answers">Questions and Answers:</h2>
<p><strong>Question 1:</strong> What are the key features of Claude 3 and the Claude family of models?</p>
<p><strong>Answer:</strong> Claude 3 prioritizes personality and engagement, making it more natural and enjoyable to interact with. The Claude family offers models with varying sizes and capabilities, from the fast and affordable Claude Instant to the powerful and accurate Claude+.</p>
<p><strong>Question 2:</strong> How is the cost of training AI models evolving?</p>
<p><strong>Answer:</strong> While the cost per flop is decreasing due to hardware and algorithmic improvements, the overall spending on training is increasing due to the growing scale and economic value of AI models.</p>
<p><strong>Question 3:</strong> What future capabilities do you foresee in AI models?</p>
<p><strong>Answer:</strong> We expect advancements in intelligence through scaling, multi-modality, reduced hallucinations, and the development of autonomous agents.</p>
<p><strong>Question 4:</strong> What are the challenges in enterprise adoption of AI?</p>
<p><strong>Answer:</strong> Challenges include understanding and controlling models, effective prompt engineering, and bridging the gap between demos and real-world deployment.</p>
<p><strong>Question 5:</strong> How does Anthropic approach safety and reliability in AI?</p>
<p><strong>Answer:</strong> We prioritize safety and reliability by focusing on reducing hallucinations, preventing jailbreaking, and ensuring models are helpful, honest, and harmless.</p>
<p><strong>Question 6:</strong> What are the potential risks of AI?</p>
<p><strong>Answer:</strong> Short-term risks include bias, misinformation, and misuse in critical decision-making. Long-term risks involve autonomous AI actions with unintended consequences or malicious intent.</p>
<p><strong>Question 7:</strong> What excites you about the opportunities presented by AI?</p>
<p><strong>Answer:</strong> AI has the potential to revolutionize healthcare, education, and access to information, offering personalized learning, accelerating research, and benefiting people globally.</p>
<p><strong>Question 8:</strong> How will Anthropic engage with consumer partners?</p>
<p><strong>Answer:</strong> While our focus is on enterprise solutions, the general-purpose nature of our models makes them suitable for consumers who seek productivity and information access.</p>
<p><strong>Question 9:</strong> How do you view the role of reasoning modules and memory in AI development?</p>
<p><strong>Answer:</strong> Memory capabilities are advancing through larger context windows and RAG techniques. Reasoning abilities improve with model scale and are not a binary concept but rather a continuous spectrum of improvement.</p>
<p><strong>Question 10:</strong> What is Anthropic’s long-term vision?</p>
<p><strong>Answer:</strong> We aim to create AI models that act as co-workers, integrating with enterprise systems and data. We also strive to lead in responsible AI development and industry collaboration to address challenges and ensure the technology benefits everyone.</p>
</section>
</section>
<section id="gpt-4" class="level1">
<h1>GPT-4</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/gpt4.png" class="img-fluid figure-img"></p>
<figcaption>GPT4</figcaption>
</figure>
</div>
<section id="main-takeaways-and-important-points" class="level2">
<h2 class="anchored" data-anchor-id="main-takeaways-and-important-points">Main Takeaways and Important Points:</h2>
<ol type="1">
<li><p><strong>Launch and Impact of Pod Three</strong>: Dario begins by discussing the release of Pod Three, emphasizing improvements in the model’s personality and engagement. He outlines the diversity in the Pod family of models, designed to cater to various enterprise needs, from heavy computational tasks to faster, cost-effective solutions.</p></li>
<li><p><strong>Advancements in AI Performance and Cost</strong>: A significant focus is placed on the exponential growth in AI, where despite the decreasing costs of training models, overall spending is increasing due to the economic value of AI technologies.</p></li>
<li><p><strong>Future Directions and Capabilities</strong>: Dario predicts further scale in model capabilities, including specialized tasks and the introduction of multi-modality inputs like images, videos, and potentially interactive interfaces with robotics.</p></li>
<li><p><strong>Enterprise Adoption and Use Cases</strong>: The discussion shifts to how enterprises are leveraging AI, with specific mentions of coding, healthcare, financial, and consumer internet applications seeing significant benefits from recent advancements.</p></li>
<li><p><strong>Obstacles to Enterprise Adoption</strong>: The challenges in enterprise adoption of AI technologies are highlighted, including the need for better understanding and utilization of models through prompt engineering and building infrastructure to support AI applications effectively.</p></li>
<li><p><strong>Safety and Reliability</strong>: Dario emphasizes the importance of safety and reliability in AI models, sharing Anthropic’s focus on making conversational agents helpful, honest, and harmless to ensure trust and prevent misuse.</p></li>
<li><p><strong>Risks and Future Concerns</strong>: Short-term and long-term risks associated with AI are discussed, with short-term risks revolving around model bias and reliability in critical applications, and long-term concerns about misuse for harmful purposes.</p></li>
<li><p><strong>Potential for Global Impact</strong>: The conversation concludes with a hopeful outlook on AI’s potential to revolutionize global health, education, and access to information, particularly in underserved regions, while also stressing the need for the industry to manage the risks associated with rapid technological advancement.</p></li>
</ol>
</section>
<section id="extracted-questions-and-summary-of-answers" class="level2">
<h2 class="anchored" data-anchor-id="extracted-questions-and-summary-of-answers">Extracted Questions and Summary of Answers:</h2>
<ol type="1">
<li><p><strong>Pod Three’s Impact and Applications</strong>: Dario highlights the focus on improving the personality and engagement of the Pod Three model and introduces the family of models designed to cater to various performance and cost requirements.</p></li>
<li><p><strong>AI Performance vs.&nbsp;Cost Dynamics</strong>: He discusses the trends in AI training and inference costs, predicting significant decreases in costs but also an increase in overall spending due to the economic value of advanced models.</p></li>
<li><p><strong>Future Capabilities and Model Evolution</strong>: Dario anticipates further advancements in AI capabilities, including task specialization, multi-modality, and efforts to reduce hallucinations in model outputs, as well as the development of more autonomous AI agents.</p></li>
<li><p><strong>Enterprise Use Cases and Adoption</strong>: The discussion covers various enterprise applications benefiting from AI, such as coding, healthcare, and consumer internet, and touches on the segmentation of enterprise AI strategy.</p></li>
<li><p><strong>Challenges in Enterprise Adoption</strong>: He addresses the knowledge gap in utilizing AI models effectively and the distinction between demos and real-world deployment, emphasizing the importance of prompt engineering and infrastructure support.</p></li>
<li><p><strong>Safety and Reliability Focus</strong>: Dario underscores Anthropic’s commitment to safety and reliability, detailing efforts to reduce model hallucinations and ensure models adhere to principles of being helpful, honest, and harmless.</p></li>
<li><p><strong>AI Risks and Management</strong>: He distinguishes between short-term and long-term risks associated with AI, highlighting immediate concerns like bias and reliability in critical applications and future risks related to misuse and autonomy.</p></li>
<li><p><strong>AI’s Global Impact and Accessibility</strong>: The potential for AI to revolutionize access to education and health services globally is discussed, with a focus on ensuring technology benefits are widely distributed.</p></li>
<li><p><strong>Consumer Engagement with AI</strong>: Although Anthropic is more enterprise-focused, Dario mentions that strong AI models naturally have consumer applications, particularly in productivity and educational contexts.</p></li>
<li><p><strong>Memory and Reasoning in AI Development</strong>: He elaborates on the importance of memory and reasoning for AI models, explaining ongoing efforts to improve these aspects through scale and specialized training techniques.</p></li>
<li><p><strong>Long-term Vision for Anthropic</strong>: Dario shares his vision for Anthropic’s role in fostering AI as a coworker and collaborator, contributing to solving complex global challenges while managing the rapid technological advancements and associated risks responsibly.</p></li>
</ol>
</section>
</section>
<section id="claude-3---haiku" class="level1">
<h1>Claude 3 - Haiku</h1>
<p>Some of the issues are coming from whisper mis-transcribing “Haiku” as “Iqou”, “Sonnet” as “Sonic” etc. If every conference talk had this type of summary, that would be so valuable.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/claude3.png" class="img-fluid figure-img"></p>
<figcaption>Claude 3 Output</figcaption>
</figure>
</div>
<p>Claude 3’s full answer below (had to do some formatting though because the bullets/numbering didn’t copy over to Quarto and it wasn’t following my instructions to produce markdown):</p>
<section id="main-takeaways-and-important-points-1" class="level2">
<h2 class="anchored" data-anchor-id="main-takeaways-and-important-points-1">Main Takeaways and Important Points:</h2>
<ul>
<li>Anthropic has been focused on developing more engaging and personality-driven language models, with the latest Pod 3 models being a key focus area.</li>
<li>Anthropic is offering a family of models (Opus, Sonic, and Iqou) to cater to different enterprise needs in terms of accuracy, speed, and cost.</li>
<li>Anthropic is seeing increasing enterprise adoption of their models across various use cases like coding, healthcare, finance, and consumer applications.</li>
<li>Enterprises are exploring three main use cases for AI: internal operational efficiency, customer-facing applications, and embedded product features.</li>
<li>Key challenges for enterprise adoption include uncertainty about model capabilities, reliability, and the need for supporting infrastructure like security and safety measures.</li>
<li>Anthropic is partnering with GCP to provide a secure and reliable platform for deploying their models in enterprise settings.</li>
<li>Anthropic is excited about the potential of language models to accelerate progress in areas like healthcare, biology, and education, but also cautious about the risks as models become more autonomous and capable. Anthropic’s long-term vision is for their models to act as “coworkers” that can be deeply integrated with enterprise systems and data to enhance productivity and decision-making.</li>
</ul>
</section>
<section id="questions-and-answers-1" class="level2">
<h2 class="anchored" data-anchor-id="questions-and-answers-1">Questions and Answers:</h2>
<p><strong>What are the key features and capabilities of the Pod 3 models?</strong></p>
<p>Focus on improving the personality and engagement of the models, as well as offering a family of models (Opus, Sonic, Iqou) with different trade-offs in terms of accuracy, speed, and cost.</p>
<p><strong>How is Anthropic thinking about the cost and performance improvements in training and inference for their models?</strong></p>
<p>Anthropic is seeing exponential improvements in cost-performance, with 1.5-2x annual decreases in the cost of compute and algorithmic improvements, but overall spending on training is still increasing due to the high value of these models.</p>
<p><strong>What are the key enterprise use cases Anthropic is seeing for their models?</strong> Coding, healthcare, finance, and consumer internet applications are some of the key areas where enterprises are adopting Anthropic’s models.</p>
<p><strong>How are enterprises thinking about using AI in terms of internal tools, customer-facing applications, and embedding in products?</strong></p>
<p>Enterprises are exploring all three of these use cases, with the type of model used varying based on the specific needs (e.g., smaller models for customer-facing, larger models for internal analysis).</p>
<p><strong>What are some of the key obstacles Anthropic sees for enterprise adoption of AI models?</strong></p>
<p>Uncertainty about model capabilities, reliability, and the need for supporting infrastructure like security and safety measures.</p>
<p><strong>How is Anthropic approaching safety and reliability in the context of their models?</strong></p>
<p>Anthropic has a strong focus on reducing model mistakes and biases, and is working to build the necessary infrastructure (e.g., with GCP) to enable secure and reliable deployment of their models.</p>
<p><strong>What are Anthropic’s thoughts on the potential of AI to accelerate progress in areas like healthcare and biology?</strong></p>
<p>Anthropic is excited about the potential for AI to help overcome the limitations of human cognition and accelerate breakthroughs in complex domains like biology and medicine.</p>
<p><strong>How is Anthropic thinking about the longer-term evolution of AI models, including the role of agents and autonomous systems?</strong></p>
<p>Anthropic envisions a future where their models can act as “coworkers” that are deeply integrated with enterprise systems and data to enhance productivity and decision-making, but also acknowledges the challenges and risks that come with increasingly autonomous AI systems.</p>


</section>
</section>

 ]]></description>
  <category>Anthropic</category>
  <category>LLMs</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/</guid>
  <pubDate>Wed, 10 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>AI Impact on Jobs</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/</link>
  <description><![CDATA[ 




<p>Andrew Ng gave a talk recently on <a href="https://www.youtube.com/watch?v=-mIjwN1o7nE">AI’s Potential Effect on the Labor Force</a>. Here’s the transcript of the <a href="https://lawwu.github.io/transcripts/transcript_-mIjwN1o7nE.html">video</a>.</p>
<p>I used Claude 3 (Sonnet) to pull out the “main ways that AI will affect the labor force”?</p>
<p>According to Andrew Ng, there are a few main ways AI will impact the workforce over the next 5 years:</p>
<ul>
<li>Massive productivity boost for existing job roles and creation of many new job roles related to AI.</li>
<li>Some job loss, but potentially not as bad as people fear. He suggests thinking about AI automating specific tasks within jobs rather than entire jobs being automated.</li>
<li>For many jobs, if AI automates 20-30% of the tasks, the job may still be reasonably safe, though people using AI will likely replace those who don’t use AI tools.</li>
<li>He sees customer service roles like call centers and sales operations being among the most disrupted and automated by AI in the near-term.</li>
<li>Knowledge workers can get an immediate productivity boost from using AI tools like generative AI, but some reskilling and training is needed to use AI responsibly.</li>
<li>While acknowledging there will be some job displacement, Ng seems optimistic that the productivity gains from AI will create new opportunities as well, similar to past technological transitions. He encourages being proactive in managing this transition well.</li>
</ul>
<p>Andrew Ng identified customer service jobs and sales operations jobs as most at risk of being automated. Klarna had news last week where they have developed a customer service AI powered by OpenAI that already handles two-thirds of Klarna’s customer service chats, generating an estimated $40M in profit. See the statistics below for the comparisons:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/klarna.png" class="img-fluid figure-img"></p>
<figcaption>Klarna</figcaption>
</figure>
</div>
<p>Teleperformance is a French company that runs call centers, lost 20% of their marketcap or $1.7B of value the moment Klarna made the above announcement.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/teleperformance.png" class="img-fluid figure-img"></p>
<figcaption>Teleperformance</figcaption>
</figure>
</div>
<p>They lost an additional 20% of their market cap yesterday when they released earnings. It’s staggering this one organization has lost 40% of their value over the past month. I imagine this will continue to play out as AI continues to make it’s way through automating different tasks and different functions. The hope is these call center workers at Klarna and other companies will be able to re-skill and find other opportunities.</p>



 ]]></description>
  <category>LLMs</category>
  <category>Jobs</category>
  <category>Work</category>
  <category>AI</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/</guid>
  <pubDate>Fri, 08 Mar 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
