<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lawrence Wu</title>
<link>https://lawwu.github.io/blog.html/blog.html</link>
<atom:link href="https://lawwu.github.io/blog.html/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Lawrence Wu&#39;s personal website</description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Mon, 24 Feb 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Summary of Karpathy’s Deep Dive into LLMs like ChatGPT</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-02-24-karpathy-deep-dive-llms/</link>
  <description><![CDATA[ 




<p>I’ve been experimeting with writing CLI utilities to fetch and summarize YouTube videos. This is primarily for personal use. <del>May open source the CLI in the future</del>. The CLI is called <a href="https://github.com/lawwu/yt-transcript">yt-transcript</a>. The model I used was <code>gpt-4o-mini</code>. The summary of Andrej Karpathy’s Deep Dive into LLMs video is below:</p>
<section id="deep-dive-into-llms-like-chatgpt" class="level1">
<h1>Deep Dive into LLMs like ChatGPT</h1>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/7xTGNNLPyMI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<section id="introduction-00000" class="level3">
<h3 class="anchored" data-anchor-id="introduction-00000"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=0">introduction</a> (0:00:00)</h3>
<p>In this video, Andrej Karpathy aims to provide a comprehensive introduction to large language models like ChatGPT, making it accessible for a general audience. He plans to explore how these models work, what users should input, and the nature of the responses generated. Karpathy will discuss the building process of such models while also addressing their strengths, weaknesses, and cognitive psychological implications.</p>
</section>
<section id="pretraining-data-internet-00100" class="level3">
<h3 class="anchored" data-anchor-id="pretraining-data-internet-00100"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=60">pretraining data (internet)</a> (0:01:00)</h3>
<p>The pre-training stage for large language models (LLMs) involves downloading and processing vast amounts of text data from the internet, primarily sourced from datasets like Common Crawl. This process includes multiple filtering stages to ensure high-quality and diverse content, such as removing undesirable URLs, extracting text from raw HTML, and filtering for language and personally identifiable information (PII). The resulting curated dataset, like the Fine Web dataset, typically amounts to around 44 terabytes of text, forming the foundation for training neural networks to understand and generate human-like text.</p>
</section>
<section id="tokenization-00747" class="level3">
<h3 class="anchored" data-anchor-id="tokenization-00747"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=467">tokenization</a> (0:07:47)</h3>
<p>In the tokenization process for neural networks like ChatGPT, text is represented as a one-dimensional sequence of symbols. To optimize this representation, raw text is encoded into a finite set of symbols, with techniques like byte pair encoding reducing sequence length while increasing vocabulary size. This allows models, such as GPT-4, to utilize around 100,000 unique tokens. Tokenization transforms text into these symbols, enabling efficient processing by the model.</p>
</section>
<section id="neural-network-io-01427" class="level3">
<h3 class="anchored" data-anchor-id="neural-network-io-01427"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=867">neural network I/O</a> (0:14:27)</h3>
<p>The section discusses the process of transforming a large dataset of text into tokens, highlighting that it consists of about 15 trillion tokens represented as unique IDs. It explains how neural networks are trained to predict the next token in a sequence using context windows of variable lengths, typically ranging up to 8,000 tokens. The neural network outputs probabilities for the next token, which are initially random, and through a mathematical updating process, these probabilities are adjusted to better match the actual sequences in the training data. This training occurs in parallel across multiple windows and tokens to ensure consistent predictions aligned with the statistical patterns of the dataset.</p>
</section>
<section id="neural-network-internals-02011" class="level3">
<h3 class="anchored" data-anchor-id="neural-network-internals-02011"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1211">neural network internals</a> (0:20:11)</h3>
<p>This section delves into the internals of neural networks, particularly focusing on Transformers, which process sequences of tokens using billions of parameters. Initially, these parameters are set randomly and are adjusted through training to improve prediction accuracy based on training data. The mathematical expressions used in these networks, while complex in scale, involve simple operations like multiplication and addition to transform inputs into outputs. The section emphasizes that understanding the general structure and function of these networks is more important than the intricate mathematical details.</p>
</section>
<section id="inference-02601" class="level3">
<h3 class="anchored" data-anchor-id="inference-02601"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1561">inference</a> (0:26:01)</h3>
<p>Inference is the process of generating new data from a trained neural network by predicting the next token based on a probability distribution derived from the model’s internalized patterns. This involves sampling tokens sequentially, which can sometimes reproduce sequences from the training data but often results in unique combinations. The process is stochastic, meaning the generated output varies with each inference due to the random nature of token sampling. Once a model is trained, it operates solely on inference, using fixed parameters to complete token sequences during interactions, such as in ChatGPT.</p>
</section>
<section id="gpt-2-training-and-inference-03109" class="level3">
<h3 class="anchored" data-anchor-id="gpt-2-training-and-inference-03109"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=1869">GPT-2: training and inference</a> (0:31:09)</h3>
<p>The section discusses GPT-2, the second iteration of OpenAI’s generative pre-trained transformer models, highlighting its significance as a precursor to modern language models like GPT-4. GPT-2, launched in 2019, featured 1.6 billion parameters and was trained on approximately 100 billion tokens, a relatively small dataset by today’s standards. The costs and efficiency of training such models have significantly improved due to advancements in hardware and better data processing techniques. The training process involves updating the model’s parameters to reduce loss and improve token prediction, which requires powerful GPUs running in cloud data centers.</p>
</section>
<section id="llama-3.1-base-model-inference-04252" class="level3">
<h3 class="anchored" data-anchor-id="llama-3.1-base-model-inference-04252"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=2572">Llama 3.1 base model inference</a> (0:42:52)</h3>
<p>The section discusses the concept of base models in language learning models (LLMs), specifically focusing on Llama 3.1, a 405 billion parameter model trained on extensive data. Base models serve as token simulators and are not inherently useful for interactive tasks, as they generate text based on statistical patterns from training data. The section also highlights the importance of prompt design in eliciting useful responses from base models and demonstrates how clever prompting can simulate an assistant-like behavior, even without the full capabilities of a trained assistant model.</p>
</section>
<section id="pretraining-to-post-training-05923" class="level3">
<h3 class="anchored" data-anchor-id="pretraining-to-post-training-05923"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=3563">pretraining to post-training</a> (0:59:23)</h3>
<p>In this section, the video discusses the two main stages of training language models for assistant applications, focusing on pre-training and post-training. Pre-training involves creating a base model by predicting token sequences from internet documents, resulting in a simulator that generates text similar to online content. The subsequent post-training stage, which is less computationally intensive, is crucial for refining the model to provide accurate answers to user questions, transforming it from a document generator into a functional assistant.</p>
</section>
<section id="post-training-data-conversations-10106" class="level3">
<h3 class="anchored" data-anchor-id="post-training-data-conversations-10106"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=3666">post-training data (conversations)</a> (1:01:06)</h3>
<p>This section discusses the post-training phase of language models, focusing on how they learn to handle multi-turn conversations through datasets created by human labelers. The assistant’s responses are shaped by examples of ideal interactions, which are compiled and used to fine-tune the model. The process involves converting conversations into token sequences for training, allowing the model to generate responses based on statistical patterns learned from the data. Ultimately, the assistant’s behavior mimics that of skilled human labelers, providing responses aligned with the training data rather than representing a distinct AI intelligence.</p>
</section>
<section id="hallucinations-tool-use-knowledgeworking-memory-12032" class="level3">
<h3 class="anchored" data-anchor-id="hallucinations-tool-use-knowledgeworking-memory-12032"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=4832">hallucinations, tool use, knowledge/working memory</a> (1:20:32)</h3>
<p>The video discusses the cognitive effects of training large language models (LLMs) like ChatGPT, focusing on issues such as hallucinations, where models fabricate information due to their statistical nature. To mitigate these hallucinations, one approach is to include training data that teaches models when to express uncertainty. Additionally, models can be equipped with tools, such as web search, allowing them to access current information and improve their responses, akin to refreshing working memory. This dual strategy enhances factual accuracy and reduces the occurrence of false claims by enabling LLMs to either admit ignorance or seek information when needed.</p>
</section>
<section id="knowledge-of-self-14146" class="level3">
<h3 class="anchored" data-anchor-id="knowledge-of-self-14146"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=6106">knowledge of self</a> (1:41:46)</h3>
<p>The section discusses the concept of “knowledge of self” in large language models (LLMs) like ChatGPT, emphasizing that these models lack a persistent identity or self-awareness. When asked about their origins, LLMs generate answers based on statistical patterns from their training data, often leading to fabricated responses. Developers can influence how models respond to such questions by including hardcoded prompts or system messages during fine-tuning, but fundamentally, the models do not possess a true sense of self as humans do.</p>
</section>
<section id="models-need-tokens-to-think-14656" class="level3">
<h3 class="anchored" data-anchor-id="models-need-tokens-to-think-14656"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=6416">models need tokens to think</a> (1:46:56)</h3>
<p>In this section, Andrej Karpathy emphasizes the importance of structuring prompts for language models (LLMs) to effectively distribute computational tasks across multiple tokens. He illustrates this with examples of simple math problems, highlighting that models perform better when they can generate intermediate results rather than attempting to compute answers in a single token. He also advises using code as a tool for complex tasks, as it provides more reliable results than relying on the model’s mental arithmetic, especially for tasks like counting, which LLMs struggle with.</p>
</section>
<section id="tokenization-revisited-models-struggle-with-spelling-20111" class="level3">
<h3 class="anchored" data-anchor-id="tokenization-revisited-models-struggle-with-spelling-20111"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7271">tokenization revisited: models struggle with spelling</a> (2:01:11)</h3>
<p>The video discusses the limitations of language models like ChatGPT, particularly regarding spelling tasks due to their reliance on tokenization rather than individual characters. This leads to difficulties in performing simple character-level tasks, such as extracting every third character from a string. The models also struggle with counting, as illustrated by their past inaccuracies in determining the number of ’R’s in the word “strawberry.” Overall, the section highlights the cognitive deficits of these models and the challenges posed by their token-based processing.</p>
</section>
<section id="jagged-intelligence-20453" class="level3">
<h3 class="anchored" data-anchor-id="jagged-intelligence-20453"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7493">jagged intelligence</a> (2:04:53)</h3>
<p>In this section, the speaker discusses the inconsistencies and unexpected shortcomings of large language models (LLMs) like ChatGPT, particularly their struggle with simple questions despite excelling at complex problems. An example is given where the model incorrectly evaluates the numerical comparison of 9.11 and 9.9, highlighting a puzzling cognitive distraction linked to Bible verse markers. The speaker emphasizes that while LLMs are powerful tools, they are not fully reliable and should be used cautiously rather than as definitive sources of truth.</p>
</section>
<section id="supervised-finetuning-to-reinforcement-learning-20728" class="level3">
<h3 class="anchored" data-anchor-id="supervised-finetuning-to-reinforcement-learning-20728"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=7648">supervised finetuning to reinforcement learning</a> (2:07:28)</h3>
<p>This section discusses the training stages of large language models, emphasizing the transition from pre-training on internet documents to supervised fine-tuning with curated human conversations. It highlights the importance of creating a diverse dataset of prompts and ideal responses through human curation and the use of language models. The discussion then shifts to the final stage of training, reinforcement learning, which is likened to the learning process in school, where models practice problem-solving using background knowledge and expert imitation to refine their skills.</p>
</section>
<section id="reinforcement-learning-21442" class="level3">
<h3 class="anchored" data-anchor-id="reinforcement-learning-21442"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=8082">reinforcement learning</a> (2:14:42)</h3>
<p>The section discusses the challenges of annotating solutions for large language models (LLMs) like ChatGPT, emphasizing the differences in cognition between humans and LLMs. It highlights how human labelers may struggle to determine the best token sequences for problem-solving, leading to inefficiencies. The reinforcement learning (RL) process is introduced as a method for LLMs to explore and refine their own solutions through trial and error, ultimately allowing the model to learn effective token sequences independently rather than relying solely on human-generated examples. This iterative learning process is likened to how children practice and learn problem-solving.</p>
</section>
<section id="deepseek-r1-22747" class="level3">
<h3 class="anchored" data-anchor-id="deepseek-r1-22747"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=8867">DeepSeek-R1</a> (2:27:47)</h3>
<p>The video discusses the evolution of large language models (LLMs), emphasizing the significance of reinforcement learning (RL) in fine-tuning compared to the more established stages of pre-training and supervised fine-tuning. The recent DeepSeek R1 paper highlights how RL can enhance a model’s reasoning capabilities, enabling it to solve mathematical problems more accurately by employing cognitive strategies like re-evaluating steps and exploring different perspectives. This emergent thinking process leads to longer, more detailed responses, showcasing the model’s ability to discover effective problem-solving techniques independently. The video also compares the performance of DeepSeek’s reasoning model to other LLMs, noting that while many mainstream models primarily utilize supervised fine-tuning, there are emerging options that incorporate RL for advanced reasoning tasks.</p>
</section>
<section id="alphago-24207" class="level3">
<h3 class="anchored" data-anchor-id="alphago-24207"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=9727">AlphaGo</a> (2:42:07)</h3>
<p>The section discusses the power of reinforcement learning demonstrated by DeepMind’s AlphaGo, which learned to play Go better than human experts by playing against itself and discovering unique strategies, such as the famous “move 37.” Unlike supervised learning, which only imitates human performance, reinforcement learning allows the system to explore a wider range of solutions and potentially develop new strategies beyond human comprehension. The implications for large language models (LLMs) are significant, suggesting that with diverse problems and environments, LLMs could similarly discover novel reasoning methods or even new languages that enhance their problem-solving capabilities.</p>
</section>
<section id="reinforcement-learning-from-human-feedback-rlhf-24826" class="level3">
<h3 class="anchored" data-anchor-id="reinforcement-learning-from-human-feedback-rlhf-24826"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=10106">reinforcement learning from human feedback (RLHF)</a> (2:48:26)</h3>
<p>The section discusses reinforcement learning from human feedback (RLHF) and its application in unverifiable domains, such as creative writing, where scoring solutions is challenging. Instead of relying on extensive human evaluations, RLHF uses a reward model trained to simulate human preferences, allowing for efficient reinforcement learning without requiring infinite human input. While RLHF improves model performance, it has limitations, including the risk of the model gaming the reward system, making it less reliable than traditional reinforcement learning methods. Ultimately, RLHF is seen as a useful but imperfect enhancement to model training.</p>
</section>
<section id="preview-of-things-to-come-30939" class="level3">
<h3 class="anchored" data-anchor-id="preview-of-things-to-come-30939"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11379">preview of things to come</a> (3:09:39)</h3>
<p>Future language models (LLMs) like ChatGPT are expected to become multimodal, capable of processing text, audio, and images natively, enabling more natural interactions. They will evolve into agents that can perform long-running tasks with human supervision, improving their ability to manage complex jobs over time. Additionally, these models will become more pervasive, integrating seamlessly into various tools and potentially taking actions on users’ behalf. Ongoing research is needed to enhance their learning capabilities, particularly for handling extensive context windows in multimodal tasks.</p>
</section>
<section id="keeping-track-of-llms-31515" class="level3">
<h3 class="anchored" data-anchor-id="keeping-track-of-llms-31515"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11715">keeping track of LLMs</a> (3:15:15)</h3>
<p>In this section, Andrej Karpathy shares three key resources for staying updated on LLMs. He highlights El Marina, an LLM leaderboard that ranks models based on human comparisons, noting that some models, like Deep Seek and Llama, offer open weights. He also recommends the AI News newsletter for its comprehensive coverage of AI developments and suggests following trusted individuals on X (formerly Twitter) for real-time updates. Karpathy emphasizes the importance of testing different models to find the best fit for specific tasks.</p>
</section>
<section id="where-to-find-llms-31834" class="level3">
<h3 class="anchored" data-anchor-id="where-to-find-llms-31834"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=11914">where to find LLMs</a> (3:18:34)</h3>
<p>The video discusses where to find and use various large language models (LLMs). Proprietary models can be accessed via their respective provider websites, such as OpenAI and Google. For open-weight models, platforms like Together.AI allow users to interact with various models, while base models can often be found on Hyperbolic. Additionally, smaller distilled models can be run locally on personal computers using applications like LM Studio, despite its interface challenges.</p>
</section>
<section id="grand-summary-32146" class="level3">
<h3 class="anchored" data-anchor-id="grand-summary-32146"><a href="https://youtube.com/watch?v=7xTGNNLPyMI&amp;t=12106">grand summary</a> (3:21:46)</h3>
<p>The video discusses the inner workings of language models like ChatGPT, explaining how user queries are processed as token sequences and how the models generate responses. It highlights the two main stages of training: pre-training for knowledge acquisition and supervised fine-tuning for developing response behavior through human data curation. Additionally, the video touches on the differences between standard models and those using reinforcement learning, suggesting that while the latter shows promise for problem-solving, they still have limitations and should be used as tools with caution. Overall, the narrator expresses excitement about the potential of these models while emphasizing the importance of verifying their outputs.</p>


</section>
</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <category>Summary</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-02-24-karpathy-deep-dive-llms/</guid>
  <pubDate>Mon, 24 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Second Half-Marathon in the Books</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/finish_pic.jpg" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Finish Line Picture!</figcaption>
</figure>
</div>
<p>Second half-marathon complete (<a href="https://www.strava.com/activities/13521918538">Strava</a>)! Goals for this race at Surf City 2025 was just to 1) not get injured and 2) beat my first HM time of 1:49. Felt like the conditions were perfect in terms of the weather, how the body felt and having other runners to run with at certain points. Thankful to have achieved both those goals! By God’s grace was able to PR and run 1:42.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/strava_hm.png" class="img-fluid figure-img"></p>
<figcaption>Surf City HM - Strava</figcaption>
</figure>
</div>
<p>Strategy was to go 8:00-8:05 for the first 10 miles. But I started following people who were going around 7:50-7:55. Felt strong and just raced the last 5k. The ending was a little sketchy because the 5k walkers were in our path so lot of weaving in and out.</p>
<p>I did prefer the Long Beach Half. Better course (closer to the water) and better organized.</p>
<p>My chip time <a href="https://results2.xacte.com/#/e/2571/searchable/7288">didn’t register</a> :(</p>
<section id="marathon-build-details" class="level2">
<h2 class="anchored" data-anchor-id="marathon-build-details">Marathon Build Details</h2>
<p>This build started 10/17/24 and ended 2/2/2024 at Surf City:</p>
<ul>
<li>16 weeks</li>
<li>484 total miles</li>
<li>28.6 miles on average per week</li>
<li>80.2 total hours</li>
<li>4.84 hours per week</li>
<li>97 runs</li>
<li>1 race, 13 long, 26 workouts, 58 easy</li>
<li>Conversational pace improvement - 9:42/mi to 9:09/mi</li>
</ul>
</section>
<section id="thoughts-on-runna" class="level2">
<h2 class="anchored" data-anchor-id="thoughts-on-runna">Thoughts on Runna</h2>
<p>I used Runna for the 16 week training plan and I really liked it. It pushed me pretty hard. There were many workouts I didn’t think I’d be able to do. Runna also adapted the paces according to how I performed during the speed work. I thought their estimates fluctuated too quickly. The VDOT estimated paces were more in-line. For example the 5k time-trial I did in December gave a VDOT estimated HM time of 1:44 which was really close. The training plan had a variety of runs (for easy, workouts and long) that kept things interesting. Although now that I’ve gone through this full plan once, I likely can use ChatGPT to create plans for myself now. Runna recently allowed syncing workouts using the native Apple Workouts app which was really nice.</p>


</section>

 ]]></description>
  <category>Running</category>
  <category>Fitness</category>
  <guid>https://lawwu.github.io/blog.html/posts/2025-02-02-second-half-marathon/</guid>
  <pubDate>Sun, 02 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Lessons</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/</link>
  <description><![CDATA[ 




<p>I never considered myself a runner. I actually never enjoyed the activity of running. I usually didn’t look forward to it. I would occassionally still do it because I knew it was good for me. I also usually did enjoy how I felt afterwards, feeling like I put in some work, got my heart pumping and it was generally healthy. Over the past 5 months though, I’ve come to really enjoy running. I’ll share some of the things I’ve learned along the way about running and life.</p>
<section id="why-i-started-running" class="level2">
<h2 class="anchored" data-anchor-id="why-i-started-running">Why I Started Running</h2>
<p>On May 4th, I went for a 2 mile run. Little did I know that be the first run of many more runs over the next 5 months.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/first_run.png" class="img-fluid figure-img" width="500"></p>
<figcaption>First Run in May 2024</figcaption>
</figure>
</div>
<p>As noted in the image above, I was motivated to run after reading the book <a href="https://amzn.to/3zVzvqC">Outlive by Peter Attia</a>. In his chapter on exercise, he talks about cardiovascular health and strength training as two key necessary things you need to do to stay healthy. That’s not anything I haven’t heard before. But what triggered something in me was this graph in the book. The metric plotted is VO2 max which measures how much oxygen your body can use during intense exercise.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/vo2_max.png" class="img-fluid figure-img" width="500"></p>
<figcaption>VO2 Max Declines with Age</figcaption>
</figure>
</div>
<p>One of the main arguments he makes in the book is if you want to do normal activities in your 60s, 70s, and 80s+, you need to train for that. Everyone’s VO2 max will decline over as they get older. However, the average person starts with a lower VO2 max than someone with above average fitness. And you need a certain amount of VO2 max (aka fitness) to do basic things like walk up hill, lift/carry heavy objects or run. I do want to do normal activities when God-willing my kids get older and I have grandchildren. I do want to be able to lift and carry my grandchildren and run after them. Imagining that future really did flip a switch in me where I became very motivated to take my health more seriously and so I went on that 2 mile run.</p>
<p>I chose running as my exercise of choice because I found it to be the best-bang-for-your-buck form of exercise. I could go out for a couple mile run and be done in 20-30 minutes. A 20-30 bike ride didn’t really feel like much exercise. I didn’t enjoy swimming. I also had to give up basketball because of injuries. Praise God I could still run so I wanted to take advantage of that.</p>
</section>
<section id="consistently-running" class="level2">
<h2 class="anchored" data-anchor-id="consistently-running">Consistently Running</h2>
<p>I slowly built up mileage over the coming weeks, 5 miles that first week to eventually 10 per week and then 15. You can see how infrequently I ran in the proceeding months. There are some sparse weeks there!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/weekly_miles_first_month.png" class="img-fluid figure-img" width="450"></p>
<figcaption>Weekly Miles - First Month</figcaption>
</figure>
</div>
<p>In late June, I decided to sign up for a 10k race because a friend told me about one. A couple friends and I signed up for it (thanks for running with me Andy &amp; Shannon!). I thought running a race would be a good experience. And it was! There was a lot of adrenaline from the crowd and my kids even got to run the 1 mile “race” which they were excited about. I set a PR of 58:00 at this 10k (9:20 mins/mile).</p>
<p>During this time, I knew some of my friends were already planning on doing the Long Beach Half-Marathon in October. When they were talking about a few months back, my thought was “No way.” But after running more consistently, I was on the fence in June. I said I was 50/50 in our group chat. The day after running the 10k, I went for it and signed up for the half.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/signed_up.png" class="img-fluid figure-img" width="450"></p>
<figcaption>Signed Up!</figcaption>
</figure>
</div>
<p>I started Nike Run Club’s 14 week half-marathon plan since the timing was perfect and I had heard good things about their Guided Runs. Well, fast forward 5 months and on Oct 6, I ran the Long Beach Half-Marathon in 1:49:15 (8:20 mins/mile). It was a joy doing this with some brothers and sisters from church and seeing a bunch of friends trying to get healthier and make fitness a regular part of their lives.</p>
<p>People had recommended setting 3 goals: a bare minimum goal, a reachable goal and a stretch goal. So I did.</p>
<ul>
<li><p>Bare Minimum Goal: Don’t get hurt</p></li>
<li><p>Reachable Goal: Finish the race</p></li>
<li><p>Stretch Goal: Sub 2 hours</p></li>
</ul>
<p>After training for something for 3+ months and meeting my stretch goal, it’s hard to explain how happy I was crossing this finish line.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/lb_hm_finish_line.JPG" class="img-fluid figure-img"></p>
<figcaption>Long Beach Half-Marathon finish line</figcaption>
</figure>
</div>
<p>Seeing my wife and kids at the finish line cheering me on was so awesome!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/lb_hm_finish.jpg" class="img-fluid figure-img" width="2000"></p>
<figcaption>Long Beach Half-Marathon finish</figcaption>
</figure>
</div>
<p>I also downloaded some of the GPX data from Strava for some of my friends and I and animated it using <a href="https://gpx-animator.app/">GPX Animator</a>.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/_Ntj5AeAQSk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="things-ive-learned-about-running" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-about-running">Things I’ve Learned about Running</h2>
<section id="types-of-runs" class="level3">
<h3 class="anchored" data-anchor-id="types-of-runs">Types of Runs</h3>
<p>Easy Running: Most runs should be “easy.” And by most, this is 80% of your total miles! Coming from basketball I was used to running fast, quick bursts. So when I would go for “runs” I would be going at a moderate to fast pace. I would quickly tire because my aerobic fitness was not very good and it just wouldn’t be pleasant. Reading a little about running and other endurance spots, you quickly learn a common recommendation “run easy” and “run at a conversational pace” and “run in Zone 2” to build your “aerobic base.” I didn’t fully understand what all of this meant yet but I just took their advice and started running easy. It did feel abnormally slow because I wasn’t used it. One of the main benefits is you can run for longer at this slower pace, it’s more enjoyable and it’s scientifically proven to train your mitochondria (<a href="https://chatgpt.com/share/670cae86-c538-8011-b200-5a292ae6ca52">I think?</a>). Stephen Seiler has a <a href="https://www.youtube.com/watch?v=MALsI0mJ09I&amp;ab_channel=TEDxTalks">TED talk</a> where he explains the above idea in about 15 minutes. One of the slides shows the percentage of time spent in different training zones. You can see even for professional athletes, they spend 80% of their time in this “Low/Easy Intensity” area.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/stephen_seiler_training_sessions.png" class="img-fluid figure-img" width="700"></p>
<figcaption>% of training sessions</figcaption>
</figure>
</div>
<p>The other 20% of the running should be speed work. I used the Nike Run Club (NRC) app’s <a href="https://www.nike.com/running/half-marathon-training-plan">half-marathon training plan</a>. Every week there were two recovery runs (1 15 minute run basically introducing the runs that week, another longer recovery run), two speed runs and 1 long run. The speed runs varied from intervals, tempo, to fartleks. I got to learn what all of these different runs were. The NRC app was particularly helpful for these runs because it guides you - when to start and stop a given interval and what type of effort to give at each interval (4-5 easy warmup, 6 for a 10k pace, 7-8 for a 5k pace, 8-9 for a mile pace and 10 for all out of ‘celebration’ pace).</p>
<p>You run out of energy at around 90 minutes. I remember one of my first long runs (Strava link) where I went past 60 minutes, I didn’t have any water or nutrition on me. It felt really terrible at around 80 minutes. I think my heart rate even peaked.</p>
</section>
<section id="gear" class="level3">
<h3 class="anchored" data-anchor-id="gear">Gear</h3>
<ul>
<li><p>Shoes:</p>
<ul>
<li>First pair with <a href="https://amzn.to/3A0BIkz">Brooks Ghost</a>. I got Ghost 15s but only Ghost 16s are available now. My friend sent me this comic that was pretty accurate why I picked them:</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/brooks_ghost_comic.png" class="img-fluid figure-img" width="500"></p>
<figcaption>Brooks Ghost Comic</figcaption>
</figure>
</div>
<ul>
<li><p>Second pair was a <a href="https://amzn.to/4eU2LwU">Asics Novablast 4</a>.</p></li>
<li><p>I also started a 6 month membership to <a href="https://www.roadrunnersports.com/vip/rewards">Road Runner Sports</a> for $1.99. This allows you to buy shoes, run with them and return them if you do not like them. I wound up doing this a couple times for shoes that felt okay in store but for various reasons I didn’t like when going on an actual run. Not sure I’ll keep this membership after the trial though.</p></li>
<li><p>Shorts:</p>
<ul>
<li><p><a href="https://amzn.to/3zNfwdJ">Northyard 5-inch shorts</a> - Bought a few of the cheapest / well-reviewed shorts on Amazon.</p></li>
<li><p><a href="https://amzn.to/3BFeHEm">BALEAF Running Shirt</a> - Similar search, bought a few.</p></li>
</ul></li>
<li><p>Running Belt:</p>
<ul>
<li><a href="https://amzn.to/4f05swK">Spibelt</a> - Running belt to hold phone, keys.</li>
</ul></li>
<li><p>Hydration Vest:</p>
<ul>
<li><a href="https://amzn.to/4h0NiNd">Salomon ADV Skin 12</a> - For longer runs, this vest was very useful to carry water, gels, phone. I got a medium.</li>
</ul></li>
<li><p>Nutrition:</p>
<ul>
<li><p><a href="https://amzn.to/4h0NiNd">Huma Chia Energy Gels</a> - For longer runs, I ate these. I haven’t tried other gels yet but I liked how these tasted and just stuck with them.</p></li>
<li><p><a href="https://amzn.to/4dFv0hC">BODYARMOR Flash IV Electrolyte</a> - Also for longer runs. This is a 6 pack from Amazon ($1/pack) which is honestly a little egregious for salt. In theory you can make your own. I bought this <a href="https://www.costco.com/BODYARMOR-Flash-I.V.-Hydration-Booster,-30-Individual-Serving-Stick-Packs,-Variety-Pack.product.1838221.html">30 pack</a> from Costco that was a little cheaper.</p></li>
</ul></li>
<li><p>GPS Watch: Apple Watch - I already had an Apple Watch so I just used it to track my runs using the native Fitness App.</p>
<ul>
<li>When starting an activity, there’s usually a count down, you can double tap to start it immediately</li>
<li>When running, you can double tap the screen to start a new segment. This is useful when you are doing interval runs.</li>
</ul></li>
<li><p>iOS Apps:</p>
<ul>
<li>Fitness: Apple’s native fitness app. Can see detailed information on your workout. This gets really granular because GPS watches these days measure cadence, stride length and vertical oscillation.</li>
<li>Health: Seeing heart health data like Cardio Fitness (VO2 Max) and resting heart rate trend in better directions was so motivating!</li>
<li>HealthFit: I used this to import all of my previous Apple Fitness data into Strava</li>
<li>WorkOutDoors: More customizable fitness app. For example you can configure interval runs, total times for each interval, target paces for each interval and the app will warn you when you are outside of your target pace (too fast and too slow). This app makes your Apple Watch behave more like a Garmin.</li>
<li>Strava: Fun and somewhat motivating to see how friends are staying active. Being a sucker for data, I enjoy seeing Strava’s global heatmaps by activity type and also the user created segments and receiving random rewards like “You set your best 2nd mile time!” Side note: I find it pretty amazing that Strava has built a business on monetizing fitness data that users are giving them.</li>
</ul></li>
</ul>
<p>These are the Strava weekly heatmaps. It’s cool thinking about all the people that went running and/or biking the last week to make this heatmap.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/heatmap_ride.png" class="img-fluid figure-img" width="700"></p>
<figcaption>Heatmap - Ride</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/heatmap_run.png" class="img-fluid figure-img" width="700"></p>
<figcaption>Heatmap - Run</figcaption>
</figure>
</div>
</section>
<section id="racing" class="level3">
<h3 class="anchored" data-anchor-id="racing">Racing</h3>
<ul>
<li>Race strategy: Treat the first 75% of the race like a “warmup” for the last 25% of the race. Once you get to the last quarter, you can see how much you have left in the tank.</li>
<li>It’s must harder to go from the beginning of a training block to the starting line of a race than going from the starting line of a race to the finish line. So many things can go wrong over a 14-16 week training block, you can get sick, injured, or your kids can get sick. All kinds of things can come up.</li>
</ul>
</section>
</section>
<section id="things-ive-learned-in-general-and-about-myself" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-in-general-and-about-myself">Things I’ve Learned in General and about Myself</h2>
<ul>
<li>People Can Change: Running a marathon (or half) was never on my bucket list. I never thought I could even run this distance let alone do it and enjoy it and enjoy the whole training process. I grew up playing basketball which requires a totally different set of muscles. You need short bursts and fast twitch muscles. I still have yet to meet a basketball player who likes long distance running.</li>
<li>The human body has an amazing ability to be trained</li>
<li>Running regularly has given more time to think, pray and listen to audiobooks. It’s also given me more energy throughout the day.</li>
<li>The running community is generally positive. Nowadays it’s pretty easy to form groups around a share interest. I’ve found the running communities to be quite encouraging. It doesn’t matter what pace you are running.</li>
</ul>
</section>
<section id="things-ive-learned-about-christian-life" class="level2">
<h2 class="anchored" data-anchor-id="things-ive-learned-about-christian-life">Things I’ve Learned about Christian Life</h2>
<p>The Bible uses many running illustrations that have become more vivid as I’ve started running more consistently:</p>
<ul>
<li><strong>Do you not know that in a race all the runners run, but only one receives the prize? So run that you may obtain it.</strong> Every athlete exercises self-control in all things. They do it to receive a perishable wreath, but we an imperishable. <strong>So I do not run aimlessly</strong>; I do not box as one beating the air. But I discipline my body and keep it under control, lest after preaching to others I myself should be disqualified. (1 Corinthians 9:24-27)</li>
<li>I have fought the good fight, <strong>I have finished the race</strong>, I have kept the faith. (2 Timothy 4:7)</li>
<li>Therefore, since we are surrounded by so great a cloud of witnesses, let us also lay aside every weight, and sin which clings so closely, and <strong>let us run with endurance the race that is set before us, looking to Jesus</strong>, the founder and perfecter of our faith, who for the joy that was set before him endured the cross, despising the shame, and is seated at the right hand of the throne of God. (Hebrews 12:1-2)</li>
</ul>
<p>From 1 Corinthians 9:24-27, we draw some parallels between physical running and spiritual running (basically Christian life):</p>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 37%">
<col style="width: 37%">
</colgroup>
<thead>
<tr class="header">
<th>Aspect</th>
<th>Physical Running</th>
<th>Spiritual Running</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Purpose</td>
<td>To win a perishable prize (e.g., a medal, wreath)</td>
<td>To receive an imperishable prize (eternal life, spiritual reward, crown of glory, commendation from God)</td>
</tr>
<tr class="even">
<td>Training</td>
<td>Requires self-control and discipline in physical training</td>
<td>Requires self-control and discipline in spiritual growth and character</td>
</tr>
<tr class="odd">
<td>Goal</td>
<td>To finish the race and win, physical fitness and health</td>
<td>To live life of praise and glorifying God, aiming for eternal rewards</td>
</tr>
<tr class="even">
<td>Focus</td>
<td>Winning the race, obtaining a temporary prize</td>
<td>Living with purpose, avoiding aimlessness, and striving for spiritual growth</td>
</tr>
<tr class="odd">
<td>Effort</td>
<td>Demands physical discipline and perseverance</td>
<td>Demands spiritual discipline, avoiding complacency, and personal holiness</td>
</tr>
<tr class="even">
<td>Motivation</td>
<td>Earthly recognition and achievement</td>
<td>Eternal recognition and spiritual fulfillment</td>
</tr>
<tr class="odd">
<td>Outcome</td>
<td>A perishable, temporary reward</td>
<td>An imperishable, everlasting reward</td>
</tr>
<tr class="even">
<td>Consequence of Failure</td>
<td>Losing the race, disqualification</td>
<td>Spiritual disqualification, falling short of spiritual goals</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Don’t compare yourself to others</strong>: I’ve also seen how easy it is to compare yourself to others in running and in Christian life. It’s easy to compare your pace or weekly mileage to others and say, “I wish I ran that fast.” But everyone is different. Everyone has had differing amounts of training up to that point. Everyone’s body is different. People have different goals. I’ve found it’s better to just be inspired by what others are able to do. Then if you want to compare, compare with your previous self. How long was I able to run at a conversational pace 1 month ago? 3 months ago? In Christian life it’s also easy to compare how fast/well one is running and compare yourself to others. But similarly, everyone is on a different spiritual journey with differing spiritual backgrounds. If you want to compare, compare with your previous self. How much have I grown in things like the fruit of the Spirit since I became a Christian? How much have I grown in love of God and people?</li>
<li><strong>Self-control is so important</strong>: 1 Cor 9:25 says, “Every athlete exercises self-control in all things.” Athletes exercise self-control because it’s necessary to have good performance. Even in building a simple habit of running for 30 minutes a day, this requires self-control and discipline to find the time to do so, sleeping early to wake up early to do this (if you want to do it in the morning before your kids wake up), committing to a running plan, actually running the runs on those plans, etc. In Christian life, growing in self-control over my desires means I can better fight temptation and sinful desires and ultimately be a better instrument for noble purposes, useful to God for any good work (2 Tim 2:21).</li>
<li><strong>Don’t run aimlessly</strong>: It’s been helpful to have goals while running. Following the NRC running plan was helpful. Knowing what runs I was going to do on each day was helpful. Knowing the purpose of each run and what it was doing to my body was motivating as well. There were times I didn’t have a good idea of how far I was going to run that day. Sometimes on those days I wound up cutting my runs short because of the lack of motivation. In Christian life, it’s important to have spiritual direction. Where is God leading you? And if you have a family and especially if you are a husband, how and where are you leading your family?</li>
<li><strong>Disciplining the body</strong>: Running has helped me discipline my body. Starting off the day with something physically demanding helps set the tone for the rest of the day. Another example is running provides an outlet for me to think and pray. This helps to get my mind settled for the day ahead as well.</li>
</ul>
<p>1 Tim 4:8 says, “for while bodily training is of some value, godliness is of value in every way, as it holds promise for the present life and also for the life to come.” The Bible says bodily training is of some value! This should provide some motivation to a Christian to take exercise seriously. However the passage goes onto say that godliness is more important because it holds promise for this life and the life to come. I take this to mean our spiritual fitness and our relationship with Christ is more important to God than our physical fitness. There were times on this running journey I took running too seriously and prioritized it above the things God wanted me to prioritize like my family. So one big takeaway has been to not allow good things (like running) to supercede the best things (honoring and glorifying God).</p>
</section>
<section id="why-i-plan-to-continue-to-run" class="level2">
<h2 class="anchored" data-anchor-id="why-i-plan-to-continue-to-run">Why I plan to continue to run</h2>
<p>I started out on this running journey because I wanted to reach my 70s and 80s healthy enough to be able to do normal activities that I take for granted like walk up hill or God-willing hold my grandkids. It started with a simple 2 mile run. It’s turned into a habit now that I really enjoy where I try to run 20-30 miles a week.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/last_6_months_450_miles.jpg" class="img-fluid figure-img" width="400"></p>
<figcaption>Last 6 months of running</figcaption>
</figure>
</div>
<p>Along the way I’ve learned so much about running, myself and even Christian life. Given I’ve also had 3 major leg injuries, I thank God he’s allowed me to run these hundreds of miles these last 5 months. I’m excited to see where running takes me next.</p>


</section>

 ]]></description>
  <category>Running</category>
  <category>Fitness</category>
  <category>Christian Life</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-10-13-running-6-months/</guid>
  <pubDate>Sun, 13 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Introduction to LangGraph Tutorial</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-09-20-langgraph-tutorial/</link>
  <description><![CDATA[ 




<p>The LangChain team recently released the first course in their LangChain Academy called Introduction to LangGraph (<a href="https://github.com/langchain-ai/langchain-academy">repo</a>). As I’m working through it I will make some notes on what I’ve learned. Note many of these snippets were generated using Claude 3.5 Sonnet (passing a prompt and the Jupyter notebook plain text, it did a better job than <code>o1-preview</code>, surprisingly)</p>
<section id="module-2---state-and-memory" class="level2">
<h2 class="anchored" data-anchor-id="module-2---state-and-memory">Module 2 - State and Memory</h2>
<section id="lesson-2---state-reducers" class="level3">
<h3 class="anchored" data-anchor-id="lesson-2---state-reducers">Lesson 2 - State Reducers</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/state-reducers.ipynb">Notebook</a></li>
</ul>
<p>Reducers are used to specify how state updates are performed when multiple nodes try to update the same key:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Annotated</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> operator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> State(TypedDict):</span>
<span id="cb1-5">    foo: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], add]</span></code></pre></div>
<p>Custom reducers can be defined to handle complex state update logic:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reduce_list(left: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, right: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>:</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> left:</span>
<span id="cb2-3">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> right:</span>
<span id="cb2-5">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> right</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomReducerState(TypedDict):</span>
<span id="cb2-9">    foo: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], reduce_list]</span></code></pre></div>
<p>MessagesState is a useful shortcut for working with message-based states. These two are equivalent:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Annotated</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MessagesState</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AnyMessage</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph.message <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add_messages</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a custom TypedDict that includes a list of messages with add_messages reducer</span></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomMessagesState(TypedDict):</span>
<span id="cb3-8">    messages: Annotated[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[AnyMessage], add_messages]</span>
<span id="cb3-9">    added_key_1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-10">    added_key_2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use MessagesState, which includes the messages key with add_messages reducer</span></span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> ExtendedMessagesState(MessagesState):</span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add any keys needed beyond messages, which is pre-built </span></span>
<span id="cb3-16">    added_key_1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-17">    added_key_2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb3-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc</span></span></code></pre></div>
<p>The <code>add_messages</code> reducer allows appending messages to the state:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph.message <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add_messages</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AIMessage, HumanMessage</span>
<span id="cb4-3"></span>
<span id="cb4-4">new_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, new_message)</span></code></pre></div>
<p>Messages can be overwritten by using the same ID:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">new_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New content"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"existing_id"</span>)</span>
<span id="cb5-2">updated_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, new_message)</span></code></pre></div>
<p>Messages can be removed using <code>RemoveMessage</code>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RemoveMessage</span>
<span id="cb6-2"></span>
<span id="cb6-3">delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> messages_to_delete]</span>
<span id="cb6-4">updated_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_messages(existing_messages, delete_messages)</span></code></pre></div>
</section>
<section id="lesson-3---multiple-schemas" class="level3">
<h3 class="anchored" data-anchor-id="lesson-3---multiple-schemas">Lesson 3 - Multiple Schemas</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/multiple-schemas.ipynb">Notebook</a></li>
<li>A graph can have multiple states. This is useful for controlling what information is shown to the user.</li>
</ul>
<p>Private State: You can pass private state between nodes that isn’t relevant for the overall graph input or output.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing_extensions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TypedDict</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, display</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StateGraph, START, END</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OverallState(TypedDict):</span>
<span id="cb7-6">    foo: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> PrivateState(TypedDict):</span>
<span id="cb7-9">    baz: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> node_1(state: OverallState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> PrivateState:</span>
<span id="cb7-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---Node 1---"</span>)</span>
<span id="cb7-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"baz"</span>: state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'foo'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>}</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> node_2(state: PrivateState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> OverallState:</span>
<span id="cb7-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---Node 2---"</span>)</span>
<span id="cb7-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"foo"</span>: state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'baz'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>}</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build graph</span></span>
<span id="cb7-20">builder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(OverallState)</span>
<span id="cb7-21">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>, node_1)</span>
<span id="cb7-22">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>, node_2)</span>
<span id="cb7-23"></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Logic</span></span>
<span id="cb7-25">builder.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>)</span>
<span id="cb7-26">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>)</span>
<span id="cb7-27">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node_2"</span>, END)</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add</span></span>
<span id="cb7-30">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> builder.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span></code></pre></div>
<p>Input/Output Schema: You can define explicit input and output schemas for a graph, which is useful for constraining the input and output. Filtering: Input and output schemas perform filtering on what keys are permitted on the input and output of the graph.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> InputState(TypedDict):</span>
<span id="cb8-2">    question: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OutputState(TypedDict):</span>
<span id="cb8-5">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OverallState(TypedDict):</span>
<span id="cb8-8">    question: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-9">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-10">    notes: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> thinking_node(state: InputState):</span>
<span id="cb8-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"... his is name is Lance"</span>}</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> answer_node(state: OverallState) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> OutputState:</span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye Lance"</span>}</span>
<span id="cb8-17"></span>
<span id="cb8-18">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(OverallState, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>InputState, output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>OutputState)</span>
<span id="cb8-19">graph.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>, answer_node)</span>
<span id="cb8-20">graph.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>, thinking_node)</span>
<span id="cb8-21">graph.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>)</span>
<span id="cb8-22">graph.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thinking_node"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>)</span>
<span id="cb8-23">graph.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_node"</span>, END)</span>
<span id="cb8-24"></span>
<span id="cb8-25">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span>
<span id="cb8-26"></span>
<span id="cb8-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View</span></span>
<span id="cb8-28">display(Image(graph.get_graph().draw_mermaid_png()))</span>
<span id="cb8-29"></span>
<span id="cb8-30">graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"question"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi"</span>})</span>
<span id="cb8-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: {'answer': 'bye Lance'}</span></span></code></pre></div>
</section>
<section id="lesson-4---trim-and-filter-messages" class="level3">
<h3 class="anchored" data-anchor-id="lesson-4---trim-and-filter-messages">Lesson 4 - Trim and Filter Messages</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/trim-filter-messages.ipynb">Notebook</a></li>
<li>You can filter messages using the <code>RemoveMessage</code> class.</li>
<li>As a use case, you can preserve the state (e.g.&nbsp;with 5 messages in the message history) but only call the LLM with the last n messages</li>
<li>You can also trim messages based on a set number of tokens using <code>trim_messages</code></li>
</ul>
<p>Filtering messages using RemoveMessage:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RemoveMessage</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> filter_messages(state: MessagesState):</span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete all but the 2 most recent messages</span></span>
<span id="cb9-5">    delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb9-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: delete_messages}</span>
<span id="cb9-7"></span>
<span id="cb9-8">builder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(MessagesState)</span>
<span id="cb9-9">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>, filter_messages)</span>
<span id="cb9-10">builder.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_model"</span>, chat_model_node)</span>
<span id="cb9-11">builder.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>)</span>
<span id="cb9-12">builder.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_model"</span>)</span></code></pre></div>
<p>Trimming messages based on token count:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> trim_messages</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> chat_model_node(state: MessagesState):</span>
<span id="cb10-4">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> trim_messages(</span>
<span id="cb10-5">            state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>],</span>
<span id="cb10-6">            max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb10-7">            strategy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last"</span>,</span>
<span id="cb10-8">            token_counter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ChatOpenAI(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4o"</span>),</span>
<span id="cb10-9">            allow_partial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb10-10">        )</span>
<span id="cb10-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [llm.invoke(messages)]}</span></code></pre></div>
</section>
<section id="lesson-5---chatbot-w-summarizing-messages-and-memory" class="level3">
<h3 class="anchored" data-anchor-id="lesson-5---chatbot-w-summarizing-messages-and-memory">Lesson 5 - Chatbot w/ Summarizing Messages and Memory</h3>
<ul>
<li>Interesting example of using the above ideas to create a chatbot that creates a running summary of messages as a way of condensing the memory.</li>
<li>You can pass a thread to the LangChain runnable and the runnable will continue the conversation from that previous state.</li>
</ul>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MessagesState</span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> State(MessagesState):</span>
<span id="cb11-3">    summary: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.messages <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SystemMessage, HumanMessage, RemoveMessage</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the logic to call the model</span></span>
<span id="cb11-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> call_model(state: State):</span>
<span id="cb11-9">    </span>
<span id="cb11-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get summary if it exists</span></span>
<span id="cb11-11">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb11-12"></span>
<span id="cb11-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If there is summary, then we add it</span></span>
<span id="cb11-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> summary:</span>
<span id="cb11-15">        </span>
<span id="cb11-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add summary to system message</span></span>
<span id="cb11-17">        system_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Summary of conversation earlier: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-18"></span>
<span id="cb11-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append summary to any newer messages</span></span>
<span id="cb11-20">        messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [SystemMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>system_message)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb11-21">    </span>
<span id="cb11-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-23">        messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb11-24">    </span>
<span id="cb11-25">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.invoke(messages)</span>
<span id="cb11-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: response}</span></code></pre></div>
<p>Note, here we’ll use <code>RemoveMessage</code> to filter our state after we’ve produced the summary.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> summarize_conversation(state: State):</span>
<span id="cb12-2">    </span>
<span id="cb12-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First, we get any existing summary</span></span>
<span id="cb12-4">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create our summarization prompt </span></span>
<span id="cb12-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> summary:</span>
<span id="cb12-8">        </span>
<span id="cb12-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A summary already exists</span></span>
<span id="cb12-10">        summary_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb12-11">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is summary of the conversation to date: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extend the summary by taking into account the new messages above:"</span></span>
<span id="cb12-13">        )</span>
<span id="cb12-14">        </span>
<span id="cb12-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-16">        summary_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create a summary of the conversation above:"</span></span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add prompt to our history</span></span>
<span id="cb12-19">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>summary_message)]</span>
<span id="cb12-20">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.invoke(messages)</span>
<span id="cb12-21">    </span>
<span id="cb12-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete all but the 2 most recent messages</span></span>
<span id="cb12-23">    delete_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [RemoveMessage(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>m.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>][:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb12-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary"</span>: response.content, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: delete_messages}</span></code></pre></div>
<p>Adding memory:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, display</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.checkpoint.memory <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MemorySaver</span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langgraph.graph <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StateGraph, START</span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a new graph</span></span>
<span id="cb13-6">workflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StateGraph(State)</span>
<span id="cb13-7">workflow.add_node(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>, call_model)</span>
<span id="cb13-8">workflow.add_node(summarize_conversation)</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the entrypoint as conversation</span></span>
<span id="cb13-11">workflow.add_edge(START, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>)</span>
<span id="cb13-12">workflow.add_conditional_edges(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conversation"</span>, should_continue)</span>
<span id="cb13-13">workflow.add_edge(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summarize_conversation"</span>, END)</span></code></pre></div>
<p>A checkpointer saves the state at each step as a checkpoint. These saved checkpoints can be grouped into a <code>thread</code> of conversation. Below we setting a thread_id. You can then continue the conversation by passing the config to the LangChain Runnable.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a thread</span></span>
<span id="cb14-2">config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"configurable"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thread_id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>}}</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start conversation</span></span>
<span id="cb14-5">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi! I'm Lance"</span>)</span>
<span id="cb14-6">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-8">    m.pretty_print()</span>
<span id="cb14-9"></span>
<span id="cb14-10">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what's my name?"</span>)</span>
<span id="cb14-11">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-13">    m.pretty_print()</span>
<span id="cb14-14"></span>
<span id="cb14-15">input_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HumanMessage(content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i like the 49ers!"</span>)</span>
<span id="cb14-16">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>: [input_message]}, config) </span>
<span id="cb14-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'messages'</span>][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb14-18">    m.pretty_print()</span></code></pre></div>
</section>
<section id="lesson-6---chatbot-w-summarizing-messages-and-external-memory" class="level3">
<h3 class="anchored" data-anchor-id="lesson-6---chatbot-w-summarizing-messages-and-external-memory">Lesson 6 - Chatbot w/ Summarizing Messages and External Memory</h3>
<ul>
<li><a href="https://github.com/langchain-ai/langchain-academy/blob/8cca5e1092d01931f6aa9143ffc87d21ccd6052f/module-2/chatbot-external-memory.ipynb">Notebook</a></li>
<li>You can easily configure external memory to a database like sqlite.</li>
<li>Therefore you can persist memory across notebook sessions</li>
</ul>


</section>
</section>

 ]]></description>
  <category>LangGraph</category>
  <category>LLMs</category>
  <category>Agents</category>
  <category>Python</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-09-20-langgraph-tutorial/</guid>
  <pubDate>Fri, 20 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>God’s Design for Marriage</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/</link>
  <description><![CDATA[ 




<p>My church is hosting a retreat this weekend and we are privileged to have <a href="https://www.masters.edu/faculty_staff_bio/john-d-street/">John Street</a> as our speaker. He was planning to speak on God’s Design for Marriage. I was curious whether he had taught similar sessions before. He actually did at <a href="https://www.youtube.com/playlist?list=PLdY75M-gUuKC1G4PAseaT8O5IOte9yb3H">FBC Weston back in 2018</a>. Interestingly he gave 6 sessions (5 + a Q&amp;A). To get a preview, I <a href="https://lawwu.github.io/transcripts/index_john_street_gods_design_for_marriage.html">transcribed all of those talks</a> using my <a href="https://github.com/lawwu/transcripts">transcripts repo</a> and summarized them using Claude 3.5 Sonnet.</p>
<section id="summaries" class="level1">
<h1>Summaries</h1>
<p>See below for the summaries:</p>
<ul>
<li><a href="../../conferences/2024-08-14-john-street-1-marriage/index.html">Session 1 - God’s Design for Marriage</a></li>
<li><a href="../../conferences/2024-08-14-john-street-2-husbands/index.html">Session 2 - God’s Design for Husbands</a></li>
<li><a href="../../conferences/2024-08-14-john-street-3-wives/index.html">Session 3 - God’s Design for Wives</a></li>
<li><a href="../../conferences/2024-08-14-john-street-4-communication/index.html">Session 4 - God’s Design for Communication</a></li>
<li><a href="../../conferences/2024-08-14-john-street-5-marital-union/index.html">Session 5 - God’s Design for Marital Union</a></li>
<li><a href="../../conferences/2024-08-14-john-street-6-qa/index.html">Session 6 - Q&amp;A</a></li>
</ul>
</section>
<section id="steps-to-generate-summaries" class="level1">
<h1>Steps to Generate Summaries</h1>
<p>First I prompted Claude 3.5 Sonnet to create a prompt (I know this is kind of meta) but I rightly assumed the model would generate a better prompt than I would.</p>
<section id="step-1-prompting-an-llm-to-get-a-prompt" class="level2">
<h2 class="anchored" data-anchor-id="step-1-prompting-an-llm-to-get-a-prompt">Step 1: Prompting an LLM to get a Prompt</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/prompt_to_get_prompt.png" class="img-fluid figure-img"></p>
<figcaption>Prompt to get a Prompt</figcaption>
</figure>
</div>
<p>My prompt was:</p>
<pre><code>Create a prompt for getting the questions and answers from a youtube transcript of a Q&amp;A talk</code></pre>
<p>The generated Claude artifact was:</p>
<pre><code>Your task is to analyze a transcript from a YouTube Q&amp;A session and extract the questions and their corresponding answers. Follow these steps:

Read through the entire transcript carefully.
Identify each distinct question asked during the Q&amp;A session. Look for:

Direct questions from the audience or moderator
Implied questions based on the speaker's responses
Questions the speaker poses rhetorically or to frame their discussion


For each question:

Note the timestamp or approximate location in the transcript
Record the question verbatim if possible, or paraphrase clearly if the exact wording is unclear
Identify the start and end of the corresponding answer in the transcript
Summarize the key points of the answer concisely


Format your output as follows for each Q&amp;A pair:
Q[number]: [Question]
Timestamp: [Time in video where question occurs]
A: [Summarized answer]
If there are any ambiguities or unclear sections in the transcript, note these in your response.
After extracting all Q&amp;A pairs, provide a brief overview of the main themes or topics discussed in the session.

Remember to focus on the substantive content of the Q&amp;A, avoiding any unnecessary filler or off-topic conversation. Your goal is to create a clear, concise summary of the key questions and answers from the session.</code></pre>
<p>Some notes: - I added a line “Also if there are any verses cited, write those verses and quote the verse in the ESV translation.” because I wanted verses to be extracted. - I also generated a different version of this prompt to work on the non-Q&amp;A sections.</p>
<p>This is the non Q&amp;A version:</p>
<pre><code>Your task is to analyze the transcript of a marriage seminar taught by John Street at a church. The transcript includes timestamps. Follow these steps to summarize the main points, arguments, verses, and applications:

Read through the entire transcript carefully.
Identify and categorize the following elements:
a) Main Points: Overarching themes or key ideas presented in the seminar
b) Arguments: Logical reasoning or explanations supporting the main points
c) Verses: Bible verses cited or referenced during the seminar
d) Applications: Practical advice or suggestions for applying the teachings in real life
For each element, note the timestamp where it appears in the transcript.
Summarize each element concisely, capturing the essence of what John Street communicated.
Organize your analysis using the following structure:
Main Points

[Timestamp] [Summarized main point]
[Timestamp] [Summarized main point]
(Continue for all main points)

Arguments

[Timestamp] [Summarized argument]
[Timestamp] [Summarized argument]
(Continue for all significant arguments)

Bible Verses

[Timestamp] [Book Chapter:Verse] - [Brief context or how it was used]
[Timestamp] [Book Chapter:Verse] - [Brief context or how it was used]
(Continue for all verses mentioned)

Practical Applications

[Timestamp] [Summarized application]
[Timestamp] [Summarized application]
(Continue for all practical applications)


After completing the categorized summaries, provide a brief overview (2-3 paragraphs) of the seminar, highlighting:

The central message or theme of the seminar
How the arguments and verses support the main points
The overall approach to marriage presented by John Street


Note any recurring themes, emphasis, or unique perspectives presented throughout the seminar.
If there are any ambiguities or unclear sections in the transcript, mention these in your response.

Remember to focus on the substantive content of the seminar, capturing the essence of John Street's teachings on marriage. Your goal is to create a clear, concise, and well-organized summary that someone could use to quickly understand the key elements of the seminar without listening to the entire recording.

Return your output in pastable markdown.

Use this Youtube URL to generate links to the timestamps: </code></pre>
</section>
<section id="step-2-summarize" class="level2">
<h2 class="anchored" data-anchor-id="step-2-summarize">Step 2: Summarize</h2>
<p>I took the above prompt and transcript data to generate a summary of the conference talk. I did have to instruct the LLM to return the output in “pastable markdown.”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/summary_qa.png" class="img-fluid figure-img"></p>
<figcaption>Summary of Q&amp;A</figcaption>
</figure>
</div>
<p>The markdown genrated by Claude is below:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Biblical Counseling Q&amp;A Session Summary</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q1: How can I get training in true biblical counseling?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=101s)</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">Dr. Street recommends several options:</span>
<span id="cb4-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Get an accredited graduate degree in biblical counseling for in-depth study.</span>
<span id="cb4-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Attend training sessions offered by the Association of Certified Biblical Counselors (ACBC).</span>
<span id="cb4-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Look for undergraduate programs in biblical counseling at schools like Boyce College or The Master's University.</span>
<span id="cb4-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Attend seminars and workshops on biblical counseling.</span>
<span id="cb4-10"></span>
<span id="cb4-11">He emphasizes the importance of ensuring the training adheres to true biblical counseling standards, which can be verified by checking the ACBC website (biblicalcounseling.com) for their statement of faith and practice.</span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q2: How do we deal with past hurts, pains, difficulties and abuse?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=371s)</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">Dr. Street provides the following guidance:</span>
<span id="cb4-16"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Understand that we live in a sinful world where bad things happen.</span>
<span id="cb4-17"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Choose whether to let past traumas define you or allow Christ to define you.</span>
<span id="cb4-18"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Focus on doing good and not repaying evil with evil.</span>
<span id="cb4-19"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Seek peace and pursue righteousness.</span>
<span id="cb4-20"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Be prepared to explain your faith and hope to others who notice your changed behavior.</span>
<span id="cb4-21"></span>
<span id="cb4-22">He emphasizes that while traumatic experiences are real, Christians should not let them control their lives, but instead find their identity in Christ.</span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q3: At what age do you encourage children to move out of the home?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=748s)</span></span>
<span id="cb4-25"></span>
<span id="cb4-26">Dr. Street provides the following guidelines:</span>
<span id="cb4-27"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There's no specific age, as individual circumstances (like disabilities) may affect this decision.</span>
<span id="cb4-28"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Children should be raised with the expectation of eventually leaving home.</span>
<span id="cb4-29"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents should encourage independence when children are physically and mentally capable of supporting themselves.</span>
<span id="cb4-30"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>For adult children living at home, parents can implement strategies like charging rent to encourage moving out.</span>
<span id="cb4-31"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Parents should act as a safety net but not enable prolonged dependence.</span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q4: What do you say to couples living together prior to marriage?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=977s)</span></span>
<span id="cb4-34"></span>
<span id="cb4-35">Dr. Street strongly advises against cohabitation before marriage:</span>
<span id="cb4-36"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>He states that couples living together before marriage are "living openly in sin."</span>
<span id="cb4-37"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>He emphasizes that Christians should be different from worldly practices.</span>
<span id="cb4-38"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>He advises couples to stop cohabiting, repent, and ask each other for forgiveness.</span>
<span id="cb4-39"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>He explains that sexual relationships should only occur within a monogamous, heterosexual marriage.</span>
<span id="cb4-40"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>He warns that premarital cohabitation can undermine trust and integrity in the future marriage.</span>
<span id="cb4-41"></span>
<span id="cb4-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q5: What do Christian parents do when an unmarried couple want to spend the night together in their home?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1166s)</span></span>
<span id="cb4-43"></span>
<span id="cb4-44">Dr. Street advises:</span>
<span id="cb4-45"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Parents should not allow unmarried couples to share a room in their home.</span>
<span id="cb4-46"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>They should make separate sleeping arrangements, even if it means parents sleeping separately to accommodate guests.</span>
<span id="cb4-47"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents shouldn't compromise their principles to accommodate others' ungodliness.</span>
<span id="cb4-48"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>While parents can express love in other ways, they shouldn't enable or approve of sinful behavior.</span>
<span id="cb4-49"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>This applies to all unmarried couples, regardless of sexual orientation.</span>
<span id="cb4-50"></span>
<span id="cb4-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q6: How do we help young men and women who are not married but want to become married?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1353s)</span></span>
<span id="cb4-52"></span>
<span id="cb4-53">Dr. Street references 1 Thessalonians 4:3-7 and advises:</span>
<span id="cb4-54"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Teach them to choose a spouse based on holiness and honor, not primarily on physical attraction.</span>
<span id="cb4-55"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Encourage them to consider whether their relationship leads to greater holiness for both partners.</span>
<span id="cb4-56"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Help them understand the importance of honoring parents' wisdom in choosing a spouse.</span>
<span id="cb4-57"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Prepare them for the reality that they're marrying someone with flaws, not the idealized version they see while dating.</span>
<span id="cb4-58"></span>
<span id="cb4-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q7: What role do godly parents play in encouraging their children into a godly marriage?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1670s)</span></span>
<span id="cb4-60"></span>
<span id="cb4-61">Dr. Street suggests:</span>
<span id="cb4-62"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Parents should teach their children what Scripture says about marriage.</span>
<span id="cb4-63"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>They should guide their children in making decisions about marriage in an honorable and godly way.</span>
<span id="cb4-64"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Parents often have wisdom that younger people lack, even if the parents aren't believers.</span>
<span id="cb4-65"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Children should pay close attention to their parents' input about potential spouses.</span>
<span id="cb4-66"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Parents should help their children realize they're marrying someone with flaws, not a perfect person.</span>
<span id="cb4-67"></span>
<span id="cb4-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q8: Should married couples live with their in-laws?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=1917s)</span></span>
<span id="cb4-69"></span>
<span id="cb4-70">Dr. Street provides the following guidance:</span>
<span id="cb4-71"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There's no simple yes or no answer, as circumstances vary.</span>
<span id="cb4-72"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Living with in-laws can be necessary for caregiving or financial reasons.</span>
<span id="cb4-73"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Generally, it's not the best arrangement for newly married couples.</span>
<span id="cb4-74"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>If couples do live with in-laws, it's crucial to maintain proper boundaries and priorities.</span>
<span id="cb4-75"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>The married couple must present a unified front and prioritize their relationship over parental relationships.</span>
<span id="cb4-76"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>The husband and wife should always side with each other, not their respective parents.</span>
<span id="cb4-77"></span>
<span id="cb4-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q9: How do I make my husband a priority when I have a career?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2164s)</span></span>
<span id="cb4-79"></span>
<span id="cb4-80">Dr. Street advises:</span>
<span id="cb4-81"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>It's not wrong for a woman to have a career, but it shouldn't dictate family priorities.</span>
<span id="cb4-82"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>A woman's primary responsibility should be to her husband, children, and home, not her career.</span>
<span id="cb4-83"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Husbands should take leadership in providing for the family financially.</span>
<span id="cb4-84"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Both spouses should work together to balance career and home responsibilities.</span>
<span id="cb4-85"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Husbands should actively help with household tasks, especially if both spouses work outside the home.</span>
<span id="cb4-86"></span>
<span id="cb4-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q10: Can I have a calling at work as a woman?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2470s)</span></span>
<span id="cb4-88"></span>
<span id="cb4-89">Dr. Street states:</span>
<span id="cb4-90"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>There is no special "calling" for women in careers in the same way as pastoral ministry.</span>
<span id="cb4-91"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Women can have successful careers and be well-accomplished professionally.</span>
<span id="cb4-92"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Careers can be used in good and godly ways, including in Christian service.</span>
<span id="cb4-93"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>However, a woman's home and husband should always be her top priority.</span>
<span id="cb4-94"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Women should ensure their career doesn't overshadow their primary responsibilities to family and home.</span>
<span id="cb4-95"></span>
<span id="cb4-96"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## [Q11: What are some basic principles to apply if a Christian is married to a non-Christian?](https://www.youtube.com/watch?v=CVyerCbKlvY&amp;t=2674s)</span></span>
<span id="cb4-97"></span>
<span id="cb4-98">Dr. Street provides the following guidance based on 1 Peter 3:</span>
<span id="cb4-99"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>For wives with unbelieving husbands, follow 1 Peter 3:1-6 as your guide.</span>
<span id="cb4-100"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>For husbands with unbelieving wives, follow 1 Peter 3:7.</span>
<span id="cb4-101"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Focus on unity with other Christians, sympathy, love, and humility.</span>
<span id="cb4-102"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Don't repay evil with evil, but bless others instead.</span>
<span id="cb4-103"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Seek peace and pursue righteousness.</span>
<span id="cb4-104"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>Be prepared to explain your faith when your spouse asks about your changed behavior.</span>
<span id="cb4-105"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7. </span>View yourself as God's missionary to your unbelieving spouse.</span>
<span id="cb4-106"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">8. </span>Live out your faith consistently, even in the face of difficulties.</span>
<span id="cb4-107"></span>
<span id="cb4-108"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Main Themes of the Q&amp;A Session:</span></span>
<span id="cb4-109"></span>
<span id="cb4-110"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1. </span>Biblical approach to counseling and dealing with past traumas</span>
<span id="cb4-111"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2. </span>Christian perspectives on marriage, cohabitation, and family life</span>
<span id="cb4-112"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3. </span>Balancing career and family responsibilities, especially for women</span>
<span id="cb4-113"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4. </span>Parenting adult children and encouraging independence</span>
<span id="cb4-114"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5. </span>Navigating relationships with in-laws</span>
<span id="cb4-115"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6. </span>Guidance for Christians married to non-believers</span>
<span id="cb4-116"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7. </span>The importance of maintaining biblical standards in a secular culture</span>
<span id="cb4-117"></span>
<span id="cb4-118">The session emphasizes a strong commitment to biblical principles in all aspects of life, particularly in marriage and family relationships. It also stresses the importance of distinctively Christian behavior in contrast to worldly practices.</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>God</category>
  <category>Marriage</category>
  <category>Summary</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-08-14-gods-design-for-marriage/</guid>
  <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How Dwarkesh Patel Uses AI &amp; Claude</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-07-26-dwarkesh-claude/</link>
  <description><![CDATA[ 




<p>Dwarkesh Patel is becoming the new Lex Fridman of podcasting. Lex got his start a podcaster interviewing AI experts. Since then Lex has branched out and most of his guests are non AI-experts. Dwarkesh has filled this gap. In this interview, Dan Shipper interviews him:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Vm49oIPtyRE" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>I listened to 15 minutes but didn’t want to listen to the rest of it. But I was still curious how Dwarkesh uses AI in his day-to-day. So I grabbed the transcript (which is available via Youtube’s API). You can use a Python library <a href="https://pypi.org/project/youtube-transcript-api/">youtube-transcript-api</a> or <a href="https://youtubetranscript.com/?v=Vm49oIPtyRE">web services</a> that do the same thing from a web interface.</p>
<p>I copied the whole transcript into ChatGPT and Claude with the following prompt:</p>
<blockquote class="blockquote">
<p>What are the main ways that Dhwarkesh uses AI in his workflow based on this transcript summary below? Output the thing and more detail about it.</p>
</blockquote>
<p>with the full transcript below. ChatGPT actually was unable to process that amount of text but Claude 3.5 Sonnet was. Claude’s output is below (prompted it to regenerate in Markdown so it’s copy-pastable in a Quarto markdown document):</p>
<section id="dhwarkeshs-ai-workflow" class="level1">
<h1>Dhwarkesh’s AI Workflow</h1>
<section id="research-assistance" class="level2">
<h2 class="anchored" data-anchor-id="research-assistance">1. Research Assistance</h2>
<ul>
<li>Uses Claude to help understand complex topics and ideas when preparing for interviews</li>
<li>Uploads books/papers to Claude projects and asks questions to gain deeper understanding</li>
<li>Uses Claude to explain concepts he doesn’t fully grasp from his reading</li>
</ul>
</section>
<section id="space-repetition-flashcards" class="level2">
<h2 class="anchored" data-anchor-id="space-repetition-flashcards">2. Space Repetition Flashcards</h2>
<ul>
<li>Uses an AI tool (likely Claude) to generate question-answer pairs from content he’s studying</li>
<li>Adds these to a spaced repetition app called Mochi to reinforce learning over time</li>
</ul>
</section>
<section id="interview-preparation" class="level2">
<h2 class="anchored" data-anchor-id="interview-preparation">3. Interview Preparation</h2>
<ul>
<li>Experiments with using Claude to analyze patterns in his past interview questions</li>
<li>Tries to use this to generate potential questions for upcoming interviews, though with limited success so far</li>
</ul>
</section>
<section id="post-production-assistance" class="level2">
<h2 class="anchored" data-anchor-id="post-production-assistance">4. Post-production Assistance</h2>
<ul>
<li>Uses AI speech-to-text (Assembly AI) to generate initial podcast transcripts</li>
<li>Experiments with using GPT-4 to clean up and improve readability of transcripts</li>
<li>Working on workflows to use AI to generate title ideas, clip suggestions, and highlights from transcripts</li>
</ul>
</section>
<section id="writing-assistance" class="level2">
<h2 class="anchored" data-anchor-id="writing-assistance">5. Writing Assistance</h2>
<ul>
<li>Uses Claude projects to organize notes, quotes, and ideas for long-form writing</li>
<li>Asks Claude for help analyzing themes and creating outlines from his scattered notes</li>
</ul>
</section>
<section id="general-learning-companion" class="level2">
<h2 class="anchored" data-anchor-id="general-learning-companion">6. General Learning Companion</h2>
<ul>
<li>Frequently turns to Claude as a “first thing” when trying to understand new concepts or get context on topics</li>
</ul>
<p>I have been wanting to try Claude more so I signed up for a paid service. They’ve introduced a notion of <a href="https://www.anthropic.com/news/projects">Projects</a> which are areas where you can group chats and upload data to chat over.</p>
<p>In the “How to Use Claude” example project, one of the files is a Claude Prompting Guide that I found useful as a refresher for good prompt engineering practices:</p>
</section>
</section>
<section id="claude-prompting-guide" class="level1">
<h1>Claude prompting guide</h1>
<section id="general-tips-for-effective-prompting" class="level2">
<h2 class="anchored" data-anchor-id="general-tips-for-effective-prompting">General tips for effective prompting</h2>
<section id="be-clear-and-specific" class="level3">
<h3 class="anchored" data-anchor-id="be-clear-and-specific">1. Be clear and specific</h3>
<ul>
<li>Clearly state your task or question at the beginning of your message.</li>
<li>Provide context and details to help Claude understand your needs.</li>
<li>Break complex tasks into smaller, manageable steps.</li>
</ul>
<p>Bad prompt: <prompt> “Help me with a presentation.” </prompt></p>
<p>Good prompt: <prompt> “I need help creating a 10-slide presentation for our quarterly sales meeting. The presentation should cover our Q2 sales performance, top-selling products, and sales targets for Q3. Please provide an outline with key points for each slide.” </prompt></p>
<p>Why it’s better: The good prompt provides specific details about the task, including the number of slides, the purpose of the presentation, and the key topics to be covered.</p>
</section>
<section id="use-examples" class="level3">
<h3 class="anchored" data-anchor-id="use-examples">2. Use examples</h3>
<ul>
<li>Provide examples of the kind of output you’re looking for.</li>
<li>If you want a specific format or style, show Claude an example.</li>
</ul>
<p>Bad prompt: <prompt> “Write a professional email.” </prompt></p>
<p>Good prompt: <prompt> “I need to write a professional email to a client about a project delay. Here’s a similar email I’ve sent before:</prompt></p>
<p>‘Dear [Client], I hope this email finds you well. I wanted to update you on the progress of [Project Name]. Unfortunately, we’ve encountered an unexpected issue that will delay our completion date by approximately two weeks. We’re working diligently to resolve this and will keep you updated on our progress. Please let me know if you have any questions or concerns. Best regards, [Your Name]’</p>
<p>Help me draft a new email following a similar tone and structure, but for our current situation where we’re delayed by a month due to supply chain issues.” </p>
<p>Why it’s better: The good prompt provides a concrete example of the desired style and tone, giving Claude a clear reference point for the new email.</p>
</section>
<section id="encourage-thinking" class="level3">
<h3 class="anchored" data-anchor-id="encourage-thinking">3. Encourage thinking</h3>
<ul>
<li>For complex tasks, ask Claude to “think step-by-step” or “explain your reasoning.”</li>
<li>This can lead to more accurate and detailed responses.</li>
</ul>
<p>Bad prompt: <prompt> “How can I improve team productivity?” </prompt></p>
<p>Good prompt: <prompt> “I’m looking to improve my team’s productivity. Think through this step-by-step, considering the following factors: 1. Current productivity blockers (e.g., too many meetings, unclear priorities) 2. Potential solutions (e.g., time management techniques, project management tools) 3. Implementation challenges 4. Methods to measure improvement</prompt></p>
<p>For each step, please provide a brief explanation of your reasoning. Then summarize your ideas at the end.” </p>
<p>Why it’s better: The good prompt asks Claude to think through the problem systematically, providing a guided structure for the response and asking for explanations of the reasoning process. It also prompts Claude to create a summary at the end for easier reading.</p>
</section>
<section id="iterative-refinement" class="level3">
<h3 class="anchored" data-anchor-id="iterative-refinement">4. Iterative refinement</h3>
<ul>
<li>If Claude’s first response isn’t quite right, ask for clarifications or modifications.</li>
<li>You can always say “That’s close, but can you adjust X to be more like Y?”</li>
</ul>
<p>Bad prompt: <prompt> “Make it better.” </prompt></p>
<p>Good prompt: <prompt> “That’s a good start, but please refine it further. Make the following adjustments: 1. Make the tone more casual and friendly 2. Add a specific example of how our product has helped a customer 3. Shorten the second paragraph to focus more on the benefits rather than the features” </prompt></p>
<p>Why it’s better: The good prompt provides specific feedback and clear instructions for improvements, allowing Claude to make targeted adjustments instead of just relying on Claude’s innate sense of what “better” might be — which is likely different from the user’s definition!</p>
</section>
<section id="leverage-claudes-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="leverage-claudes-knowledge">5. Leverage Claude’s knowledge</h3>
<ul>
<li>Claude has broad knowledge across many fields. Don’t hesitate to ask for explanations or background information</li>
<li>Be sure to include relevant context and details so that Claude’s response is maximally targeted to be helpful</li>
</ul>
<p>Bad prompt: <prompt> “What is marketing? How do I do it?” </prompt></p>
<p>Good prompt: <prompt> “I’m developing a marketing strategy for a new eco-friendly cleaning product line. Can you provide an overview of current trends in green marketing? Please include: 1. Key messaging strategies that resonate with environmentally conscious consumers 2. Effective channels for reaching this audience 3. Examples of successful green marketing campaigns from the past year 4. Potential pitfalls to avoid (e.g., greenwashing accusations)</prompt></p>
<p>This information will help me shape our marketing approach.” </p>
<p>Why it’s better: The good prompt asks for specific, contextually relevant information that leverages Claude’s broad knowledge base. It provides context for how the information will be used, which helps Claude frame its answer in the most relevant way.</p>
</section>
<section id="use-role-playing" class="level3">
<h3 class="anchored" data-anchor-id="use-role-playing">6. Use role-playing</h3>
<ul>
<li>Ask Claude to adopt a specific role or perspective when responding.</li>
</ul>
<p>Bad prompt: <prompt> “Help me prepare for a negotiation.” </prompt></p>
<p>Good prompt: <prompt> “You are a fabric supplier for my backpack manufacturing company. I’m preparing for a negotiation with this supplier to reduce prices by 10%. As the supplier, please provide: 1. Three potential objections to our request for a price reduction 2. For each objection, suggest a counterargument from my perspective 3. Two alternative proposals the supplier might offer instead of a straight price cut</prompt></p>
<p>Then, switch roles and provide advice on how I, as the buyer, can best approach this negotiation to achieve our goal.” </p>
<p>Why it’s better: This prompt uses role-playing to explore multiple perspectives of the negotiation, providing a more comprehensive preparation. Role-playing also encourages Claude to more readily adopt the nuances of specific perspectives, increasing the intelligence and performance of Claude’s response.</p>
</section>
</section>
<section id="task-specific-tips-and-examples" class="level2">
<h2 class="anchored" data-anchor-id="task-specific-tips-and-examples">Task-specific tips and examples</h2>
<section id="content-creation" class="level3">
<h3 class="anchored" data-anchor-id="content-creation">Content Creation</h3>
<ol type="1">
<li><p><strong>Specify your audience</strong></p>
<ul>
<li>Tell Claude who the content is for.</li>
</ul>
<p>Bad prompt: <prompt> “Write something about cybersecurity.” </prompt></p>
<p>Good prompt: <prompt> “I need to write a blog post about cybersecurity best practices for small business owners. The audience is not very tech-savvy, so the content should be:</prompt></p>
<ol type="1">
<li>Easy to understand, avoiding technical jargon where possible</li>
<li>Practical, with actionable tips they can implement quickly</li>
<li>Engaging and slightly humorous to keep their interest</li>
</ol>
<p>Please provide an outline for a 1000-word blog post that covers the top 5 cybersecurity practices these business owners should adopt.” </p>
<p>Why it’s better: The good prompt specifies the audience, desired tone, and key characteristics of the content, giving Claude clear guidelines for creating appropriate and effective output.</p></li>
<li><p><strong>Define the tone and style</strong></p>
<ul>
<li>Describe the desired tone.</li>
<li>If you have a style guide, mention key points from it.</li>
</ul>
<p>Bad prompt: <prompt> “Write a product description.” </prompt></p>
<p>Good prompt: <prompt> “Please help me write a product description for our new ergonomic office chair. Use a professional but engaging tone. Our brand voice is friendly, innovative, and health-conscious. The description should:</prompt></p>
<ol type="1">
<li>Highlight the chair’s key ergonomic features</li>
<li>Explain how these features benefit the user’s health and productivity</li>
<li>Include a brief mention of the sustainable materials used</li>
<li>End with a call-to-action encouraging readers to try the chair</li>
</ol>
<p>Aim for about 200 words.” </p>
<p>Why it’s better: This prompt provides clear guidance on the tone, style, and specific elements to include in the product description.</p></li>
<li><p><strong>Define output structure</strong></p>
<ul>
<li>Provide a basic outline or list of points you want covered.</li>
</ul>
<p>Bad prompt: <prompt> “Create a presentation on our company results.” </prompt></p>
<p>Good prompt: <prompt> “I need to create a presentation on our Q2 results. Structure this with the following sections:</prompt></p>
<ol type="1">
<li>Overview</li>
<li>Sales Performance</li>
<li>Customer Acquisition</li>
<li>Challenges</li>
<li>Q3 Outlook</li>
</ol>
<p>For each section, suggest 3-4 key points to cover, based on typical business presentations. Also, recommend one type of data visualization (e.g., graph, chart) that would be effective for each section.” </p>
<p>Why it’s better: This prompt provides a clear structure and asks for specific elements (key points and data visualizations) for each section.</p></li>
</ol>
</section>
<section id="document-summary-and-qa" class="level3">
<h3 class="anchored" data-anchor-id="document-summary-and-qa">Document summary and Q&amp;A</h3>
<ol type="1">
<li><strong>Be specific about what you want</strong>
<ul>
<li>Ask for a summary of specific aspects or sections of the document.</li>
<li>Frame your questions clearly and directly.</li>
<li>Be sure to specify what kind of summary (output structure, content type) you want</li>
</ul></li>
<li><strong>Use the document names</strong>
<ul>
<li>Refer to attached documents by name.</li>
</ul></li>
<li><strong>Ask for citations</strong>
<ul>
<li>Request that Claude cites specific parts of the document in its answers.</li>
</ul></li>
</ol>
<p>Here is an example that combines all three of the above techniques:</p>
<p>Bad prompt: <prompt> “Summarize this report for me.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached a 50-page market research report called ‘Tech Industry Trends 2023’. Can you provide a 2-paragraph summary focusing on AI and machine learning trends? Then, please answer these questions: 1. What are the top 3 AI applications in business for this year? 2. How is machine learning impacting job roles in the tech industry? 3. What potential risks or challenges does the report mention regarding AI adoption?</prompt></p>
<p>Please cite specific sections or page numbers when answering these questions.” </p>
<p>Why it’s better: This prompt specifies the exact focus of the summary, provides specific questions, and asks for citations, ensuring a more targeted and useful response. It also indicates the ideal summary output structure, such as limiting the response to 2 paragraphs.</p>
</section>
<section id="data-analysis-and-visualization" class="level3">
<h3 class="anchored" data-anchor-id="data-analysis-and-visualization">Data analysis and visualization</h3>
<ol type="1">
<li><p><strong>Specify the desired format</strong></p>
<ul>
<li>Clearly describe the format you want the data in.</li>
</ul>
<p>Bad prompt: <prompt> “Analyze our sales data.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached a spreadsheet called ‘Sales Data 2023’. Can you analyze this data and present the key findings in the following format:</prompt></p>
<ol type="1">
<li><p>Executive Summary (2-3 sentences)</p></li>
<li><p>Key Metrics:</p>
<ul>
<li>Total sales for each quarter</li>
<li>Top-performing product category</li>
<li>Highest growth region</li>
</ul></li>
<li><p>Trends:</p>
<ul>
<li>List 3 notable trends, each with a brief explanation</li>
</ul></li>
<li><p>Recommendations:</p>
<ul>
<li>Provide 3 data-driven recommendations, each with a brief rationale</li>
</ul></li>
</ol>
<p>After the analysis, suggest three types of data visualizations that would effectively communicate these findings.” </p>
<p>Why it’s better: This prompt provides a clear structure for the analysis, specifies key metrics to focus on, and asks for recommendations and visualization suggestions for further formatting.</p></li>
</ol>
</section>
<section id="brainstorming" class="level3">
<h3 class="anchored" data-anchor-id="brainstorming">Brainstorming</h3>
<ol type="1">
<li>Use Claude to generate ideas by asking for a list of possibilities or alternatives.
<ul>
<li>Be specific about what topics you want Claude to cover in its brainstorming</li>
</ul></li>
</ol>
<p>Bad prompt: <prompt> “Give me some team-building ideas.” </prompt></p>
<p>Good prompt: <prompt> “We need to come up with team-building activities for our remote team of 20 people. Can you help me brainstorm by: 1. Suggesting 10 virtual team-building activities that promote collaboration 2. For each activity, briefly explain how it fosters teamwork 3. Indicate which activities are best for: a) Ice-breakers b) Improving communication c) Problem-solving skills 4. Suggest one low-cost option and one premium option.” </prompt></p>
<p>Why it’s better: This prompt provides specific parameters for the brainstorming session, including the number of ideas, type of activities, and additional categorization, resulting in a more structured and useful output.</p>
<ol start="2" type="1">
<li><p>Request responses in specific formats like bullet points, numbered lists, or tables for easier reading.</p>
<p>Bad Prompt: <prompt> “Compare project management software options.” </prompt></p>
<p>Good Prompt: <prompt> “We’re considering three different project management software options: Asana, Trello, and Microsoft Project. Can you compare these in a table format using the following criteria:</prompt></p>
<ol type="1">
<li>Key Features</li>
<li>Ease of Use</li>
<li>Scalability</li>
<li>Pricing (include specific plans if possible)</li>
<li>Integration capabilities</li>
<li>Best suited for (e.g., small teams, enterprise, specific industries)” </li>
</ol>
<p>Why it’s better: This prompt requests a specific structure (table) for the comparison, provides clear criteria, making the information easy to understand and apply.</p></li>
</ol>
</section>
</section>
<section id="troubleshooting-minimizing-hallucinations-and-maximizing-performance" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-minimizing-hallucinations-and-maximizing-performance">Troubleshooting, minimizing hallucinations, and maximizing performance</h2>
<ol type="1">
<li><strong>Allow Claude to acknowledge uncertainty</strong>
<ul>
<li>Tell Claude that it should say it doesn’t know if it doesn’t know. Ex. “If you’re unsure about something, it’s okay to admit it. Just say you don’t know.”</li>
</ul></li>
<li><strong>Break down complex tasks</strong>
<ul>
<li>If a task seems too large and Claude is missing steps or not performing certain steps well, break it into smaller steps and work through them with Claude one message at a time.</li>
</ul></li>
<li><strong>Include all contextual information for new requests</strong>
<ul>
<li>Claude doesn’t retain information from previous conversations, so include all necessary context in each new conversation.</li>
</ul></li>
</ol>
</section>
<section id="example-good-vs.-bad-prompt-examples" class="level2">
<h2 class="anchored" data-anchor-id="example-good-vs.-bad-prompt-examples">Example good vs.&nbsp;bad prompt examples</h2>
<p>These are more examples that combine multiple prompting techniques to showcase the stark difference between ineffective and highly effective prompts.</p>
<section id="example-1-marketing-strategy-development" class="level3">
<h3 class="anchored" data-anchor-id="example-1-marketing-strategy-development">Example 1: Marketing strategy development</h3>
<p>Bad prompt: <prompt> “Help me create a marketing strategy.” </prompt></p>
<p>Good prompt: <prompt> “As a senior marketing consultant, I need your help developing a comprehensive marketing strategy for our new eco-friendly smartphone accessory line. Our target audience is environmentally conscious millennials and Gen Z consumers. Please provide a detailed strategy that includes:</prompt></p>
<ol type="1">
<li>Market Analysis:
<ul>
<li>Current trends in eco-friendly tech accessories</li>
<li>2-3 key competitors and their strategies</li>
<li>Potential market size and growth projections</li>
</ul></li>
<li>Target Audience Persona:
<ul>
<li>Detailed description of our ideal customer</li>
<li>Their pain points and how our products solve them</li>
</ul></li>
<li>Marketing Mix:
<ul>
<li>Product: Key features to highlight</li>
<li>Price: Suggested pricing strategy with rationale</li>
<li>Place: Recommended distribution channels</li>
<li>Promotion:
<ol type="a">
<li>5 marketing channels to focus on, with pros and cons for each</li>
<li>3 creative campaign ideas for launch</li>
</ol></li>
</ul></li>
<li>Content Strategy:
<ul>
<li>5 content themes that would resonate with our audience</li>
<li>Suggested content types (e.g., blog posts, videos, infographics)</li>
</ul></li>
<li>KPIs and Measurement:
<ul>
<li>5 key metrics to track</li>
<li>Suggested tools for measuring these metrics</li>
</ul></li>
</ol>
<p>Please present this information in a structured format with headings and bullet points. Where relevant, explain your reasoning or provide brief examples.</p>
<p>After outlining the strategy, please identify any potential challenges or risks we should be aware of, and suggest mitigation strategies for each.” </p>
<p>Why it’s better: This prompt combines multiple techniques including role assignment, specific task breakdown, structured output request, brainstorming (for campaign ideas and content themes), and asking for explanations. It provides clear guidelines while allowing room for Claude’s analysis and creativity.</p>
</section>
<section id="example-2-financial-report-analysis" class="level3">
<h3 class="anchored" data-anchor-id="example-2-financial-report-analysis">Example 2: Financial report analysis</h3>
<p>Bad prompt: <prompt> “Analyze this financial report.” </prompt></p>
<p>Good prompt: <prompt> “I’ve attached our company’s Q2 financial report titled ‘Q2_2023_Financial_Report.pdf’. Act as a seasoned CFO and analyze this report and prepare a briefing for our board of directors. Please structure your analysis as follows:</prompt></p>
<ol type="1">
<li><p>Executive Summary (3-4 sentences highlighting key points)</p></li>
<li><p>Financial Performance Overview:</p>
<ol type="a">
<li>Revenue: Compare to previous quarter and same quarter last year</li>
<li>Profit margins: Gross and Net, with explanations for any significant changes</li>
<li>Cash flow: Highlight any concerns or positive developments</li>
</ol></li>
<li><p>Key Performance Indicators:</p>
<ul>
<li>List our top 5 KPIs and their current status (Use a table format)</li>
<li>For each KPI, provide a brief explanation of its significance and any notable trends</li>
</ul></li>
<li><p>Segment Analysis:</p>
<ul>
<li>Break down performance by our three main business segments</li>
<li>Identify the best and worst performing segments, with potential reasons for their performance</li>
</ul></li>
<li><p>Balance Sheet Review:</p>
<ul>
<li>Highlight any significant changes in assets, liabilities, or equity</li>
<li>Calculate and interpret key ratios (e.g., current ratio, debt-to-equity)</li>
</ul></li>
<li><p>Forward-Looking Statements:</p>
<ul>
<li>Based on this data, provide 3 key predictions for Q3</li>
<li>Suggest 2-3 strategic moves we should consider to improve our financial position</li>
</ul></li>
<li><p>Risk Assessment:</p>
<ul>
<li>Identify 3 potential financial risks based on this report</li>
<li>Propose mitigation strategies for each risk</li>
</ul></li>
<li><p>Peer Comparison:</p>
<ul>
<li>Compare our performance to 2-3 key competitors (use publicly available data)</li>
<li>Highlight areas where we’re outperforming and areas for improvement</li>
</ul></li>
</ol>
<p>Please use charts or tables where appropriate to visualize data. For any assumptions or interpretations you make, please clearly state them and provide your reasoning.</p>
<p>After completing the analysis, please generate 5 potential questions that board members might ask about this report, along with suggested responses.</p>
<p>Finally, summarize this entire analysis into a single paragraph that I can use as an opening statement in the board meeting.” </p>
<p>Why it’s better: This prompt combines role-playing (as CFO), structured output, specific data analysis requests, predictive analysis, risk assessment, comparative analysis, and even anticipates follow-up questions. It provides a clear framework while encouraging deep analysis and strategic thinking.</p>


</section>
</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-07-26-dwarkesh-claude/</guid>
  <pubDate>Fri, 26 Jul 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>What to do after getting laid off?</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-07-09-what-to-do-after-layoffs/</link>
  <description><![CDATA[ 




<p>My company, UKG, <a href="https://www.sun-sentinel.com/2024/07/a05/2200-layoffs-loom-for-technology-firm-ukg-in-south-florida-north-america-and-overseas/">announced layoffs</a> last Wednesday (see an <a href="https://joshbersin.com/2024/07/ukg-14-reduction-in-force-a-growth-move-that-makes-sense/">industry expert’s take</a> on reasons why). 14% of the company was let go which is around 2,200 out of the 15,000 employees. Many of my teammates and friends were let go. I have been a part of companies that have had larger percentage layoffs (&gt;30%). However, the sheer number of people that were affected is somewhat shocking. Considering the number of lives, families, and children that were disrupted is difficult to think about.</p>
<p>I compiled a list of to-dos after one get’s laid off. Note this list is compiled from the following sources (<a href="https://www.bogleheads.org/forum/viewtopic.php?t=422426">Bogleheads Thread 1</a>, <a href="https://www.bogleheads.org/forum/viewtopic.php?t=431118">Bogleheads Thread 2</a>, <a href="https://hbr.org/2022/11/what-to-do-after-being-laid-off">HBR article</a>). Then I extracted, categorized and ranked each items with gpt-4o.</p>
<section id="to-dos-after-getting-laid-off" class="level1">
<h1>To-Dos After Getting Laid Off</h1>
<section id="immediate-actions" class="level2">
<h2 class="anchored" data-anchor-id="immediate-actions">Immediate Actions:</h2>
<ol type="1">
<li><strong>File for Unemployment</strong>: Apply for unemployment compensation (U.C.).</li>
<li><strong>Review Severance Package</strong>: Understand severance details, including insurance continuation.</li>
<li><strong>Health Insurance</strong>: Decide between COBRA, ACA, or Medicaid based on coverage needs and costs.</li>
<li><strong>Update Resume and Network</strong>: Prepare resume and reach out to recruiters and professional networks.</li>
<li><strong>Take Time to Process</strong>: Allow at least 24 hours to process the layoff before job searching.</li>
<li><strong>Reconfigure Mindset</strong>: Adjust your mindset to stay positive and focused on the future.</li>
<li><strong>Emotional Adjustment</strong>: Take time to process emotions and plan next steps.</li>
<li><strong>Financial Planning</strong>:
<ul>
<li>Calculate monthly burn rate and adjust expenses.</li>
<li>Ensure emergency funds are accessible.</li>
<li>Maximize contributions to Roth IRA if eligible.</li>
</ul></li>
<li><strong>Health and Wellness</strong>: Focus on spiritual, mental and physical health (exercise, diet, socializing).</li>
</ol>
</section>
<section id="financial-considerations" class="level2">
<h2 class="anchored" data-anchor-id="financial-considerations">Financial Considerations:</h2>
<ol type="1">
<li><strong>Understand Severance and Benefits</strong>: Clarify severance package details, including eligibility and benefits.</li>
<li><strong>Expense Management</strong>:
<ul>
<li>Cut discretionary spending.</li>
<li>Consider subletting or exiting the lease if feasible.</li>
</ul></li>
<li><strong>Asset Allocation</strong>:
<ul>
<li>Reassess and adjust asset allocation if necessary.</li>
<li>Consider Roth conversions if in a lower tax bracket.</li>
</ul></li>
<li><strong>Document Accomplishments</strong>: Use <a href="https://www.ed.ac.uk/reflection/reflectors-toolkit/reflecting-on-experience/carl">CARL</a> (Context, Action, Result, Learning) or <a href="https://www.indeed.com/career-advice/interviewing/how-to-use-the-star-interview-response-technique">STAR(T)</a> (Situation, Task, Action, Result + Takeaways) methods to list accomplishments.</li>
<li><strong>Pension Decision</strong>: Evaluate whether to take a lump sum or monthly pension.</li>
</ol>
</section>
<section id="personal-well-being" class="level2">
<h2 class="anchored" data-anchor-id="personal-well-being">Personal Well-being:</h2>
<ol type="1">
<li><strong>Emotional Adjustment</strong>: Take time to process emotions and plan next steps.</li>
<li><strong>Health and Wellness</strong>: Focus on mental and physical health (exercise, diet, socializing).</li>
<li><strong>Positive Mentality</strong>: Engage in activities that improve mental well-being (yoga, meditation, hobbies).</li>
<li><strong>Career Reflection</strong>: Reflect on career goals and consider potential career changes or further education.</li>
</ol>
</section>
<section id="career-management" class="level2">
<h2 class="anchored" data-anchor-id="career-management">Career Management:</h2>
<ol type="1">
<li><strong>Update Resume</strong>: Prepare and tailor your resume for job applications.</li>
<li><strong>Network with Professionals</strong>: Reach out to former bosses, colleagues, and professional networks.</li>
<li><strong>Job Hunting Schedule</strong>: Create a schedule for job search activities.</li>
<li><strong>Behavioral Interview Prep</strong>: Prepare stories that demonstrate your accomplishments and problem-solving skills.</li>
<li><strong>Identify Job Keywords</strong>: Highlight keywords from job descriptions to tailor your resume.</li>
<li><strong>Explore Job Boards</strong>: Search for interesting job listings but delay applications until your resume is optimized.</li>
</ol>
</section>
<section id="long-term-strategy" class="level2">
<h2 class="anchored" data-anchor-id="long-term-strategy">Long-term Strategy:</h2>
<ol type="1">
<li><strong>Prepare for Transition Outcomes</strong>: Be ready for any possible outcomes, including potential layoff or job offer with new entity.</li>
<li><strong>Financial and Career Goal Setting</strong>: Set clear goals for your financial stability and career direction.</li>
<li><strong>Value Alignment</strong>: Identify your values and ensure potential jobs align with them.</li>
<li><strong>Monitor Job Market</strong>: Actively search for new opportunities while negotiating with current and potential employers.</li>
<li><strong>Relocation Considerations</strong>: Explore job opportunities in different locations if current lease can be terminated.</li>
<li><strong>Self-care and Growth</strong>: Use this time for personal growth and maintaining a positive mindset.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>layoffs</category>
  <category>UKG</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-07-09-what-to-do-after-layoffs/</guid>
  <pubDate>Tue, 09 Jul 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Finetuning LLMs with Axolotl</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-05-23-first-axolotl-finetune/</link>
  <description><![CDATA[ 




<p>I started Hamel Husain’s <del>fine-tuning LLM course</del> Mastering LLM course last week. I don’t have a ton of experience fine-tuning LLMs so I thought this would be a good way to learn.</p>
<p>One of the examples he is using throughout the course is fine-tuning an LLM to generate Honeycomb queries. So you can turn natural language into a domain specific language. My goal was to reproduce the model he trained <a href="https://huggingface.co/parlance-labs/hc-mistral-alpaca">here</a>. Here are the steps I took to reproduce what Hamel did:</p>
<p>The class gave us $200 of Jarvislabs credits so I spun up a VM using the <a href="https://jarvislabs.ai/templates/axolotl">Axolotl template</a>. I picked an <del>RTX5000 with 16GB VRAM</del> 1x A100 with 100GB of disk space. The default 20GB of disk space is not enough as the base models take 5-10GB of space each.</p>
<p>I cloned the repo:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> lfs install</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://huggingface.co/parlance-labs/hc-mistral-alpaca</span></code></pre></div>
<p>I logged into Weights and Biases:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install wandb</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb</span> login</span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># paste your api key from https://wandb.ai/home</span></span></code></pre></div>
<p>I logged into Huggingface. Make sure your token has <code>WRITE</code> access:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"huggingface_hub[cli]"</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">huggingface-cli</span> login</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># paste your huggingface token from https://huggingface.co/settings/tokens</span></span></code></pre></div>
<section id="fine-tuning-with-a-smaller-sample" class="level1">
<h1>Fine-Tuning with a Smaller Sample</h1>
<p>I sampled 100 rows of his training data to make the first fine-tune go faster. The uploaded model to huggingface is <a href="https://huggingface.co/lawrencewu/hc-mistral-7B-v0.3-alpaca-first-100">here</a>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_jsonl(file_path):</span>
<span id="cb4-4">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-7">            data.append(json.loads(line.strip()))</span>
<span id="cb4-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> data</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> write_jsonl(data, file_path):</span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> entry <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data:</span>
<span id="cb4-13">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(json.dumps(entry) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to the input JSONL file</span></span>
<span id="cb4-16">input_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/alpaca_synth_queries_healed.jsonl'</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to the output JSONL file</span></span>
<span id="cb4-18">output_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/output_first_100.jsonl'</span></span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the data from the input file</span></span>
<span id="cb4-21">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_jsonl(input_file_path)</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the first 100 rows</span></span>
<span id="cb4-24">first_100_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the first 100 rows to the output file</span></span>
<span id="cb4-27">write_jsonl(first_100_rows, output_file_path)</span>
<span id="cb4-28"></span>
<span id="cb4-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"First 100 rows have been written to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>This is the Axolotl config file I wound up with below. Some changes I made: - updated the base model to <code>mistralai/Mistral-7B-v0.3</code> - used a smaller dataset <code>data/output_first_100.jsonl</code> - updated <code>hub_model_id</code> and <code>wandb_project</code> and <code>wandb_entity</code></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mistralai/Mistral-7B-v0.3</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> MistralForCausalLM</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tokenizer_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LlamaTokenizer</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_mistral_derived_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_8bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_4bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strict</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb5-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datasets</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/output_first_100.jsonl</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sharegpt</span></span>
<span id="cb5-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conversation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpaca</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset_prepared_path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> last_run_prepared</span></span>
<span id="cb5-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val_set_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb5-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./qlora-alpaca-out</span></span>
<span id="cb5-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hub_model_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lawrencewu/hc-mistral-7B-v0.3-alpaca-first-100</span></span>
<span id="cb5-22"></span>
<span id="cb5-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adapter</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> qlora</span></span>
<span id="cb5-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_model_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-25"></span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span></span>
<span id="cb5-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_packing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pad_to_sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb5-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_alpha</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_dropout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb5-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_linear</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_modules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gate_proj</span></span>
<span id="cb5-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> down_proj</span></span>
<span id="cb5-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> up_proj</span></span>
<span id="cb5-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> q_proj</span></span>
<span id="cb5-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v_proj</span></span>
<span id="cb5-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> k_proj</span></span>
<span id="cb5-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> o_proj</span></span>
<span id="cb5-43"></span>
<span id="cb5-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hc-axolotl-mistral</span></span>
<span id="cb5-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_entity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> law</span></span>
<span id="cb5-46"></span>
<span id="cb5-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_accumulation_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb5-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">micro_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">num_epochs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb5-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimizer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> adamw_bnb_8bit</span></span>
<span id="cb5-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lr_scheduler</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosine</span></span>
<span id="cb5-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">learning_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0002</span></span>
<span id="cb5-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max_grad_norm</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb5-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_beta2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb5-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_epsilon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00001</span></span>
<span id="cb5-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_total_limit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb5-58"></span>
<span id="cb5-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train_on_inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fp16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tf32</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_checkpointing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">early_stopping_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-67"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local_rank</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-69"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logging_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xformers_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flash_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb5-72"></span>
<span id="cb5-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_threshold</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span></span>
<span id="cb5-74"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb5-75"></span>
<span id="cb5-76"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warmup_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb5-77"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evals_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb5-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-79"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_max_new_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb5-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saves_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb5-81"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-82"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weight_decay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb5-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-84"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp_config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-85"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">special_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span></span>
<span id="cb5-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span></span>
<span id="cb5-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unk_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;unk&gt;"</span></span>
<span id="cb5-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_safetensors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>I launched the training script:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc-first-100.yml </span></code></pre></div>
<p>Weighs and biases provides a nice summary of the run too:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> / 0.123 MB of 0.123 MB uploaded</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Run history:</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               eval/loss █▇▁</span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>            eval/runtime ▁▅█</span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> eval/samples_per_second █▄▁</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>   eval/steps_per_second █▄▁</span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>             train/epoch ▁▁▅▅███</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>       train/global_step ▁▁▅▅███</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>         train/grad_norm ██▁</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>     train/learning_rate ▁▅█</span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>              train/loss █▁▅</span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> </span>
<span id="cb7-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Run summary:</span>
<span id="cb7-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>                eval/loss 1.08833</span>
<span id="cb7-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>             eval/runtime 1.0702</span>
<span id="cb7-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>  eval/samples_per_second 9.344</span>
<span id="cb7-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>    eval/steps_per_second 0.934</span>
<span id="cb7-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               total_flos 6965062501662720.0</span>
<span id="cb7-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>              train/epoch 2.0</span>
<span id="cb7-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>        train/global_step 3</span>
<span id="cb7-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>          train/grad_norm 2.29688</span>
<span id="cb7-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>      train/learning_rate 3e-05</span>
<span id="cb7-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               train/loss 1.2203</span>
<span id="cb7-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>               train_loss 1.22012</span>
<span id="cb7-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>            train_runtime 70.8206</span>
<span id="cb7-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> train_samples_per_second 3.812</span>
<span id="cb7-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span>   train_steps_per_second 0.042</span>
<span id="cb7-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> </span>
<span id="cb7-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> 🚀 View run scarlet-lake-4 at: https://wandb.ai/law/hc-axolotl-mistral/runs/wrnox7vk</span>
<span id="cb7-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span>
<span id="cb7-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Synced 6 W<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">B</span> file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 0 media file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 1 artifact file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">and</span> 1 other file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Find logs at: ./wandb/run-20240523_235927-wrnox7vk/logs</span></code></pre></div>
</section>
<section id="some-things-i-learned" class="level1">
<h1>Some things I learned</h1>
<section id="runtimeerror-_amp_foreach_non_finite_check_and_unscale_cuda-not-implemented-for-bfloat16" class="level2">
<h2 class="anchored" data-anchor-id="runtimeerror-_amp_foreach_non_finite_check_and_unscale_cuda-not-implemented-for-bfloat16">RuntimeError: “_amp_foreach_non_finite_check_and_unscale_cuda” not implemented for ‘BFloat16’</h2>
<p>For one run I got this error:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iciency_estimate:</span> 0.96 total_num_tokens per device: 414041</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Traceback</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">most</span> recent call last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/runpy.py"</span>, line 196, in _run_module_as_main</span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">_run_code</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">code,</span> main_globals, None,</span>
<span id="cb8-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/runpy.py"</span>, line 86, in _run_code</span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">code,</span> run_globals<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 70, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb8-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fire.Fire</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">do_cli</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 143, in Fire</span>
<span id="cb8-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component_trace</span> = _Fire<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component,</span> args, parsed_flag_args, context, name<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 477, in _Fire</span>
<span id="cb8-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component,</span> remaining_args = _CallAndUpdateTrace<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/fire/core.py"</span>, line 693, in _CallAndUpdateTrace</span>
<span id="cb8-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">component</span> = fn<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*varargs,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">**</span>kwargs<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-15">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 38, in do_cli</span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">do_train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parsed_cfg,</span> parsed_cli_args<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-17">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/cli/train.py"</span>, line 66, in do_train</span>
<span id="cb8-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cfg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cfg, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cli_args</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cli_args, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dataset_meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_meta<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-19">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/workspace/axolotl/src/axolotl/train.py"</span>, line 170, in train</span>
<span id="cb8-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trainer.train</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>resume_from_checkpoint<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-21">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/transformers/trainer.py"</span>, line 1859, in train</span>
<span id="cb8-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">inner_training_loop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-23">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/transformers/trainer.py"</span>, line 2249, in _inner_training_loop</span>
<span id="cb8-24">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">_grad_norm</span> = self.accelerator.clip_grad_norm_<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-25">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/accelerator.py"</span>, line 2269, in clip_grad_norm_</span>
<span id="cb8-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">self.unscale_gradients()</span></span>
<span id="cb8-27">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/accelerator.py"</span>, line 2219, in unscale_gradients</span>
<span id="cb8-28">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">self.scaler.unscale_</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">opt</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-29">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py"</span>, line 307, in unscale_</span>
<span id="cb8-30">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">optimizer_state</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"found_inf_per_device"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> self._unscale_grads_<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py"</span>, line 248, in _unscale_grads_</span>
<span id="cb8-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">torch._amp_foreach_non_finite_check_and_unscale_</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb8-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RuntimeError:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_amp_foreach_non_finite_check_and_unscale_cuda"</span> not implemented for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BFloat16'</span></span></code></pre></div>
<p>Setting the parameter <code>bf16: false</code> resolved this issue. Although switching from an RTX5000 GPU to a 1x A100 GPU also resolved the issue.</p>
</section>
<section id="running-out-of-gpu-memory" class="level2">
<h2 class="anchored" data-anchor-id="running-out-of-gpu-memory">Running out of GPU memory</h2>
<p>I had a run where the GPU ran out of memory.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">torch.cuda.OutOfMemoryError:</span> CUDA out of memory. Tried to allocate 784.00 MiB. GPU 0 has a total capacty of 15.74 GiB of which 58.62 MiB is free. Process 1065967 has 15.67 GiB memory in use. Of the allocated memory 13.22 GiB is allocated by PyTorch, and 2.31 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> 🚀 View run crimson-aardvark-1 at: https://wandb.ai/law/hc-axolotl-mistral/runs/itak6glk</span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Synced 6 W<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">B</span> file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 0 media file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 1 artifact file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">and</span> 1 other file<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wandb:</span> Find logs at: ./wandb/run-20240523_233643-itak6glk/logs</span>
<span id="cb9-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Traceback</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">most</span> recent call last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/bin/accelerate"</span>, line 8, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sys.exit</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">main()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py"</span>, line 46, in main</span>
<span id="cb9-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args.func</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py"</span>, line 1082, in launch_command</span>
<span id="cb9-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">simple_launcher</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py"</span>, line 688, in simple_launcher</span>
<span id="cb9-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">raise</span> subprocess.CalledProcessError<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">returncode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>process.returncode, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cmd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmd<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">subprocess.CalledProcessError:</span> Command <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'['</span>/root/miniconda3/envs/py3.10/bin/python<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>-m<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>axolotl.cli.train<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>hc-first-100.yml<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">']'</span> returned non-zero exit status 1.</span></code></pre></div>
<p>I wound up needing to use a larger GPU to finetune <code>mistralai/Mistral-7B-v0.3</code>.</p>
</section>
</section>
<section id="fine-tuning-with-the-full-dataset" class="level1">
<h1>Fine-Tuning with the full dataset</h1>
<p>The config file I used is below:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mistralai/Mistral-7B-v0.3</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> MistralForCausalLM</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tokenizer_type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LlamaTokenizer</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_mistral_derived_model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_8bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_in_4bit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strict</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datasets</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/alpaca_synth_queries_healed.jsonl</span></span>
<span id="cb10-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sharegpt</span></span>
<span id="cb10-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conversation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpaca</span></span>
<span id="cb10-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset_prepared_path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> last_run_prepared</span></span>
<span id="cb10-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val_set_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb10-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./qlora-alpaca-out</span></span>
<span id="cb10-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hub_model_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lawrencewu/hc-mistral-7B-v0.3-alpaca</span></span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adapter</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> qlora</span></span>
<span id="cb10-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_model_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-25"></span>
<span id="cb10-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span></span>
<span id="cb10-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_packing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pad_to_sequence_len</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-29"></span>
<span id="cb10-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb10-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_alpha</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_dropout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb10-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_linear</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_fan_in_fan_out</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lora_target_modules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gate_proj</span></span>
<span id="cb10-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> down_proj</span></span>
<span id="cb10-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> up_proj</span></span>
<span id="cb10-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> q_proj</span></span>
<span id="cb10-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v_proj</span></span>
<span id="cb10-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> k_proj</span></span>
<span id="cb10-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> o_proj</span></span>
<span id="cb10-43"></span>
<span id="cb10-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hc-axolotl-mistral</span></span>
<span id="cb10-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wandb_entity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> law</span></span>
<span id="cb10-46"></span>
<span id="cb10-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_accumulation_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">micro_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_batch_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">num_epochs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimizer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> adamw_bnb_8bit</span></span>
<span id="cb10-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lr_scheduler</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosine</span></span>
<span id="cb10-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">learning_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0002</span></span>
<span id="cb10-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max_grad_norm</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb10-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_beta2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb10-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adam_epsilon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00001</span></span>
<span id="cb10-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_total_limit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb10-58"></span>
<span id="cb10-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train_on_inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fp16</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tf32</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-64"></span>
<span id="cb10-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gradient_checkpointing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">early_stopping_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-67"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resume_from_checkpoint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local_rank</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-69"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logging_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xformers_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flash_attention</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb10-72"></span>
<span id="cb10-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_threshold</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span></span>
<span id="cb10-74"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loss_watchdog_patience</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-75"></span>
<span id="cb10-76"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warmup_steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb10-77"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evals_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_size</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-79"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_table_max_new_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb10-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saves_per_epoch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb10-81"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-82"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weight_decay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb10-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-84"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsdp_config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-85"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">special_tokens</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span></span>
<span id="cb10-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eos_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span></span>
<span id="cb10-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unk_token</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;unk&gt;"</span></span>
<span id="cb10-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_safetensors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>I launched a run with:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc.yml</span></code></pre></div>
<p>I didn’t finish this run because it was going to take ~30 hours.</p>
<p>The logs are here:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root@6df7cfbf0d81:~/axolotl/hc-mistral-alpaca#</span> accelerate launch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> axolotl.cli.train hc.yml</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">The</span> following values were not passed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> launch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> and had defaults used instead:</span>
<span id="cb12-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--num_processes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--num_machines</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--mixed_precision</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'no'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--dynamo_backend</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> was set to a value of <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'no'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb12-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> avoid this warning pass in values for each of the problematic parameters or run <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">accelerate</span> config<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>.</span>
<span id="cb12-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WARNING:</span> BNB_CUDA_VERSION=118 environment variable detected<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loading</span> libbitsandbytes_cuda118.so.</span>
<span id="cb12-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">This</span> can be used to load a bitsandbytes version that is different from the PyTorch CUDA version.</span>
<span id="cb12-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">If</span> this was unintended set the BNB_CUDA_VERSION variable to an empty string: export BNB_CUDA_VERSION=</span>
<span id="cb12-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">If</span> you use the manual override make sure the right libcudart.so is in your LD_LIBRARY_PATH</span>
<span id="cb12-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">For</span> example by adding the following to your .bashrc: export LD_LIBRARY_PATH=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LD_LIBRARY_PATH</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>path_to_cuda_dir/lib64</span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:01,268] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [datasets.<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>:58] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> PyTorch version 2.1.2+cu118 available.</span>
<span id="cb12-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,171] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">real_accelerator.py:203:get_accelerator</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> Setting ds_accelerator to cuda <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auto</span> detect<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,240] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">root.spawn:38</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> gcc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-pthread</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-B</span> /root/miniconda3/envs/py3.10/compiler_compat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wno-unused-result</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wsign-compare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-DNDEBUG</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fwrapv</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Wall</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-isystem</span> /root/miniconda3/envs/py3.10/include <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-isystem</span> /root/miniconda3/envs/py3.10/include <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> /tmp/tmp63g3s38_/test.c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /tmp/tmp63g3s38_/test.o</span>
<span id="cb12-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:02,258] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">root.spawn:38</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> gcc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-pthread</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-B</span> /root/miniconda3/envs/py3.10/compiler_compat /tmp/tmp63g3s38_/test.o <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-laio</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /tmp/tmp63g3s38_/a.out</span>
<span id="cb12-18"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  Please specify the CUTLASS repo directory as environment variable <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUTLASS_PATH</span></span>
<span id="cb12-19"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  sparse_attn requires a torch version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>= 1.5 and <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> 2.0 but detected 2.1</span>
<span id="cb12-20"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[WARNING]</span>  using untested triton version <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2.1.0</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> only 1.0.0 is known to be compatible</span>
<span id="cb12-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132:</span> FutureWarning: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume_download</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">force_download</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>True<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb12-22">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warnings.warn</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb12-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2024-05-24</span> 00:04:04,037] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">axolotl.normalize_config:182</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">PID:4902</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">RANK:0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> GPU memory usage baseline: 0.000GB <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+0.627GB</span> misc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-24">                                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dP</span>            dP   dP </span>
<span id="cb12-25">                                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span>            88   88 </span>
<span id="cb12-26">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.d8888b.</span> dP.  .dP .d8888b. 88 .d8888b. d8888P 88 </span>
<span id="cb12-27">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `88  `8bd8'</span>  88<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `88 88 88'</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88</span>   88   88 </span>
<span id="cb12-28">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88.</span>  .88  .d88b.  88.  .88 88 88.  .88   88   88 </span>
<span id="cb12-29">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>88888P8 dP<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'  `dP `88888P'</span> dP <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">88888P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'   dP   dP </span></span>
<span id="cb12-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                       </span></span>
<span id="cb12-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                       </span></span>
<span id="cb12-32"></span>
<span id="cb12-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">****************************************</span></span>
<span id="cb12-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">**** Axolotl Dependency Versions *****</span></span>
<span id="cb12-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  accelerate: 0.30.1         </span></span>
<span id="cb12-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        peft: 0.10.0         </span></span>
<span id="cb12-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformers: 4.40.2         </span></span>
<span id="cb12-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">         trl: 0.8.5          </span></span>
<span id="cb12-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">       torch: 2.1.2+cu118    </span></span>
<span id="cb12-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bitsandbytes: 0.43.1         </span></span>
<span id="cb12-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">****************************************</span></span>
<span id="cb12-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.</span></span>
<span id="cb12-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  warnings.warn(</span></span>
<span id="cb12-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:280] [PID:4902] [RANK:0] EOS: 2 / &lt;/s&gt;</span></span>
<span id="cb12-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:281] [PID:4902] [RANK:0] BOS: 1 / &lt;s&gt;</span></span>
<span id="cb12-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:282] [PID:4902] [RANK:0] PAD: 2 / &lt;/s&gt;</span></span>
<span id="cb12-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [DEBUG] [axolotl.load_tokenizer:283] [PID:4902] [RANK:0] UNK: 0 / &lt;unk&gt;</span></span>
<span id="cb12-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [INFO] [axolotl.load_tokenizer:294] [PID:4902] [RANK:0] No Chat template selected. Consider adding a chat template for easier inference.</span></span>
<span id="cb12-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,053] [INFO] [axolotl.load_tokenized_prepared_datasets:183] [PID:4902] [RANK:0] Unable to find prepared dataset in last_run_prepared/a1079e1609d0b7bf952979250cf0f7f4</span></span>
<span id="cb12-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,054] [INFO] [axolotl.load_tokenized_prepared_datasets:184] [PID:4902] [RANK:0] Loading raw datasets...</span></span>
<span id="cb12-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:04:05,054] [WARNING] [axolotl.load_tokenized_prepared_datasets:186] [PID:4902] [RANK:0] Processing datasets during training can lead to VRAM instability. Please pre-process your dataset.</span></span>
<span id="cb12-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Generating train split: 133501 examples [00:01, 75757.77 examples/s]</span></span>
<span id="cb12-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Tokenizing Prompts (num_proc=64): 100%|███████████████████████████████████████████| 133501/133501 [01:21&lt;00:00, 1635.33 examples/s]</span></span>
<span id="cb12-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:31,099] [INFO] [axolotl.load_tokenized_prepared_datasets:410] [PID:4902] [RANK:0] merging datasets</span></span>
<span id="cb12-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Dropping Long Sequences (num_proc=64): 100%|█████████████████████████████████████| 133501/133501 [00:10&lt;00:00, 12220.82 examples/s]</span></span>
<span id="cb12-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:43,227] [INFO] [axolotl.load_tokenized_prepared_datasets:423] [PID:4902] [RANK:0] Saving merged prepared dataset to disk... last_run_prepared/a1079e1609d0b7bf952979250cf0f7f4</span></span>
<span id="cb12-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Saving the dataset (2/2 shards): 100%|███████████████████████████████████████████| 127998/127998 [00:01&lt;00:00, 93288.97 examples/s]</span></span>
<span id="cb12-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:44,812] [DEBUG] [axolotl.calculate_total_num_steps:299] [PID:4902] [RANK:0] total_num_tokens: 70_440_026</span></span>
<span id="cb12-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,240] [DEBUG] [axolotl.calculate_total_num_steps:312] [PID:4902] [RANK:0] `total_supervised_tokens: 14_142_350`</span></span>
<span id="cb12-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,240] [DEBUG] [axolotl.calculate_total_num_steps:391] [PID:4902] [RANK:0] total_num_steps: 5400</span></span>
<span id="cb12-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,247] [DEBUG] [axolotl.train.train:56] [PID:4902] [RANK:0] loading tokenizer... mistralai/Mistral-7B-v0.3</span></span>
<span id="cb12-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:280] [PID:4902] [RANK:0] EOS: 2 / &lt;/s&gt;</span></span>
<span id="cb12-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:281] [PID:4902] [RANK:0] BOS: 1 / &lt;s&gt;</span></span>
<span id="cb12-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:282] [PID:4902] [RANK:0] PAD: 2 / &lt;/s&gt;</span></span>
<span id="cb12-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.load_tokenizer:283] [PID:4902] [RANK:0] UNK: 0 / &lt;unk&gt;</span></span>
<span id="cb12-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [INFO] [axolotl.load_tokenizer:294] [PID:4902] [RANK:0] No Chat template selected. Consider adding a chat template for easier inference.</span></span>
<span id="cb12-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:46,967] [DEBUG] [axolotl.train.train:85] [PID:4902] [RANK:0] loading model and peft_config...</span></span>
<span id="cb12-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`low_cpu_mem_usage` was None, now set to True since model is quantized.</span></span>
<span id="cb12-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Loading checkpoint shards: 100%|█████████████████████████████████████████████████████████████████████| 3/3 [00:03&lt;00:00,  1.19s/it]</span></span>
<span id="cb12-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,315] [INFO] [axolotl.load_model:734] [PID:4902] [RANK:0] GPU memory usage after model load: 4.354GB (+0.146GB cache, +1.111GB misc)</span></span>
<span id="cb12-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,326] [INFO] [axolotl.load_model:785] [PID:4902] [RANK:0] converting PEFT model w/ prepare_model_for_kbit_training</span></span>
<span id="cb12-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,330] [INFO] [axolotl.load_model:794] [PID:4902] [RANK:0] converting modules to torch.bfloat16 for flash attention</span></span>
<span id="cb12-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:53,334] [INFO] [axolotl.load_lora:951] [PID:4902] [RANK:0] found linear modules: ['</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">up_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">q_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">k_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">down_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gate_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">o_proj</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">']</span></span>
<span id="cb12-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">trainable params: 83,886,080 || all params: 7,331,909,632 || trainable%: 1.1441232122376492</span></span>
<span id="cb12-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,299] [INFO] [axolotl.load_model:843] [PID:4902] [RANK:0] GPU memory usage after adapters: 4.511GB (+1.146GB cache, +1.111GB misc)</span></span>
<span id="cb12-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,787] [INFO] [axolotl.train.train:119] [PID:4902] [RANK:0] Pre-saving adapter config to ./qlora-alpaca-out</span></span>
<span id="cb12-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:54,807] [INFO] [axolotl.train.train:156] [PID:4902] [RANK:0] Starting trainer...</span></span>
<span id="cb12-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Currently logged in as: law. Use `wandb login --relogin` to force relogin</span></span>
<span id="cb12-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Tracking run with wandb version 0.17.0</span></span>
<span id="cb12-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run data is saved locally in /home/axolotl/hc-mistral-alpaca/wandb/run-20240524_000556-iewv47f2</span></span>
<span id="cb12-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run `wandb offline` to turn off syncing.</span></span>
<span id="cb12-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Syncing run lyric-wildflower-5</span></span>
<span id="cb12-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: ⭐️ View project at https://wandb.ai/law/hc-axolotl-mistral</span></span>
<span id="cb12-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: 🚀 View run at https://wandb.ai/law/hc-axolotl-mistral/runs/iewv47f2</span></span>
<span id="cb12-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: WARNING Saving files without folders. If you want to preserve subdirectories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")</span></span>
<span id="cb12-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[2024-05-24 00:05:58,369] [INFO] [axolotl.callbacks.on_train_begin:771] [PID:4902] [RANK:0] The Axolotl config has been saved to the WandB run under files.</span></span>
<span id="cb12-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2.078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}                                                       </span></span>
<span id="cb12-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  0%|                                                                                          | 1/5400 [00:21&lt;32:33:13, 21.71s</span></span>
<span id="cb12-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 49%|█████████████████████████████████████████████▍                      </span></span>
<span id="cb12-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 50%|███████████████████████████████████████████▌                        </span></span>
<span id="cb12-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                                                         {'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1900806427001953, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_runtime</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1342.7584, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_samples_per_second</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 9.533, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">eval_steps_per_second</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.596, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}      </span></span>
<span id="cb12-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  0%|                                | 1/5400 [22:44&lt;32:33:13, 21.71s/it[2024-05-24 00:29:04,813] [INFO] [axolotl.callbacks.on_step_end:126] [PID:4902] [RANK:0] GPU memory usage while training: 4.684GB (+12.633GB cache, +1.136GB misc)</span></span>
<span id="cb12-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1821, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2.125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 2e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1561, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.9609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 3e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1569, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.3671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 4e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1285, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 5e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0089, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 6e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 7e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.7215, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 8e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0}</span></span>
<span id="cb12-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 1.0625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 9e-05, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.4603, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.8984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3983, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.6796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00011000000000000002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.363, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00012, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.7421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00013000000000000002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.244, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.73046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00014, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2493, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.478515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00015000000000000001, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2496, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.373046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00016, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2267, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.400390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00017, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00018, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.3359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.283203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0002, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1825, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.28515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999998295075366, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2323, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.27734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999993180302042, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1805, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.37109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999984655681775, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.283203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999997272121747, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1843, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2333984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999957376913195, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1804, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999938622774187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1682, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2216796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999916458806832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.01}</span></span>
<span id="cb12-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1838, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199998908850187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.149, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999861901418502, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1628, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999829508016124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1699, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999979370482261, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1719, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999754491850172, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-124"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1624, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2001953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999711869112178, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1532, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999665836623162, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999616394398821, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1893, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999563542456015, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1594, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999507280812765, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1636, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999944760948825, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1473, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2470703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999384528502826, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1527, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.25390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999318037877995, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1473, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999248137636438, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1606, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999174827801984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-134"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1549, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999909810839963, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-135"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1742, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019999017979455537, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.02}</span></span>
<span id="cb12-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.148, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999893444099703, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1534, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999884749305259, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1225, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999875713565187, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999866336882568, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1731, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2119140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998566192605988, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998465607025935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1364, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998361612119813, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1443, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999825420792309, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-144"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1725, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2080078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998143394472386, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-145"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1547, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1572265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019998029171805487, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-146"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1499, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997911539961337, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-147"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1617, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997790498980055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-148"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1443, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999766604890291, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1668, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997538189772335, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-150"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1624, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999740692163193, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-151"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1459, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997272244526456, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-152"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1433, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019997134158501837, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1284, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996992663605156, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.03}</span></span>
<span id="cb12-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1618, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996847759884661, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1454, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996699447389764, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-156"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996547726171032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-157"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1387, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996392596280206, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-158"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1362, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996234057770184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-159"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1324, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019996072110695017, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-160"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1306, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995906755109933, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-161"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995737991071314, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-162"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1264, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1591796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995565818636707, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-163"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995390237864818, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-164"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1376, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019995211248815517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-165"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1344, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999502885154984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-166"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994843046129977, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-167"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1627, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994653832619292, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-168"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1353, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994461211082296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-169"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.132, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994265181584676, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1356, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019994065744193272, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-171"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1466, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999386289897609, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-172"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1259, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993656646002296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.04}</span></span>
<span id="cb12-173"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1346, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993446985342223, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-174"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1388, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993233917067358, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-175"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1427, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019993017441250356, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-176"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1246, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999279755796503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-177"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1381, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019992574267286358, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-178"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999234756929048, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-179"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019992117464054696, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-180"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019991883951657466, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-181"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1329, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999164703217842, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-182"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1249, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019991406705698338, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-183"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1215, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.154296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001999116297229917, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-184"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1354, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990915832064025, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-185"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1266, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990665285077178, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-186"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1155, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990411331424052, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-187"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1454, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019990153971191253, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-188"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1322, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989893204466527, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-189"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199896290313388, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.05}</span></span>
<span id="cb12-190"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1085, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989361451898144, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-191"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1441, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.146484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019989090466235806, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-192"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.114, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019988816074444183, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-193"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1252, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1455078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998853827661684, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-194"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1251, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019988257072848503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-195"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987972463235057, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-196"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1249, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987684447873548, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-197"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998739302686219, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-198"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019987098200300349, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-199"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.117, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019986799968288557, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-200"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1239, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1533203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019986498330928508, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-201"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1643, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998619328832305, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-202"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1051, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.134765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998588484057621, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-203"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1148, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998557298779315, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-204"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1135, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.162109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019985257730080217, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-205"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984939067544907, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-206"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.205078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984617000295876, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-207"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1103, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1416015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019984291528442945, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.06}</span></span>
<span id="cb12-208"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1076, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199839626520971, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-209"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.123, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019983630371370477, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-210"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1194, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019983294686376382, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-211"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1164, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982955597229275, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-212"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1089, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982613104044784, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-213"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1328, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019982267206939693, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-214"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981917906031947, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-215"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1077, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981565201440652, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-216"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1324, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019981209093286077, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-217"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1138, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1494140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019980849581689646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-218"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1062, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001998048666677395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-219"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1464, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1923828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019980120348662736, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-220"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1184, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979750627480914, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-221"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.113, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979377503354554, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-222"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1406, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019979000976410886, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-223"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1111, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019978621046778296, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-224"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1007, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997823771458634, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-225"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1047, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977850979965723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-226"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1217, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1455078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977460843048316, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.07}</span></span>
<span id="cb12-227"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1105, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1552734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019977067303967154, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-228"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1111, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019976670362856428, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-229"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1297, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.142578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019976270019851484, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-230"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0978, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1513671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019975866275088837, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-231"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1056, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1396484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019975459128706156, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-232"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.116, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1474609375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997504858084227, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-233"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1197, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019974634631637173, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-234"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019974217281232019, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-235"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1131, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2216796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019973796529769108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-236"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1186, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997337237739192, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-237"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1044, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972944824245078, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-238"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1091, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972513870474375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-239"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1098, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.185546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019972079516226754, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-240"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0996, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997164176165033, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-241"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.150390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001997120060689437, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-242"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1075, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019970756052109295, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-243"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.112, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019970308097446698, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.08}</span></span>
<span id="cb12-244"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1435546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996985674305932, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-245"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996940198910107, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-246"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1015, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1787109375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968943835727013, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-247"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1123, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968482283093367, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-248"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.106, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019968017331357517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-249"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019967548980678008, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-250"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1166, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019967077231214535, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-251"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0998, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1708984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996660208312796, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-252"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0926, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019966123536580303, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-253"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019965641591734737, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-254"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0894, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019965156248755606, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-255"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.139, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.189453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019964667507808395, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-256"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1024, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.20703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019964175369059764, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-257"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1251, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019963679832677518, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-258"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.124, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019963180898830633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-259"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1109, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996267856768924, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-260"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0973, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996217283942462, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-261"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1159, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996166371420922, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.09}</span></span>
<span id="cb12-262"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1231, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001996115119221665, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-263"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0957, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2373046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019960635273621666, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-264"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1082, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019960115958600193, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-265"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1012, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019959593247329305, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-266"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995906713998724, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-267"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0988, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019958537636753393, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-268"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0922, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2451171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019958004737808318, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-269"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1051, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019957468443333723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-270"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995692875351248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-271"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1081, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019956385668528612, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-272"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0972, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.18359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019955839188567307, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-273"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199552893138149, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-274"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0851, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019954736044458892, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-275"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0979, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019954179380687946, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-276"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0904, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019953619322691865, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-277"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0865, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16796875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019953055870661627, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-278"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0862, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019952489024789363, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-279"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.201171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019951918785268352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-280"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1136, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995134515229304, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1}</span></span>
<span id="cb12-281"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0864, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001995076812605903, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-282"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0912, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019950187706763078, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-283"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1108, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019949603894603096, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-284"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0828, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019949016689778157, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-285"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0886, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1767578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019948426092488488, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-286"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0986, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2119140625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019947832102935474, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-287"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0855, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.20703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019947234721321658, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-288"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.092, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019946633947850738, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-289"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0766, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1611328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994602978272756, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-290"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1023, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.166015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994542222615815, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-291"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0769, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019944811278349667, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-292"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1332, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.208984375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019944196939510435, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-293"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994357920984994, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-294"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0977, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994295808957881, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-295"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0902, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001994233357890884, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-296"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019941705678052984, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-297"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0833, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019941074387225344, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.11}</span></span>
<span id="cb12-298"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0999, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1865234375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019940439706641176, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-299"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1172, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019939801636516903, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-300"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0768, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019939160177070094, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-301"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1099, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993851532851948, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-302"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1244, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993786709108494, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-303"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1133, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019937215464987514, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-304"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0935, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019936560450449403, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-305"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2353515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019935902047693948, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-306"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0775, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993524025694566, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-307"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.092, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.185546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199345750784302, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-308"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1121, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1904296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001993390651237438, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-309"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0827, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1826171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019933234559006176, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-310"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0652, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019932559218554708, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-311"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0792, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2001953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019931880491250262, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-312"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0869, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.197265625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019931198377324272, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-313"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0849, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019930512877009327, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-314"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1043, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019929823990539174, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-315"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0628, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1533203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019929131718148714, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-316"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1013, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019928436060073998, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.12}</span></span>
<span id="cb12-317"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0878, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992773701655224, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-318"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0823, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019927034587821795, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-319"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.084, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992632877412219, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-320"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0913, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019925619575694094, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-321"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0853, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2021484375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992490699277933, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-322"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1982421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019924191025620877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-323"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0963, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.236328125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019923471674462875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-324"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0707, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001992274893955061, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-325"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0704, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2158203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019922022821130517, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-326"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0637, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199212933194502, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-327"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0749, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.205078125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019920560434758406, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-328"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0842, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2421875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019919824167305035, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-329"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0794, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019919084517341145, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-330"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0816, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019918341485118942, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-331"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0912, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019917595070891798, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-332"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1035, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001991684527491422, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-333"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0785, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019916092097441878, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.13}</span></span>
<span id="cb12-334"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0704, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.000199153355387316, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-335"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1205, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019914575599041352, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-336"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0902, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1748046875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019913812278630274, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-337"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0841, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019913045577758633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-338"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1027, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1904296875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019912275496687874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-339"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0851, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001991150203568058, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-340"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0725, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.263671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019910725195000485, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-341"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.081, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990994497491248, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-342"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0643, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.181640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019909161375682616, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-343"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2138671875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019908374397578082, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-344"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0708, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.169921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990758404086723, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-345"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.067, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1728515625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019906790305819553, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-346"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0874, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.21875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990599319270571, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-347"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0639, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1689453125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019905192701797503, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-348"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0857, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1923828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019904388833367882, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-349"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0855, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990358158769096, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-350"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0867, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1884765625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019902770965041992, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-351"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0866, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2060546875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019901956965697387, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-352"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0941, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1953125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019901139589934713, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.14}</span></span>
<span id="cb12-353"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0755, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1806640625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001990031883803268, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-354"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0792, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.18359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989949471027115, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-355"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989866720693114, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-356"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0646, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1845703125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989783632829481, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-357"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1032, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019897002074645485, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-358"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0795, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.17578125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019896164446267633, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-359"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.052, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.173828125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019895323443446867, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-360"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.072, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.193359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989447906646996, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-361"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0774, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989363131562483, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-362"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0684, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2255859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989278019120055, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-363"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0632, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019891925693487337, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-364"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0689, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019891067822776565, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-365"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0703, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.2041015625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001989020657936075, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-366"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0784, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988934196353357, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-367"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.203125, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019888473975589844, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-368"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0645, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1630859375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988760261582554, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-369"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0749, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019886727884537778, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-370"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0877, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019885849782024832, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.15}</span></span>
<span id="cb12-371"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0722, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988496830858612, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-372"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0981, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1943359375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019884083464522212, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-373"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0957, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1962890625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019883195250134823, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-374"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0924, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.201171875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019882303665726828, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-375"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0593, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1669921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988140871160223, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-376"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0666, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.1650390625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001988051038806621, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}</span></span>
<span id="cb12-377"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0799, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.177734375, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0001987960869542508, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}                </span></span>
<span id="cb12-378"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">loss</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.0625, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grad_norm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.19921875, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">learning_rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.00019878703633986294, '</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">epoch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">': 0.16}                </span></span>
<span id="cb12-379"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  5%|███▌                                                                | 287/5400 [2:07:55&lt;31:19:58, 22.06s/it]^CTraceback (most recent call last):</span></span>
<span id="cb12-380"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/bin/accelerate", line 8, in &lt;module&gt;</span></span>
<span id="cb12-381"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    sys.exit(main())</span></span>
<span id="cb12-382"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py", line 46, in main</span></span>
<span id="cb12-383"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    args.func(args)</span></span>
<span id="cb12-384"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py", line 1082, in launch_command</span></span>
<span id="cb12-385"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    simple_launcher(args)</span></span>
<span id="cb12-386"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/site-packages/accelerate/commands/launch.py", line 685, in simple_launcher</span></span>
<span id="cb12-387"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    process.wait()</span></span>
<span id="cb12-388"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1209, in wait</span></span>
<span id="cb12-389"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    return self._wait(timeout=timeout)</span></span>
<span id="cb12-390"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1959, in _wait</span></span>
<span id="cb12-391"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    (pid, sts) = self._try_wait(0)</span></span>
<span id="cb12-392"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  File "/root/miniconda3/envs/py3.10/lib/python3.10/subprocess.py", line 1917, in _try_wait</span></span>
<span id="cb12-393"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    (pid, sts) = os.waitpid(self.pid, wait_flags)</span></span>
<span id="cb12-394"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">KeyboardInterrupt</span></span>
<span id="cb12-395"></span>
<span id="cb12-396"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">root@6df7cfbf0d81:~/axolotl/hc-mistral-alpaca# /root/miniconda3/envs/py3.10/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.</span></span>
<span id="cb12-397"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  warnings.warn(</span></span>
<span id="cb12-398"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  5%|███▌                                                                | 287/5400 [2:08:21&lt;38:06:49, 26.84s/it]</span></span>
<span id="cb12-399"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">^Cndb: - 0.011 MB of 0.011 MB uploaded</span></span>
<span id="cb12-400"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: / 0.054 MB of 0.054 MB uploaded-alpaca# wandb: \ 0.011 MB of 0.054 MB uploaded</span></span>
<span id="cb12-401"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run history:</span></span>
<span id="cb12-402"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:               eval/loss ▁</span></span>
<span id="cb12-403"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:            eval/runtime ▁</span></span>
<span id="cb12-404"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: eval/samples_per_second ▁</span></span>
<span id="cb12-405"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:   eval/steps_per_second ▁</span></span>
<span id="cb12-406"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:             train/epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</span></span>
<span id="cb12-407"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:       train/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</span></span>
<span id="cb12-408"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:         train/grad_norm █▆▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁</span></span>
<span id="cb12-409"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:     train/learning_rate ▁▃▆█████████████████████████████████████</span></span>
<span id="cb12-410"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:              train/loss █▅▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</span></span>
<span id="cb12-411"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: </span></span>
<span id="cb12-412"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Run summary:</span></span>
<span id="cb12-413"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:               eval/loss 1.19008</span></span>
<span id="cb12-414"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:            eval/runtime 1342.7584</span></span>
<span id="cb12-415"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: eval/samples_per_second 9.533</span></span>
<span id="cb12-416"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:   eval/steps_per_second 0.596</span></span>
<span id="cb12-417"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:             train/epoch 0.15944</span></span>
<span id="cb12-418"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:       train/global_step 287</span></span>
<span id="cb12-419"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:         train/grad_norm 0.19922</span></span>
<span id="cb12-420"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:     train/learning_rate 0.0002</span></span>
<span id="cb12-421"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb:              train/loss 0.0625</span></span>
<span id="cb12-422"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: </span></span>
<span id="cb12-423"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: 🚀 View run lyric-wildflower-5 at: https://wandb.ai/law/hc-axolotl-mistral/runs/iewv47f2</span></span>
<span id="cb12-424"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: ⭐️ View project at: https://wandb.ai/law/hc-axolotl-mistral</span></span>
<span id="cb12-425"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Synced 6 W&amp;B file(s), 0 media file(s), 1 artifact file(s) and 1 other file(s)</span></span>
<span id="cb12-426"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">wandb: Find logs at: ./wandb/run-20240524_000556-iewv47f2/logs</span></span></code></pre></div>


</section>

 ]]></description>
  <category>LLMs</category>
  <category>Fine-tune</category>
  <category>Axolotl</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-05-23-first-axolotl-finetune/</guid>
  <pubDate>Thu, 23 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Dario Amodei &amp; Elad Gil</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/</link>
  <description><![CDATA[ 




<p>At Google Cloud Next 2024, Elad Gil interviewed Dario Amodei, the CEO of Anthropic. I recorded the talk (really bad audio) and transcribed it using a whisper (small-en) model. I passed the transcription to Claude 3 (Haiku), Gemini Pro 1.5 and GPT-4 to summarize it with this prompt:</p>
<blockquote class="blockquote">
<p>This is a podcast transcript for your CEO Dario Amodei being interviewed by Elad Gil. Can you 1) summarize the main takeaways and important points made and below that 2) extract all of the questions and a summary of his answer?</p>
</blockquote>
<p>The results are generally pretty good. My qualitative assessment is Gemini Pro 1.5 did the best. GPT-4 was second best. Claude 3 Haiku did a decent job which is not really a fair comparison since Haiku is likely a much smaller model than the previous 2. Google has done a good job with their user interface with the markdown toggle as nice touch. One of the best features of Anthropic is how pasted text is distinct from the user entered text in the prompt which is nice from a UI perspective but also likely helps the LLM know what text it is to operate on.</p>
<section id="gemini-pro-1.5" class="level1">
<h1>Gemini Pro 1.5</h1>
<ul>
<li>Google’s gemini-pro-1.5 does the best job of summarizing the main takeaways</li>
<li>It actually gets every question (Claude 3’s Haiku only returned 8 questions)</li>
<li>It corrected spelling errors in the transcription</li>
<li>There’s a toggle to show the raw markdown (which is really nice!)</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/gemini-pro-1.5.png" class="img-fluid figure-img"></p>
<figcaption>Gemini Pro 1.5</figcaption>
</figure>
</div>
<section id="summary-of-main-takeaways-and-important-points" class="level2">
<h2 class="anchored" data-anchor-id="summary-of-main-takeaways-and-important-points">Summary of Main Takeaways and Important Points:</h2>
<ul>
<li><strong>Anthropic’s focus on personality and engagement in language models:</strong> Anthropic emphasizes the importance of not only reasoning capabilities but also personality, engagement, and natural conversation flow in their language models. This is evident in the development of Claude 3, with its focus on being warm and human-like in interactions.</li>
<li><strong>The Claude family of models caters to diverse needs:</strong> Anthropic offers a range of models with different sizes and capabilities to meet the varying requirements of enterprises. Claude Instant is fast and affordable, Claude is a good all-rounder, and Claude+ excels in complex tasks requiring high accuracy.</li>
<li><strong>The cost of training AI models is decreasing but spending is increasing:</strong> While the cost of training AI models is decreasing due to advancements in hardware and algorithms, the economic value of these models is driving an exponential increase in overall spending on training.</li>
<li><strong>Future capabilities of AI models:</strong> Anthropic predicts significant advancements in AI capabilities, including improved intelligence through scaling, multi-modality (incorporating video, audio, and real-world interaction), reduced hallucinations, and the development of agents that can act autonomously in the world.</li>
<li><strong>Growing enterprise use cases:</strong> AI models are finding increasing application in various sectors such as coding, healthcare, biomedicine, finance, legal, and consumer applications.</li>
<li><strong>Challenges in enterprise adoption:</strong> Obstacles to wider enterprise adoption of AI include the complexity of understanding and controlling models, the need for effective prompt engineering, and the gap between demos and real-world deployment.</li>
<li><strong>Anthropic’s commitment to safety and reliability:</strong> Anthropic prioritizes safety and reliability in AI development, focusing on reducing hallucinations, preventing jailbreaking, and ensuring models are helpful, honest, and harmless.</li>
<li><strong>Potential risks of AI:</strong> Short-term risks include bias, misinformation, and misuse in critical decision-making. Long-term risks encompass autonomous AI actions that could lead to unintended consequences or misuse with malicious intent.</li>
<li><strong>Exciting opportunities for AI:</strong> AI holds immense potential to revolutionize fields like healthcare and education, offering personalized tutoring, accelerating scientific research, and improving access to information and resources globally.</li>
<li><strong>Anthropic’s vision for the future:</strong> Anthropic aims to develop AI models that act as co-workers, seamlessly integrating with enterprise systems and data to enhance productivity and decision-making. They also strive to set an example for responsible AI development and collaboration within the industry to address challenges and ensure the technology benefits everyone.</li>
</ul>
</section>
<section id="questions-and-answers" class="level2">
<h2 class="anchored" data-anchor-id="questions-and-answers">Questions and Answers:</h2>
<p><strong>Question 1:</strong> What are the key features of Claude 3 and the Claude family of models?</p>
<p><strong>Answer:</strong> Claude 3 prioritizes personality and engagement, making it more natural and enjoyable to interact with. The Claude family offers models with varying sizes and capabilities, from the fast and affordable Claude Instant to the powerful and accurate Claude+.</p>
<p><strong>Question 2:</strong> How is the cost of training AI models evolving?</p>
<p><strong>Answer:</strong> While the cost per flop is decreasing due to hardware and algorithmic improvements, the overall spending on training is increasing due to the growing scale and economic value of AI models.</p>
<p><strong>Question 3:</strong> What future capabilities do you foresee in AI models?</p>
<p><strong>Answer:</strong> We expect advancements in intelligence through scaling, multi-modality, reduced hallucinations, and the development of autonomous agents.</p>
<p><strong>Question 4:</strong> What are the challenges in enterprise adoption of AI?</p>
<p><strong>Answer:</strong> Challenges include understanding and controlling models, effective prompt engineering, and bridging the gap between demos and real-world deployment.</p>
<p><strong>Question 5:</strong> How does Anthropic approach safety and reliability in AI?</p>
<p><strong>Answer:</strong> We prioritize safety and reliability by focusing on reducing hallucinations, preventing jailbreaking, and ensuring models are helpful, honest, and harmless.</p>
<p><strong>Question 6:</strong> What are the potential risks of AI?</p>
<p><strong>Answer:</strong> Short-term risks include bias, misinformation, and misuse in critical decision-making. Long-term risks involve autonomous AI actions with unintended consequences or malicious intent.</p>
<p><strong>Question 7:</strong> What excites you about the opportunities presented by AI?</p>
<p><strong>Answer:</strong> AI has the potential to revolutionize healthcare, education, and access to information, offering personalized learning, accelerating research, and benefiting people globally.</p>
<p><strong>Question 8:</strong> How will Anthropic engage with consumer partners?</p>
<p><strong>Answer:</strong> While our focus is on enterprise solutions, the general-purpose nature of our models makes them suitable for consumers who seek productivity and information access.</p>
<p><strong>Question 9:</strong> How do you view the role of reasoning modules and memory in AI development?</p>
<p><strong>Answer:</strong> Memory capabilities are advancing through larger context windows and RAG techniques. Reasoning abilities improve with model scale and are not a binary concept but rather a continuous spectrum of improvement.</p>
<p><strong>Question 10:</strong> What is Anthropic’s long-term vision?</p>
<p><strong>Answer:</strong> We aim to create AI models that act as co-workers, integrating with enterprise systems and data. We also strive to lead in responsible AI development and industry collaboration to address challenges and ensure the technology benefits everyone.</p>
</section>
</section>
<section id="gpt-4" class="level1">
<h1>GPT-4</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/gpt4.png" class="img-fluid figure-img"></p>
<figcaption>GPT4</figcaption>
</figure>
</div>
<section id="main-takeaways-and-important-points" class="level2">
<h2 class="anchored" data-anchor-id="main-takeaways-and-important-points">Main Takeaways and Important Points:</h2>
<ol type="1">
<li><p><strong>Launch and Impact of Pod Three</strong>: Dario begins by discussing the release of Pod Three, emphasizing improvements in the model’s personality and engagement. He outlines the diversity in the Pod family of models, designed to cater to various enterprise needs, from heavy computational tasks to faster, cost-effective solutions.</p></li>
<li><p><strong>Advancements in AI Performance and Cost</strong>: A significant focus is placed on the exponential growth in AI, where despite the decreasing costs of training models, overall spending is increasing due to the economic value of AI technologies.</p></li>
<li><p><strong>Future Directions and Capabilities</strong>: Dario predicts further scale in model capabilities, including specialized tasks and the introduction of multi-modality inputs like images, videos, and potentially interactive interfaces with robotics.</p></li>
<li><p><strong>Enterprise Adoption and Use Cases</strong>: The discussion shifts to how enterprises are leveraging AI, with specific mentions of coding, healthcare, financial, and consumer internet applications seeing significant benefits from recent advancements.</p></li>
<li><p><strong>Obstacles to Enterprise Adoption</strong>: The challenges in enterprise adoption of AI technologies are highlighted, including the need for better understanding and utilization of models through prompt engineering and building infrastructure to support AI applications effectively.</p></li>
<li><p><strong>Safety and Reliability</strong>: Dario emphasizes the importance of safety and reliability in AI models, sharing Anthropic’s focus on making conversational agents helpful, honest, and harmless to ensure trust and prevent misuse.</p></li>
<li><p><strong>Risks and Future Concerns</strong>: Short-term and long-term risks associated with AI are discussed, with short-term risks revolving around model bias and reliability in critical applications, and long-term concerns about misuse for harmful purposes.</p></li>
<li><p><strong>Potential for Global Impact</strong>: The conversation concludes with a hopeful outlook on AI’s potential to revolutionize global health, education, and access to information, particularly in underserved regions, while also stressing the need for the industry to manage the risks associated with rapid technological advancement.</p></li>
</ol>
</section>
<section id="extracted-questions-and-summary-of-answers" class="level2">
<h2 class="anchored" data-anchor-id="extracted-questions-and-summary-of-answers">Extracted Questions and Summary of Answers:</h2>
<ol type="1">
<li><p><strong>Pod Three’s Impact and Applications</strong>: Dario highlights the focus on improving the personality and engagement of the Pod Three model and introduces the family of models designed to cater to various performance and cost requirements.</p></li>
<li><p><strong>AI Performance vs.&nbsp;Cost Dynamics</strong>: He discusses the trends in AI training and inference costs, predicting significant decreases in costs but also an increase in overall spending due to the economic value of advanced models.</p></li>
<li><p><strong>Future Capabilities and Model Evolution</strong>: Dario anticipates further advancements in AI capabilities, including task specialization, multi-modality, and efforts to reduce hallucinations in model outputs, as well as the development of more autonomous AI agents.</p></li>
<li><p><strong>Enterprise Use Cases and Adoption</strong>: The discussion covers various enterprise applications benefiting from AI, such as coding, healthcare, and consumer internet, and touches on the segmentation of enterprise AI strategy.</p></li>
<li><p><strong>Challenges in Enterprise Adoption</strong>: He addresses the knowledge gap in utilizing AI models effectively and the distinction between demos and real-world deployment, emphasizing the importance of prompt engineering and infrastructure support.</p></li>
<li><p><strong>Safety and Reliability Focus</strong>: Dario underscores Anthropic’s commitment to safety and reliability, detailing efforts to reduce model hallucinations and ensure models adhere to principles of being helpful, honest, and harmless.</p></li>
<li><p><strong>AI Risks and Management</strong>: He distinguishes between short-term and long-term risks associated with AI, highlighting immediate concerns like bias and reliability in critical applications and future risks related to misuse and autonomy.</p></li>
<li><p><strong>AI’s Global Impact and Accessibility</strong>: The potential for AI to revolutionize access to education and health services globally is discussed, with a focus on ensuring technology benefits are widely distributed.</p></li>
<li><p><strong>Consumer Engagement with AI</strong>: Although Anthropic is more enterprise-focused, Dario mentions that strong AI models naturally have consumer applications, particularly in productivity and educational contexts.</p></li>
<li><p><strong>Memory and Reasoning in AI Development</strong>: He elaborates on the importance of memory and reasoning for AI models, explaining ongoing efforts to improve these aspects through scale and specialized training techniques.</p></li>
<li><p><strong>Long-term Vision for Anthropic</strong>: Dario shares his vision for Anthropic’s role in fostering AI as a coworker and collaborator, contributing to solving complex global challenges while managing the rapid technological advancements and associated risks responsibly.</p></li>
</ol>
</section>
</section>
<section id="claude-3---haiku" class="level1">
<h1>Claude 3 - Haiku</h1>
<p>Some of the issues are coming from whisper mis-transcribing “Haiku” as “Iqou”, “Sonnet” as “Sonic” etc. If every conference talk had this type of summary, that would be so valuable.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/claude3.png" class="img-fluid figure-img"></p>
<figcaption>Claude 3 Output</figcaption>
</figure>
</div>
<p>Claude 3’s full answer below (had to do some formatting though because the bullets/numbering didn’t copy over to Quarto and it wasn’t following my instructions to produce markdown):</p>
<section id="main-takeaways-and-important-points-1" class="level2">
<h2 class="anchored" data-anchor-id="main-takeaways-and-important-points-1">Main Takeaways and Important Points:</h2>
<ul>
<li>Anthropic has been focused on developing more engaging and personality-driven language models, with the latest Pod 3 models being a key focus area.</li>
<li>Anthropic is offering a family of models (Opus, Sonic, and Iqou) to cater to different enterprise needs in terms of accuracy, speed, and cost.</li>
<li>Anthropic is seeing increasing enterprise adoption of their models across various use cases like coding, healthcare, finance, and consumer applications.</li>
<li>Enterprises are exploring three main use cases for AI: internal operational efficiency, customer-facing applications, and embedded product features.</li>
<li>Key challenges for enterprise adoption include uncertainty about model capabilities, reliability, and the need for supporting infrastructure like security and safety measures.</li>
<li>Anthropic is partnering with GCP to provide a secure and reliable platform for deploying their models in enterprise settings.</li>
<li>Anthropic is excited about the potential of language models to accelerate progress in areas like healthcare, biology, and education, but also cautious about the risks as models become more autonomous and capable. Anthropic’s long-term vision is for their models to act as “coworkers” that can be deeply integrated with enterprise systems and data to enhance productivity and decision-making.</li>
</ul>
</section>
<section id="questions-and-answers-1" class="level2">
<h2 class="anchored" data-anchor-id="questions-and-answers-1">Questions and Answers:</h2>
<p><strong>What are the key features and capabilities of the Pod 3 models?</strong></p>
<p>Focus on improving the personality and engagement of the models, as well as offering a family of models (Opus, Sonic, Iqou) with different trade-offs in terms of accuracy, speed, and cost.</p>
<p><strong>How is Anthropic thinking about the cost and performance improvements in training and inference for their models?</strong></p>
<p>Anthropic is seeing exponential improvements in cost-performance, with 1.5-2x annual decreases in the cost of compute and algorithmic improvements, but overall spending on training is still increasing due to the high value of these models.</p>
<p><strong>What are the key enterprise use cases Anthropic is seeing for their models?</strong> Coding, healthcare, finance, and consumer internet applications are some of the key areas where enterprises are adopting Anthropic’s models.</p>
<p><strong>How are enterprises thinking about using AI in terms of internal tools, customer-facing applications, and embedding in products?</strong></p>
<p>Enterprises are exploring all three of these use cases, with the type of model used varying based on the specific needs (e.g., smaller models for customer-facing, larger models for internal analysis).</p>
<p><strong>What are some of the key obstacles Anthropic sees for enterprise adoption of AI models?</strong></p>
<p>Uncertainty about model capabilities, reliability, and the need for supporting infrastructure like security and safety measures.</p>
<p><strong>How is Anthropic approaching safety and reliability in the context of their models?</strong></p>
<p>Anthropic has a strong focus on reducing model mistakes and biases, and is working to build the necessary infrastructure (e.g., with GCP) to enable secure and reliable deployment of their models.</p>
<p><strong>What are Anthropic’s thoughts on the potential of AI to accelerate progress in areas like healthcare and biology?</strong></p>
<p>Anthropic is excited about the potential for AI to help overcome the limitations of human cognition and accelerate breakthroughs in complex domains like biology and medicine.</p>
<p><strong>How is Anthropic thinking about the longer-term evolution of AI models, including the role of agents and autonomous systems?</strong></p>
<p>Anthropic envisions a future where their models can act as “coworkers” that are deeply integrated with enterprise systems and data to enhance productivity and decision-making, but also acknowledges the challenges and risks that come with increasingly autonomous AI systems.</p>


</section>
</section>

 ]]></description>
  <category>Anthropic</category>
  <category>LLMs</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-04-10-dario-amodei-elad-gil/</guid>
  <pubDate>Wed, 10 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>AI Impact on Jobs</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/</link>
  <description><![CDATA[ 




<p>Andrew Ng gave a talk recently on <a href="https://www.youtube.com/watch?v=-mIjwN1o7nE">AI’s Potential Effect on the Labor Force</a>. Here’s the transcript of the <a href="https://lawwu.github.io/transcripts/transcript_-mIjwN1o7nE.html">video</a>.</p>
<p>I used Claude 3 (Sonnet) to pull out the “main ways that AI will affect the labor force”?</p>
<p>According to Andrew Ng, there are a few main ways AI will impact the workforce over the next 5 years:</p>
<ul>
<li>Massive productivity boost for existing job roles and creation of many new job roles related to AI.</li>
<li>Some job loss, but potentially not as bad as people fear. He suggests thinking about AI automating specific tasks within jobs rather than entire jobs being automated.</li>
<li>For many jobs, if AI automates 20-30% of the tasks, the job may still be reasonably safe, though people using AI will likely replace those who don’t use AI tools.</li>
<li>He sees customer service roles like call centers and sales operations being among the most disrupted and automated by AI in the near-term.</li>
<li>Knowledge workers can get an immediate productivity boost from using AI tools like generative AI, but some reskilling and training is needed to use AI responsibly.</li>
<li>While acknowledging there will be some job displacement, Ng seems optimistic that the productivity gains from AI will create new opportunities as well, similar to past technological transitions. He encourages being proactive in managing this transition well.</li>
</ul>
<p>Andrew Ng identified customer service jobs and sales operations jobs as most at risk of being automated. Klarna had news last week where they have developed a customer service AI powered by OpenAI that already handles two-thirds of Klarna’s customer service chats, generating an estimated $40M in profit. See the statistics below for the comparisons:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/klarna.png" class="img-fluid figure-img"></p>
<figcaption>Klarna</figcaption>
</figure>
</div>
<p>Teleperformance is a French company that runs call centers, lost 20% of their marketcap or $1.7B of value the moment Klarna made the above announcement.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/teleperformance.png" class="img-fluid figure-img"></p>
<figcaption>Teleperformance</figcaption>
</figure>
</div>
<p>They lost an additional 20% of their market cap yesterday when they released earnings. It’s staggering this one organization has lost 40% of their value over the past month. I imagine this will continue to play out as AI continues to make it’s way through automating different tasks and different functions. The hope is these call center workers at Klarna and other companies will be able to re-skill and find other opportunities.</p>



 ]]></description>
  <category>LLMs</category>
  <category>Jobs</category>
  <category>Work</category>
  <category>AI</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-03-08-ai-impact-on-jobs/</guid>
  <pubDate>Fri, 08 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Ode to Costco</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-02-28-ode-to-costco/</link>
  <description><![CDATA[ 




<p>I’ve been a fan of Costco for many years. Charlie Munger <a href="https://finance.yahoo.com/news/charlie-munger-obsessed-costco-heres-035148471.html">famously loved Costco too</a>. I still remember growing up and going to Price Club with my mom or dad and seeing them write checks because they didn’t accept credit cards yet. There are many reasons to love Costco. It’s honestly one of my favorite places to shop. Some of my favorite things are in no particular order:</p>
<ul>
<li>Great buyers who do an incredible job selecting products</li>
<li>Employees who seem to love their jobs and draw happy faces on receipts for kids</li>
<li>Free samples</li>
<li>Gasoline that is typically 25-45 cents cheaper per gallon</li>
<li>$5 Rotisserie Chicken</li>
<li>$1.50 Hot dog + Soda</li>
<li>$9.99 full size pizza</li>
<li>Great value on bulk items on goods like diapers, toilet paper, paper towels, etc.</li>
<li>Generous return policy - even for Apple products this goes up to 90 days</li>
<li>Cheapest place to get glasses and lenses</li>
<li>Microwavable bacon</li>
<li>Whole Brisket (Prime/Choice that is typically around $4/lb)</li>
<li>Up to 7.25% cash back on all spend: Using a BofA credit card + BofA Preferred Rewards status + as a Costco Executive Membership, you can earn 5.25% cash back using Costco Shop Cards. Details in this <a href="https://frugalprofessor.com/best-credit-card-rewards-strategy-2019-edition/">post</a>. He also has his own post on <a href="https://frugalprofessor.com/how-to-shop-at-costco-like-a-boss/">how to shop at Costco like a boss</a>.</li>
<li>Milk that has absurdly long expired-by dates</li>
<li><del>Photo Prints</del> - It used to be the cheapest place to get photo prints but they’ve since discontinued the business</li>
</ul>
<p>I recently learned about the Acquired podcast from Cal Newport’s post, <a href="https://calnewport.com/how-the-acquired-podcast-became-a-sensation/">How the Acquired Podcast Became a Sensation</a>. They do long deep dives into business. One of their recent episodes was a <a href="https://www.acquired.fm/episodes/costco">3-hour dive into all things Costco</a>, the history of the company ad how it traces it’s roots into the people behind Fedmart and Price Club. After listening to the episode, I now appreciate Costco as a business even more. One of the biggest learnings was Costco capping their gross margins at 14%! This means they are intentionally leaving profits on the table to provide more value to their members! From the episode:</p>
<blockquote class="blockquote">
<p>And because of Costco’s gross margins always being targeted at 11% capped at 14%, this means that for every dollar that Costco gets a supplier to reduce the price on something—again, tough but fair—the customer actually sees most 89% of the benefit. Costco really does just get to pass whenever they get a benefit, 89% of that benefit goes to the member.</p>
</blockquote>
<blockquote class="blockquote">
<p>The way I look at this is some companies always look for ways to make more margin. Costco specifically does the opposite. They look for ways to provide more value to members, retain them for members as longer, and get them to get their friends to be members. They try hard across the board to get lower overhead costs through cleverness and efficiency, not through squeezing, underpaying, or anything like that.</p>
</blockquote>
<p>Based on the episode, here are 33 reasons why Costco is considered an extraordinary business:</p>
<ol type="1">
<li><strong>Bulk Sales Model</strong>: “What if I told you that there was one place where you could get all these things under one roof? A 2½ pound container of cashews, prescription eyeglasses, a tank of gas, new tires for your car, 96 rolls of toilet paper, a new refrigerator, an outdoor shed, a 10 carat diamond ring, some freshly prepared sushi, fine wine at a great price.” - Ben illustrates the diverse and bulk offerings of Costco, underscoring the convenience and variety it provides to members.</li>
<li><strong>Consistent Low Prices</strong>: “And you could even grab a hot dog with a soda and a free refill on your way out for just $1.50. Hey, it has been the same price for 40 years now.” - Highlighting Costco’s commitment to maintaining low prices for its food court items, which enhances the shopping experience and customer loyalty.</li>
<li><strong>Innovative Operations</strong>: “But what really makes it work are the 50 clever innovations that they’ve refined over the years, that all work together like an orchestra that’s been rehearsing for decades.” - David acknowledges Costco’s operational ingenuity and continuous improvement mindset.</li>
<li><strong>Quality Products</strong>: “If your goal is to offer extremely great value to your customers on high-quality products at the lowest possible prices, there are a lot of ways that you could go about doing that.” - Ben emphasizes the company’s dedication to quality alongside its value proposition.</li>
<li><strong>Customer Value Focus</strong>: “Today, we will walk through the very specific path of decisions and trade-offs that Costco has chosen to accomplish just this.” - Introducing the strategic decisions Costco makes to uphold its value proposition.</li>
<li><strong>Revenue Growth</strong>: “Costco has grown revenue right about 10% for over 30 years in a row.” - Showcasing Costco’s remarkable consistency in revenue growth.</li>
<li><strong>Efficient Space Utilization</strong>: “Their revenue per square foot of their warehouses belongs more in a conversation with Tiffany than Walmart.” - Highlighting how efficiently Costco utilizes its warehouse space to generate high revenue.</li>
<li><strong>Kirkland Signature Brand</strong>: “Their store brand, Kirkland Signature, does more revenue alone, not including anything else in the store, than all of Nike.” - Demonstrating the success and scale of Costco’s private label brand.</li>
<li><strong>International Expansion Potential</strong>: “They seem to have incredible running room ahead of them to expand internationally and here in North America.” - Noting Costco’s significant potential for further global expansion.</li>
<li><strong>Customer Loyalty</strong>: “Most of you are very familiar with this Disneyland of consumer value that I’m referring to.” - Ben alludes to the strong customer loyalty and fondness for Costco.</li>
<li><strong>Supply Chain Mastery</strong>: “Jim Sinegal, of course, co-founder and CEO of Costco, tells the story that a reporter once asked him if he learned a lot from Sol. Jim replied, no, that’s inaccurate. I didn’t learn a lot, I learned everything.” - Reflecting on the foundational knowledge and principles Costco inherited from its predecessors.</li>
<li><strong>Legal Compliance and Ethics</strong>: “Obey the law” - The primary code of ethics at Costco, ensuring that the company operates within legal boundaries and ethical standards.</li>
<li><strong>Employee Care</strong>: “Take care of our employees” - Costco’s commitment to employee welfare, indicating the company’s recognition of its workforce as a key stakeholder.</li>
<li><strong>Supplier Respect</strong>: “Respect our suppliers” - Highlighting Costco’s ethical approach to dealing with suppliers, fostering mutual respect and long-term relationships.</li>
<li><strong>Membership Model Efficiency</strong>: “The economics of membership…selects for wealthy customers.” - Discussing how the membership model not only generates revenue but also curates a specific customer demographic.</li>
<li><strong>Low Shrinkage Rates</strong>: “Membership further decreases shrinkage.” - The impact of the membership model on reducing theft and loss within Costco warehouses.</li>
<li><strong>High-Quality Member Demographic</strong>: “The typical Costco consumer makes about $125,000 a year in household income.” - Indicating the affluent demographic of Costco’s membership base.</li>
<li><strong>Stringent Product Markups</strong>: “Strict cap on the margin…only markup anything a maximum of 14% above what the suppliers sell it to them for.” - Explaining Costco’s policy on limiting product markups to ensure low prices for members.</li>
<li><strong>Global Expansion Success</strong>: “First, they go to the UK, then they go to Korea, to Taiwan, to Japan…” - Detailing Costco’s strategic and successful international expansion efforts.</li>
<li><strong>Sustainable Growth Strategy</strong>: “Amazon is a company that works hard to charge its customers less, and that is directly from Jim Sinegal.” - Highlighting Costco’s influence on other major retailers regarding pricing strategy.</li>
<li><strong>Member Trust and Transparency</strong>: “Members have to trust that they are going to get the absolute best price on everything…” - The importance of maintaining member trust through transparent pricing and consistent value.</li>
<li><strong>Efficient Inventory Management</strong>: “Costco actually turns their inventory 12.4 times per year…” - Showcasing Costco’s exceptional efficiency in inventory management and the benefits of a negative cash conversion cycle.</li>
<li><strong>Selective Product Offering</strong>: “Each buyer is only really adding 3, 5, 10, maybe 15 new SKUs a year…” - Reflecting on the curated and limited product selection strategy that ensures quality and value.</li>
<li><strong>Ethical Supplier Negotiations</strong>: “Costco buyers always ask why when a supplier tries to increase the price…” - Demonstrating Costco’s fair and informed approach to supplier negotiations.</li>
<li><strong>Commitment to Social Responsibility</strong>: “Sol and Robert are great at creative ideas in retail. They’re not so great at scale execution.” - Acknowledging the founders’ innovative contributions to retail, balanced with an awareness of their limitations in executing at scale, leading to strategic decisions that shaped Costco’s trajectory.</li>
<li><strong>Limited SKU Strategy</strong>: “Costco makes the opposite bet. They bet that you don’t need selection, as long as you ensure that everything you can buy is high quality…Consumers, because they do all that work ahead of time, are basically just okay, sacrificing selection entirely and saying, yeah, as long as you give us good value on great stuff, we’re totally okay with that.”</li>
<li><strong>Trust and Quality Over Selection</strong>: “That’s an important unlock. You can’t just have low selection and be like, well, it’s all cheap stuff. It has to be high quality in its category and the best deal on the market in order for people to be okay with low selection, which drives low SKU count, which drives all the amazing things we’ve talked about so far.”</li>
<li><strong>The Intelligent Loss of Sales Principle:</strong> “Sol uses the example in the book of household lubricating oil, like WD-40 type stuff. He’s like, we only carried the eight ounce can, even though there was a three ounce can out there…But it was worth it to us to forgo that, because by only having the eight ounce can, we could reduce the number of SKUs that we had and get all these benefits that you’re talking about, Ben.”</li>
<li><strong>Simplifying Logistics Through Limited SKUs:</strong>: “They only have so many suppliers who are bringing goods to Costco. The fact that they sell in bulk means that they can bring a whole pallet into a warehouse and consumers just come and pluck it off the pallet…This is so much simpler, and it really plays into that cash flow dynamic, where things can be available for sale so fast.”</li>
<li><strong>Employee Compensation and Efficiency</strong>: “This also plays into this labor thing. You can totally pay your employees more when you need less people to generate the same amount of sales. You don’t have wasted manpower unwrapping items from pallets, no one turning the labels out to look pretty. The customers do all of this. It legitimately means they just need less people.”</li>
<li><strong>The Membership Model as a Profit Center</strong>: “A lot of people like to make a lot of hay about the idea that Costco generates all their profit on memberships and that retail is just a break-even business. This has been popular to say because they run the retail business at such thin margins. Memberships are nearly a 100% margin business.”</li>
<li><strong>High Renewal Rates and Customer Loyalty</strong>: “Executive members, as you would guess, also renew at a higher rate. It helps with retention…Ninety-three percent of members in the US renew every single year.”</li>
<li><strong>Innovative Crossdocking</strong>:</li>
</ol>
<blockquote class="blockquote">
<p>Exactly, but here’s how the distribution centers work. Trucks pull up on one side and unload pallets, that’s where the suppliers trucks are. On the other side of the warehouse, there are Costco trucks.</p>
</blockquote>
<blockquote class="blockquote">
<p>What happens is, since they move stuff entirely by the pallet, no partial pallets, these few things go to this store, these few things go to that store, the supplier trucks unload the pallets. They just get scooted across the dock to go directly to a Costco warehouse. Within minutes to hours, that truck leaves, and there’s no unwrapping of individual boxes. There’s nothing sitting overnight in the facility.</p>
</blockquote>
<blockquote class="blockquote">
<p>This is so much simpler, and it really plays into that cash flow dynamic, where things can be available for sale so fast. Just to underscore how differentiated the system is, 92% of Costco’s merchandise is crossdocked. Only 10% of Walmart has crossdocked merchandise on a pallet system like this.</p>
</blockquote>



 ]]></description>
  <category>ode to</category>
  <category>Costco</category>
  <category>Acquired</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-02-28-ode-to-costco/</guid>
  <pubDate>Wed, 28 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>ColBERT and Information Retrieval</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-01-18-colbert-information-retrieval/</link>
  <description><![CDATA[ 




<p>I recently learned about ColBERT, a BERT-based model for efficient passage retrieval. The authors of the paper <a href="https://arxiv.org/abs/2004.12832">ColBERT: Efficient and Effective Passage Search via Contextualized Late Interaction over BERT</a> claim that ColBERT is able to achieve state-of-the-art performance on the MS MARCO passage ranking task while being 10x faster than the previous state-of-the-art model. This is a post to summarize my learnings about ColBERT and how it compares to dense retrieval methods like BERT and sentence-transformers.</p>
<section id="colbert-vs.-bert-vs.-traditional-ir-methods" class="level1">
<h1>ColBERT vs.&nbsp;BERT vs.&nbsp;Traditional IR Methods</h1>
<p>First ColBERT stands for <strong>co</strong>ntextualized <strong>l</strong>ate interaction over BERT, hence the name ColBERT.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-01-18-colbert-information-retrieval/colbert_figure2.png" class="img-fluid figure-img"></p>
<figcaption>Colbertv1 Paper - Figure 2</figcaption>
</figure>
</div>
<p>As 2d illustrates, ColBERT relies on fine-grained contextual late interaction: it encodes each passage into a matrix of token-level embeddings (shown above in blue). Then at search time, it embeds every query into another matrix (shown in green) and efficiently finds passages that contextually match the query using scalable vector-similarity (MaxSim) operators.</p>
<p>Figure 2 also nicely summarizes pre-BERT retrieval methods.</p>
<section id="pre-bert-methods" class="level2">
<h2 class="anchored" data-anchor-id="pre-bert-methods">Pre-BERT Methods</h2>
<ul>
<li>2a: Representation-based similarity - Here you have a bi-encoder where you create representations that are dense embeddings of the query and document separately and interact them somehow (cosine similarity)</li>
<li>2b: Query-Document interaction - Compute similarity pairs of all documents and queries and then do some aggregation of these</li>
</ul>
</section>
<section id="bert-methods" class="level2">
<h2 class="anchored" data-anchor-id="bert-methods">BERT Methods</h2>
<p>This is represent in Figure 2c: All-to-all interaction (BERT)</p>
<p>This has been the state of the art of the it is computationally very expensive. BERT can be used in Bi-Encoders and Cross-Encoders. This post from <a href="https://www.sbert.net/examples/applications/cross-encoder/README.html">sbert</a> explains it quite well.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2024-01-18-colbert-information-retrieval/cross_encoders.png" class="img-fluid figure-img"></p>
<figcaption>Cross Encoders</figcaption>
</figure>
</div>
<ul>
<li>Bi-Encoders produce an embedding for each input sentence. So for two sentences, two embeddings are produced and these can be compared using cosine similarity.</li>
<li>With Cross-Encoders, both input sentences are passed at the same time to the Transformer, it produces not an embedding but a value between 0 and 1 that represents the similarity between the two sentences.</li>
<li>Cross-Encoders achieve better performance than Bi-Encoders but for many large scale information retrieval applications they are not practical because since embeddings are not produced, there is no way to index the data and retrieve it efficiently.</li>
<li>From the above post: “Bi-Encoders are used whenever you need a sentence embedding in a vector space for efficient comparison. Applications are for example Information Retrieval / Semantic Search or Clustering. Cross-Encoders would be the wrong choice for these application: Clustering 10,000 sentence with CrossEncoders would require computing similarity scores for about 50 Million sentence combinations, which takes about 65 hours. With a Bi-Encoder, you compute the embedding for each sentence, which takes only 5 seconds. You can then perform the clustering.”</li>
<li>You can combine Bi-Encoders and Cross-Encoders. Use Bi-Encoders to retrieve the top-k documents and then use Cross-Encoders to re-rank the top-k documents. An example for this common retrieve and re-rank strategy is <a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html">here</a>.</li>
</ul>
</section>
</section>
<section id="colbert" class="level1">
<h1>ColBERT</h1>
<p>ColBERT creates query and document embeddings (notably at the token level). From the paper: “Every query embedding interacts with all document embeddings via a MaxSim operator, which computes maximum similarity (e.g.&nbsp;cosine similarity), and the scalar outputs of these operators are summed across query terms.”</p>
<p>With BERT or even sentence-transformers, you need to embed the entire text into one embedding for both the query and the document (call this the single-vector approach). But with ColBERT, we are generating contextualized embeddings for each token (e.g.&nbsp;bank could appear multiple times and have different meanings in the same document). Call this the multi-vector approach, the paper calls this “bag of contextualized embeddings” which had me confused for awhile. But it’s simply moving for a <code>1 x d</code> representation to a <code>m x d</code> representation where m is the number of tokens in the document.</p>
<p>Shout out to the author of the <a href="https://github.com/bclavie/RAGatouille">RAGatouille</a> library who also wrote a fantastic <a href="https://ben.clavie.eu/ragatouille/">post</a> making the case for these late interaction retrievers like ColBERT. He has a <a href="https://ben.clavie.eu/ragatouille/#longer-might-read">section</a> comparing the pros and cons of:</p>
<ul>
<li>BM25/Keyword Sparse Retrieval</li>
<li>Cross-Encoders</li>
<li>Dense Retrieval/Embeddings</li>
</ul>
<p>The main downside of dense retrieval methods is they often generalize poorly whereas ColBERT has shown strong generalization capabilities.</p>
</section>
<section id="ragatouille" class="level1">
<h1>RAGatouille</h1>
<p>RAGatouille is a library that makes using ColBERT easier. I haven’t used the original ColBERT code but RAGatouille is very easy to get started with.</p>
<p>First you need to index your documents which is a few lines of code. This will create the token level embeddings for each and persist it to disk. This will act as basically your vector database that you’ll use to compare against your query.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ragatouille <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RAGPretrainedModel</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ragatouille.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_wikipedia_page</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ragatouille.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CorpusProcessor</span>
<span id="cb1-4"></span>
<span id="cb1-5"></span>
<span id="cb1-6">RAG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RAGPretrainedModel.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"colbert-ir/colbertv2.0"</span>)</span>
<span id="cb1-7">my_documents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [get_wikipedia_page(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hayao_Miyazaki"</span>), get_wikipedia_page(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Studio_Ghibli"</span>)]</span>
<span id="cb1-8">processor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CorpusProcessor()</span>
<span id="cb1-9">my_documents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processor.process_corpus(my_documents)</span>
<span id="cb1-10">index_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RAG.index(index_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_index"</span>, collection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_documents)</span></code></pre></div>
<p>Then you can run queries on this index.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ragatouille <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RAGPretrainedModel</span>
<span id="cb2-2"></span>
<span id="cb2-3">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ColBERT my dear ColBERT, who is the fairest document of them all?"</span></span>
<span id="cb2-4">RAG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RAGPretrainedModel.from_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path_to_your_index"</span>)</span>
<span id="cb2-5">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RAG.search(query)</span></code></pre></div>
<p>The search results are turned either as a list of dictionaries or a list of list of dictionaries depending on if you passed in a single or multi-query.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># single-query result</span></span>
<span id="cb3-2">[</span>
<span id="cb3-3">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blablabla"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.424242</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>},</span>
<span id="cb3-4">    ...,</span>
<span id="cb3-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"albalbalba"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.242424</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: k},</span>
<span id="cb3-6">]</span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># multi-query result</span></span>
<span id="cb3-8">[</span>
<span id="cb3-9">    [</span>
<span id="cb3-10">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blablabla"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.424242</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>},</span>
<span id="cb3-11">        ...,</span>
<span id="cb3-12">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"albalbalba"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.242424</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: k},</span>
<span id="cb3-13">    ],</span>
<span id="cb3-14">    [</span>
<span id="cb3-15">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blablabla"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.424242</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>},</span>
<span id="cb3-16">        ...,</span>
<span id="cb3-17">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"albalbalba"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.242424</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>: k},</span>
<span id="cb3-18">    ],</span>
<span id="cb3-19"> ]</span></code></pre></div>
<p>It is also easy to convert this ColBERT model into a langchain retriever to use in any langchain chain.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">retriever <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RAG.as_langchain_retriever(k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<p>You can use this to retrieve documents</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">retriever.invoke(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What animation studio did Miyazaki found?"</span>)</span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [Document(page_content='In April 1984, Miyazaki opened his own office in Suginami Ward, naming it Nibariki.\n\n\n=== Studio Ghibli ===\n\n\n==== Early films (1985–1996) ====\nIn June 1985, Miyazaki, Takahata, Tokuma and Suzuki founded the animation production company Studio Ghibli, with funding from Tokuma Shoten. Studio Ghibli\'s first film, Laputa: Castle in the Sky (1986), employed the same production crew of Nausicaä. Miyazaki\'s designs for the film\'s setting were inspired by Greek architecture and "European urbanistic templates".'),</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Document(page_content='Hayao Miyazaki (宮崎 駿 or 宮﨑 駿, Miyazaki Hayao, [mijaꜜzaki hajao]; born January 5, 1941) is a Japanese animator, filmmaker, and manga artist. A co-founder of Studio Ghibli, he has attained international acclaim as a masterful storyteller and creator of Japanese animated feature films, and is widely regarded as one of the most accomplished filmmakers in the history of animation.\nBorn in Tokyo City in the Empire of Japan, Miyazaki expressed interest in manga and animation from an early age, and he joined Toei Animation in 1963. During his early years at Toei Animation he worked as an in-between artist and later collaborated with director Isao Takahata.'),</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Document(page_content='Glen Keane said Miyazaki is a "huge influence" on Walt Disney Animation Studios and has been "part of our heritage" ever since The Rescuers Down Under (1990). The Disney Renaissance era was also prompted by competition with the development of Miyazaki\'s films. Artists from Pixar and Aardman Studios signed a tribute stating, "You\'re our inspiration, Miyazaki-san!"')]</span></span></code></pre></div>
<p>But you can also use the retriever in a RAG chain too:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chains <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> create_retrieval_chain</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chains.combine_documents <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> create_stuff_documents_chain</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.prompts <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatPromptTemplate</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatOpenAI</span>
<span id="cb6-5"></span>
<span id="cb6-6">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatPromptTemplate.from_template(</span>
<span id="cb6-7">   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""Answer the following question based only on the provided context:</span></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;context&gt;</span></span>
<span id="cb6-10"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{context}</span></span>
<span id="cb6-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/context&gt;</span></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Question: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{input}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb6-14">)</span>
<span id="cb6-15"></span>
<span id="cb6-16">llm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatOpenAI()</span>
<span id="cb6-17"></span>
<span id="cb6-18">document_chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_stuff_documents_chain(llm, prompt)</span>
<span id="cb6-19">retrieval_chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_retrieval_chain(retriever, document_chain)</span>
<span id="cb6-20">retrieval_chain.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What animation studio did Miyazaki found?"</span>})</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the retrieved documents and answer will be returned</span></span>
<span id="cb6-23">{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'What animation studio did Miyazaki found?'</span>,</span>
<span id="cb6-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'context'</span>: [Document(page_content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'In April 1984, Miyazaki opened his own office in Suginami Ward, naming it Nibariki.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== Studio Ghibli ===</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">==== Early films (1985–1996) ====</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">In June 1985, Miyazaki, Takahata, Tokuma and Suzuki founded the animation production company Studio Ghibli, with funding from Tokuma Shoten. Studio Ghibli</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s first film, Laputa: Castle in the Sky (1986), employed the same production crew of Nausicaä. Miyazaki</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s designs for the film</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s setting were inspired by Greek architecture and "European urbanistic templates".'</span>),</span>
<span id="cb6-25"> Document(page_content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hayao Miyazaki (宮崎 駿 or 宮﨑 駿, Miyazaki Hayao, [mijaꜜzaki hajao]; born January 5, 1941) is a Japanese animator, filmmaker, and manga artist. A co-founder of Studio Ghibli, he has attained international acclaim as a masterful storyteller and creator of Japanese animated feature films, and is widely regarded as one of the most accomplished filmmakers in the history of animation.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Born in Tokyo City in the Empire of Japan, Miyazaki expressed interest in manga and animation from an early age, and he joined Toei Animation in 1963. During his early years at Toei Animation he worked as an in-between artist and later collaborated with director Isao Takahata.'</span>),</span>
<span id="cb6-26"> Document(page_content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Glen Keane said Miyazaki is a "huge influence" on Walt Disney Animation Studios and has been "part of our heritage" ever since The Rescuers Down Under (1990). The Disney Renaissance era was also prompted by competition with the development of Miyazaki</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s films. Artists from Pixar and Aardman Studios signed a tribute stating, "You</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">re our inspiration, Miyazaki-san!"'</span>)],</span>
<span id="cb6-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Miyazaki founded Studio Ghibli.'</span>}</span></code></pre></div>
<p>See this <a href="https://python.langchain.com/docs/integrations/retrievers/ragatouille">langchain tutorial page</a> for more information.</p>
</section>
<section id="links" class="level1">
<h1>Links</h1>
<ul>
<li><a href="https://arxiv.org/pdf/2004.12832.pdf">ColBERT paper</a></li>
<li><a href="https://arxiv.org/pdf/2112.01488.pdf">ColBERTv2 paper</a></li>
<li><a href="https://github.com/stanford-futuredata/ColBERT">ColBERT Github Repo</a></li>
<li>I’ve used ColBERT through the <a href="https://github.com/bclavie/RAGatouille">RAGatouille</a> library which makes it really easy to get started and converted it to a langchain retriever using this <a href="https://python.langchain.com/docs/integrations/retrievers/ragatouille">tutorial</a>.</li>
<li>Cool <a href="https://colbert.aiserv.cloud/">webapp</a> to visualize ColBERT embeddings via a browser</li>
<li>Simon Willison also wrote a <a href="https://til.simonwillison.net/llms/colbert-ragatouille">short post</a> about his learnings about ColBERT</li>
</ul>


</section>

 ]]></description>
  <category>BERT</category>
  <category>ColBERT</category>
  <category>Information Retrieval</category>
  <category>NLU</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-01-18-colbert-information-retrieval/</guid>
  <pubDate>Thu, 18 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LLM Summarization and NeurIPS Papers</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2024-01-04-llm-summarization-neurips/</link>
  <description><![CDATA[ 




<p>I didn’t get the chance to attend NeurIPS last week. The sheer number of papers submitted is <a href="https://blog.neurips.cc/tag/neurips2023/">staggering</a>: 13,300 submitted papers that were reviewed by 1,000+ people. 3,540 papers were accepted and 502 papers were flagged for ethics reviews!</p>
<p>The folks at the Latent Space podcast did a good job summarizing the wealth of content, one reviewing the <a href="https://podcasts.google.com/feed/aHR0cHM6Ly93d3cubGF0ZW50LnNwYWNlL2ZlZWQ/episode/aHR0cHM6Ly93d3cubGF0ZW50LnNwYWNlL3AvbmV1cmlwcy0yMDIzLXBhcGVycw?sa=X&amp;ved=0CAUQkfYCahcKEwiYzPGz7LiDAxUAAAAAHQAAAAAQOw">best papers</a> and another that was focused on <a href="https://podcasts.google.com/feed/aHR0cHM6Ly93d3cubGF0ZW50LnNwYWNlL2ZlZWQ/episode/aHR0cHM6Ly93d3cubGF0ZW50LnNwYWNlL3AvbmV1cmlwcy0yMDIzLXN0YXJ0dXBz?sa=X&amp;ved=0CAUQkfYCahcKEwj4-6rNmcODAxUAAAAAHQAAAAAQCg">top startups</a>.</p>
<p>I transcribed these podcasts using Whisper and tried taking a stab at summarizing them. Those transcripts are here:</p>
<ul>
<li><a href="./neurips_papers_2023.wav.txt">Latent Space Top Papers Transcript</a></li>
<li><a href="./neurips_startups_2023.wav.txt">Latent Space Top Startups Transcript</a></li>
</ul>
<p>The podcast comes with timestamps for each section which is very helpful:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-2">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0:01:19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word2Vec"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jeff Dean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greg Corrado"</span>]},</span>
<span id="cb1-3">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0:15:28"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Emergence Mirage"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rylan Schaeffer"</span>]},</span>
<span id="cb1-4">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0:28:48"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DPO"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rafael Rafailov"</span>]},</span>
<span id="cb1-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0:41:36"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DPO Poster Session"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archit Sharma"</span>]},</span>
<span id="cb1-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0:52:03"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Datablations"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Niklas Muennighoff"</span>]},</span>
<span id="cb1-7">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:00:50"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"QLoRA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tim Dettmers"</span>]},</span>
<span id="cb1-8">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:12:23"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DataComp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Samir Gadre"</span>]},</span>
<span id="cb1-9">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:25:38"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DataComp Poster Session"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Samir Gadre"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alex Dimakis"</span>]},</span>
<span id="cb1-10">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:35:25"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LLaVA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Haotian Liu"</span>]},</span>
<span id="cb1-11">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:47:21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LLaVA Poster Session"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Haotian Liu"</span>]},</span>
<span id="cb1-12">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1:59:19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tree of Thought"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shunyu Yao"</span>]},</span>
<span id="cb1-13">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2:11:27"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tree of Thought Poster Session"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shunyu Yao"</span>]},</span>
<span id="cb1-14">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2:20:09"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toolformer"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane Dwivedi-Yu"</span>]},</span>
<span id="cb1-15">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2:32:26"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Voyager"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Guanzhi Wang"</span>]},</span>
<span id="cb1-16">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2:45:14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CogEval"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ida Momennejad"</span>]},</span>
<span id="cb1-17">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2:59:41"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"State Space Models"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"presenter"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chris Ré"</span>]}</span>
<span id="cb1-18">]</span></code></pre></div>
<p>For all the LLM generations, I used the following prompt:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">Summarize the following transcript of a podcast <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> a couple paragraphs at most: {text}</span></code></pre></div>
<section id="takeaways" class="level1">
<h1>Takeaways</h1>
<p>My main learnings through this effort are:</p>
<ul>
<li>Whisper is a fantastic transcription tool and running this locally on a Mac using whisper.cpp is quite feasible because the quantized models are small</li>
<li>I tried various open source LLMs for summarization and they all had trouble generating decent summaries consistently. Some of the issues were
<ul>
<li>summaries are empty strings</li>
<li>summaries are generated after repeating the text</li>
<li>hallucinations</li>
</ul></li>
<li>Some of the models I tried:
<ul>
<li><code>solar-10.7b-instruct-v1.0.Q8_0.gguf</code></li>
<li><code>mixtral-8x7b-instruct-v0.1.Q5_K_M.gguf</code></li>
<li><code>mistral-7b-instruct-v0.2.Q8_0.gguf</code></li>
<li><code>llama-2-13b-chat.Q8_0.gguf</code></li>
<li><code>inkbot-13b-8k-0.2.Q8_0.gguf</code></li>
</ul></li>
<li>gpt-4 is (not surprisingly at this point) able to generate decent summaries consistently</li>
</ul>
</section>
<section id="code" class="level1">
<h1>Code</h1>
<p>To generate summaries using a local LLM, you can use the following code:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.callbacks.manager <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CallbackManager</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.callbacks.streaming_stdout <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StreamingStdOutCallbackHandler</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.llms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LlamaCpp</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_llm_llamacpp(</span>
<span id="cb3-9">    model_name,</span>
<span id="cb3-10">    model_dir,</span>
<span id="cb3-11">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb3-12">    top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-13">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span>,</span>
<span id="cb3-14">    n_ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>,</span>
<span id="cb3-15">    repeat_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb3-16">    n_threads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb3-17">    callback_manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CallbackManager([StreamingStdOutCallbackHandler()]),</span>
<span id="cb3-18">    n_gpu_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-19">    n_batch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>,</span>
<span id="cb3-20">    f16_kv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-21">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs,</span>
<span id="cb3-23">):</span>
<span id="cb3-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Loads a LlamaCpp model from the model directory with</span></span>
<span id="cb3-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    default parameters for an Apple Silicon Mac</span></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-28"></span>
<span id="cb3-29">    model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(model_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> model_name)</span>
<span id="cb3-30"></span>
<span id="cb3-31">    llm_llamacpp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LlamaCpp(</span>
<span id="cb3-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model_path has to take a str not a pathlib.Path</span></span>
<span id="cb3-33">        model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_path,</span>
<span id="cb3-34">        temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature,</span>
<span id="cb3-35">        top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_p,</span>
<span id="cb3-36">        max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_tokens,</span>
<span id="cb3-37">        n_ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_ctx,</span>
<span id="cb3-38">        repeat_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>repeat_penalty,</span>
<span id="cb3-39">        n_threads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_threads,</span>
<span id="cb3-40">        callback_manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>callback_manager,</span>
<span id="cb3-41">        n_gpu_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_gpu_layers,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Metal set to 1 is enough.</span></span>
<span id="cb3-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n_batch should be between 1 and n_ctx</span></span>
<span id="cb3-43">        n_batch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_batch,</span>
<span id="cb3-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># f16_kv MUST set to True,</span></span>
<span id="cb3-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise you will run into problem after a couple of calls</span></span>
<span id="cb3-46">        f16_kv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>f16_kv,</span>
<span id="cb3-47">        verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verbose,</span>
<span id="cb3-48">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs,</span>
<span id="cb3-49">    )</span>
<span id="cb3-50"></span>
<span id="cb3-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> llm_llamacpp</span>
<span id="cb3-52"></span>
<span id="cb3-53">llm_solar_10b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_llm_llamacpp(</span>
<span id="cb3-54">    model_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/lawrencewu/github/research-llms/models/"</span>),</span>
<span id="cb3-55">    model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solar-10.7b-instruct-v1.0.Q8_0.gguf"</span></span>
<span id="cb3-56">)</span>
<span id="cb3-57"></span>
<span id="cb3-58"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> section <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data:</span>
<span id="cb3-59">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Section: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>section[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'title'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-60">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Summarize the following transcript of a podcast in a couple paragraphs at most: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>section[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-61">    section[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary_solar_10b"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> llm_solar_10b(prompt)</span>
<span id="cb3-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Summary: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>section[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'summary_solar_10b'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="llm-summaries" class="level1">
<h1>LLM Summaries</h1>
<p>The summaries below are generated by <code>solar-10.7b-instruct-v1.0.Q8_0.gguf</code> and gpt-4. Some of the summaries are quite good like the one for Word2Vec and Emergence Mirage. However, some issues with most of the summaries:</p>
<ul>
<li>the LLM looks like it is repeating text verbatim from the source text</li>
<li>in some cases a summary is not generated at all</li>
<li>sometimes the summary is generated after repeating the text</li>
<li>there are hallucinations too</li>
</ul>
<p>For reference I also generated summaries using gpt-4 which is a strong comparison.</p>
<section id="test-of-time-paper-word2vec" class="level2">
<h2 class="anchored" data-anchor-id="test-of-time-paper-word2vec">Test of Time Paper: Word2Vec</h2>
<section id="gpt-4" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4">gpt-4</h3>
<p>The podcast transcript features Jeff and Greg, who reflect on their influential work in natural language processing (NLP) and machine learning, initially presented at the ICLR 2013 workshop. They begin by discussing the early stages of their research, which focused on various loss functions and optimization techniques for word embedding representations. A key discovery from this period was the effectiveness of the skip-gram model in comparison to other models they evaluated. This led to a concentrated effort on enhancing the skip-gram model, including improvements in optimization and the introduction of phrase embeddings. Ilya, a later addition to their team, contributed significantly to the paper’s influence.</p>
<p>Throughout the talk, Jeff and Greg highlight several key learnings from their work. They emphasize the importance of semi-supervised objectives in natural language understanding, noting the potential of semi-supervised learning to leverage large, unlabeled data sets for constructing supervised-like training data. Another significant point is the superiority of fast, parallel, and weakly supervised computation over more tightly synchronized approaches, which has become a dominant trend in machine learning. They also discuss the relevance of tokenization in solving nuanced problems and the unexpected power of treating language as sequences of dense vectors.</p>
<p>Jeff and Greg conclude by revisiting the main themes of their research and its current relevance. They acknowledge the shift in ML towards more synchronized approaches but foresee a potential resurgence of asynchronous methods for training large models. They also touch on the evolution of tokenization methods and the continued significance of representing language through dense vectors. The podcast ends with an acknowledgment of their co-authors and a mention of the “Test of Time” award, suggesting the sequence-to-sequence paper as a likely winner for its influence on language models. They also tease the potential award winner for 2027 and mention the “Mirage” paper as a significant work for AI engineers.</p>
</section>
<section id="solar-10.7b" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b">solar-10.7b</h3>
<p>Summary: The podcast discusses a retrospective on a research work that focused on optimizing word embedding representations using the skip-gram model and interesting optimization techniques for phrase embeddings. The paper has been widely cited, with source code and trained representations being used by many in various applications. Key themes from this work include the powerful potential of semi-supervised objectives, treating language as a sequence of dense vectors, and the effective use of weakly synchronized, asynchronous updates to scale large models. The paper also explores how tokenization can be utilized for solving nuanced problems and highlights the importance of focusing compute on aspects that need improvement. This research has significantly impacted natural language understanding and continues to resonate in today’s AI landscape.</p>
</section>
</section>
<section id="emergence-mirage" class="level2">
<h2 class="anchored" data-anchor-id="emergence-mirage">Emergence Mirage</h2>
<section id="gpt-4-1" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-1">gpt-4</h3>
<p>The podcast transcript covers a presentation on the paper “Our Emergent Abilities of Large Language Models, a Mirage,” co-authored by Brando Miranda and Professor Sanmi Koyejo. The paper critically examines the concept of “emergent abilities” in large language models (LLMs), which refers to capabilities that appear in larger models but are absent in smaller ones. These abilities were thought to be unpredictable based on the performance of smaller models. The authors argue, however, that these emergent abilities might not be due to fundamental changes in model scale but rather the result of the metrics used to evaluate these models.</p>
<p>The paper challenges the notion of emergent abilities by proposing that the way models are evaluated, especially using harsh, non-linear metrics like exact match or multiple-choice grade, may create an illusion of emergent abilities. They suggest that if metrics were more continuous and linear, like edit distance or Breyer’s score, the scaling of model performance would appear more predictable and less like emergent phenomena.</p>
<p>To support their hypothesis, the authors conducted three types of evidence: predictions using the GPT-3 model, a meta-analysis of published metrics and emergent abilities at Google’s Big Bench, and an experiment inducing emergent abilities in small networks on vision tasks. Their findings suggest that emergent abilities could be more a matter of evaluation methodology than a fundamental property of large-scale models.</p>
<p>The podcast concludes with reflections on the paper’s reception. Despite its recognition as the best paper, there’s a hint of skepticism about its impact on the field. It’s suggested that while the paper is notable and well-executed, it might not have fundamentally altered understandings or practices in the field of machine learning, primarily addressing methodological issues rather than denying the existence of emergent phenomena in large language models.</p>
</section>
<section id="solar-10.7b-1" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-1">solar-10.7b</h3>
<p>Summary: The discussed podcast presents research on predictability and surprise in large language models, specifically addressing the concept of emergent abilities. This study, conducted by Brando Miranda and Professor Sanmi Koyejo, challenges the narrative around sudden improvements in model performance at seemingly unpredictable scales. It argues that these emergent abilities might not be due to fundamental changes in the models but rather a result of how we evaluate them.</p>
<p>The researchers propose an alternative hypothesis where they demonstrate that non-linear and discontinuous evaluation metrics can create the illusion of emergent abilities. They provide evidence from GPT-3, Google’s Big Bench, and toy minuscule networks on vision tasks to support their claim. The paper highlights the importance of considering scaling properties, evaluation data quality, and specific metrics when predicting changes in model capabilities with increasing scale. Despite being a notable contribution to the field, its impact as the “best paper” is questioned due to not directly denying emergence’s existence but rather pointing out methodological disagreements.</p>
</section>
</section>
<section id="dpo" class="level2">
<h2 class="anchored" data-anchor-id="dpo">DPO</h2>
<section id="gpt-4-2" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-2">gpt-4</h3>
<p>The podcast discusses “Direct Preference Optimization” (DPO), an algorithm that simplifies Reinforcement Learning from Human Feedback (RLHF), a framework increasingly popular in large language models (LLMs). Eric, Raphael, and Archit explain that the emergence of models like GPT-3 and Chad GPT highlighted the importance of RLHF, which aligns model behavior with human expectations and desires.</p>
<p>The traditional RLHF pipeline involves two main steps: first, collecting a dataset of preferences (prompt and response pairs) and training a reward model based on these preferences, and second, optimizing a policy to maximize rewards while staying close to the initial supervised model. This process, typically employing Proximal Policy Optimization (PPO), is complex and resource-intensive.</p>
<p>DPO, in contrast, aims to streamline this process by finding a closed-form optimal solution for the optimization set up for RLHF. It utilizes the concept of the Boltzmann distribution to reweight the reference distribution by the exponentiated reward. DPO fits a reward model to preference data, skipping the reinforcement learning process altogether. The key to DPO is its use of a specific parameterization for the reward model, which directly yields the optimal policy for the RLHF objective without requiring a separate reinforcement learning step.</p>
<p>Their experiments show that DPO offers better reward-divergence trade-offs than PPO and other RL-free approaches, demonstrating its efficiency and stability across various tasks, including summarization and dialogue. Interestingly, DPO also shows comparable or better generalization capabilities than PPO-trained policies, even with limited training data.</p>
<p>The podcast concludes with the observation that while DPO is simpler, cheaper, and easier to train than PPO, there is some skepticism about its performance in terms of alignment and benchmark results compared to PPO-trained models. However, the potential benefits of DPO, especially in terms of computational efficiency, make it a noteworthy development in the field of machine learning and language model training.</p>
</section>
<section id="solar-10.7b-2" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-2">solar-10.7b</h3>
<p>Summary:</p>
</section>
</section>
<section id="dpo-poster-session" class="level2">
<h2 class="anchored" data-anchor-id="dpo-poster-session">DPO Poster Session</h2>
<section id="gpt-4-3" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-3">gpt-4</h3>
<p>The podcast discusses Direct Reference Optimization (DPO), an algorithm designed to simplify Reinforcement Learning from Human Feedback (RLHF). DPO streamlines the traditional RLHF pipeline, which is complex and hard to implement due to its reliance on reinforcement learning (RL) processes. RLHF, used in models like Chat GPT, starts with a base model and adds human preference data (pairwise comparisons of completions) to train a reward model. This model is then used to generate completions that maximize expected reward under a KL constraint to stay close to the initial distribution, preventing model degeneration.</p>
<p>DPO’s contribution lies in providing an exact optimal solution for this optimization problem. It reweights the reference distribution by exponentiating the reward, a concept derived from the Boltzmann distribution. The DPO approach involves rewriting the reward in terms of the policy itself, using a specific algebraic rearrangement. This results in a classification loss directly in terms of the fine-tuned policy, thereby eliminating the need for a separate RL optimization process.</p>
<p>The podcast reveals that DPO is advantageous because it requires only one step and uses the same preference dataset as RLHF. Experiments show DPO works effectively on real-world datasets, offering comparable or better results than PPO with greater efficiency. Additionally, the speaker discusses the developmental process of the paper, mentioning the crucial input from Chelsea Finn, and the inspiration behind the idea, emphasizing the advantages of removing steps in sequential learning. While DPO has shown promise, there are still areas for further research, particularly regarding its application in scenarios where reward models are trained on more complex datasets than binary pairwise preferences.</p>
</section>
<section id="solar-10.7b-3" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-3">solar-10.7b</h3>
<p>Summary: So we’re going to talk about the scaling laws here, but also what they did with their data augmentation techniques, which is a very interesting part of this paper as well.</p>
</section>
</section>
<section id="datablations" class="level2">
<h2 class="anchored" data-anchor-id="datablations">Datablations</h2>
<section id="gpt-4-4" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-4">gpt-4</h3>
<p>The podcast features Niklas presenting a study on “Scaling Data-Constrained Language Models.” The premise of the work is the increasing scarcity of high-quality language data, such as academic papers and books, and explores solutions for training large language models (LLMs) under data constraints. The study challenges the common practice in LLM training of avoiding data repetition, a norm in models like GPT-3 and Palm.</p>
<p>The research examines the effects of training for multiple epochs with repeated data. Initial findings indicate that training for a few epochs with repeated data yields similar performance to training with unique data. However, as the number of epochs increases, performance diverges negatively. This suggests that repeating data up to a certain limit (around four epochs) is feasible for scaling LLMs within existing data constraints.</p>
<p>The study also explores how to allocate computational resources when repeating data. Contrary to previous findings (such as those from the Chinchilla study), which recommend equal scaling of model size and training data, this research suggests that data should be scaled faster in repeated regimes. They demonstrate that models with fewer parameters trained for more epochs perform better both in terms of loss and downstream performance.</p>
<p>Additionally, the study investigates complementary strategies for data constraints, such as incorporating code data from sources like GitHub and employing filtering strategies like fuzzy deduplication and perplexity filtering. These methods show promise in improving model performance, even when repeating data.</p>
<p>Niklas concludes with key takeaways: Repeating data for up to four epochs is generally effective, adding code data can be beneficial even for natural language tasks, and quality filtering combined with data repetition can yield superior results compared to using the original dataset alone. He also highlights the practical application of these findings in training large language models, like FinGBT, a Finnish language model.</p>
<p>The podcast host remarks on the surprising finding that training up to four epochs is nearly as effective as using new data, challenging the notion that “One Epoch is All You Need.” The host appreciates the study’s contribution to open-source AI research, particularly noting Hugging Face’s exemplary work in documenting and sharing their research and methodologies.</p>
</section>
<section id="solar-10.7b-4" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-4">solar-10.7b</h3>
<p>Summary:</p>
</section>
</section>
<section id="qlora" class="level2">
<h2 class="anchored" data-anchor-id="qlora">QLoRA</h2>
<section id="gpt-4-5" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-5">gpt-4</h3>
<p>In the podcast, Tim Detmers presents QLORA, an efficient method for fine-tuning quantized large language models (LLMs). The key innovation of QLORA is its ability to compress neural networks to 4-bit while maintaining 16-bit performance, making it possible for regular researchers to fine-tune large language models without needing extensive GPU resources.</p>
<p>QLORA’s approach involves quantization, where a 32-bit float number is compressed to a 4-bit integer. This process involves slicing the distribution of values into 16 slices or bins, each representing a quantization bin. The main challenge in quantization is minimizing quantization errors to avoid degrading neural network performance.</p>
<p>In terms of fine-tuning costs, Detmers explains the high memory requirements for traditional methods, especially for models with billions of parameters. QLORA significantly reduces this footprint by quantizing the pre-trained model to 4-bit and adding adapters, which leads to a much smaller memory requirement, making it feasible to fine-tune on consumer-grade GPUs.</p>
<p>QLORA introduces several innovations, including a 4-bit normal float data type that is information-theoretically optimal and a double quantization technique for further memory reduction. In experiments, QLORA replicated 16-bit performance with 4-bit quantization across various models and datasets.</p>
<p>The podcast also highlights the development of Gonako, a high-quality chatbot created using QLORA. Gonako was fine-tuned on a single consumer GPU for 24 hours and compared favorably with other chatbots like ChatGPT in a tournament-style setup judged by humans and GPT-4.</p>
<p>Detmers concludes by noting that QLORA makes fine-tuning 18 times cheaper and has been integrated into the Hugging Face Transformer stack, making it accessible for widespread use. He also mentions his availability on the academic job market and an upcoming talk on the making of QLORA. The podcast then transitions to discussing the benefits of attending conferences like NeurIPS, where attendees can discover new and lesser-known research efforts.</p>
</section>
<section id="solar-10.7b-5" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-5">solar-10.7b</h3>
<p>Summary: So let’s hear about it from the horse’s mouth. Today, I will present our work on Datacomp, a new approach to multimodal learning that combines data-driven and model-based methods. Our goal is to enable models to learn to generate images conditioned on text descriptions in a data-efficient manner. To achieve this, we propose an algorithm that iteratively improves the quality of generated images by combining data-driven and model-based approaches. Data-driven methods train generative models using large amounts of paired image-text data. However, collecting such data is expensive and time consuming. Model-based methods generate images conditioned on text descriptions by optimizing latent codes with gradient descent. These methods can be trained without any paired data, but they often produce low quality results due to the difficulty of optimizing high dimensional spaces. Our approach combines these two approaches to improve image generation quality while reducing the need for paired data. We first train a model-based generator using an unpaired dataset of images and text descriptions. Then we use this generator to create synthetic paired data by generating images conditioned on text prompts. Next, we fine-tune a diffusion model with this synthetic data. Finally, we improve the quality of generated images by optimizing latent codes with gradient descent using the fine-tuned diffusion model as an oracle. Our experiments show that our approach improves image generation quality compared to both data-driven and model-based methods alone. We also demonstrate that our method can generate high quality results even when trained on a small number of real paired examples, making it more data efficient than purely data-driven approaches. In this talk, I will first introduce the problem of multimodal learning and discuss existing approaches to text-to-image generation. Then I will present our Datacomp algorithm in detail. Finally, I will show experimental results comparing our approach to baselines. Multimodal learning aims to enable machines to understand and generate information across different modalities such as images, audio, and text. One important application of multimodal learning is text-to-image generation, where the goal is to generate an image given a natural language description. This task has received significant attention in recent years due to its potential applications in various domains such as art, education, and gaming. Existing approaches to text-to-image generation can be broadly categorized into two main groups– data-driven methods and model-based methods. Data-driven methods learn a generative model by training on large datasets of paired image-text examples. These methods have achieved impressive results in recent years, but they require a significant amount of labeled data to train effectively. Collecting such data can be expensive and time consuming. Model-based methods, on the other hand, generate images conditioned on text descriptions by optimizing latent codes with gradient descent. These methods do not require any paired data for training, but they often produce low quality results due to the difficulty of optimizing high dimensional spaces. Our approach combines these two approaches to improve image generation quality while reducing the need for paired data. We first train a model-based generator using an unpaired dataset of images and text descriptions. Then we use this generator to create synthetic paired data by generating images conditioned on text prompts. Next, we fine-tune a diffusion model with this synthetic data. Finally, we improve the quality of generated images by optimizing latent codes with gradient descent using the fine-tuned diffusion model as an oracle. Let’s dive into our approach in more detail. Our algorithm consists of three main steps– pretraining a model-based generator, creating synthetic paired data, and fine-tuning a diffusion model. In the first step, we train a model-based generator using an unpaired dataset of images and text descriptions. We use CLIP to align the image and text encoders during training. This helps the generator to produce images that are relevant to the given text prompt. Next, we create synthetic paired data by generating images conditioned on text prompts using our pretrained model-based generator. These synthetic examples can be used to fine-tune a diffusion model in the next step. We use few real paired examples as additional supervision during fine-tuning to improve the quality of generated images. Finally, we optimize latent codes with gradient descent using the fine-tuned diffusion model as an oracle to further refine the generated images. Our experiments show that our approach improves image generation quality compared to both data-driven and model-based methods alone. We also demonstrate that our method can generate high quality results even when trained on a small number of real paired examples, making it more data efficient than purely data-driven approaches. In conclusion, we presented Datacomp, a new approach to multimodal learning that combines data-driven and model-based methods to improve image generation quality while reducing the need for paired data. Our experiments show promising results, highlighting the potential of our method in improving text-to-image generation. Thank you. [APPLAUSE]</p>
</section>
</section>
<section id="datacomp" class="level2">
<h2 class="anchored" data-anchor-id="datacomp">DataComp</h2>
<section id="gpt-4-6" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-6">gpt-4</h3>
<p>Samir, Gabriel Iliarco, and Alex Fang present their work “Datacomp: In Search of the Next Generation of Multimodal Datasets,” which focuses on the development of more efficient and powerful datasets for training large language models (LLMs), particularly in the field of computer vision. They emphasize the evolution from traditional supervised datasets, which required creating new datasets for new tasks, to the more flexible image-text datasets enabling open vocabulary models capable of various classification tasks.</p>
<p>Datacomp proposes a shift from the standard machine learning pipeline, which focuses on iterating on model architectures, to iterating on datasets instead. The core of Datacomp is a benchmark for dataset development, especially focusing on the CLIP training regime for image-text datasets. CLIP uses a text encoder and an image encoder trained contrastively to align image and text representations.</p>
<p>Datacomp’s workflow comprises five steps: choosing a scale, selecting data, training a model, evaluating, and submitting results. It offers flexibility in data selection, allowing participants to filter from a provided raw data pool or bring additional data. The workflow uses fixed training recipes for CLIP training and evaluates models on a suite of 38 downstream tasks.</p>
<p>Gabriel discusses experiments with different baselines, particularly focusing on clip score filtering and image-based filtering. The best-performing baseline, DataComp1B, is a 1.4 billion sample subset of the data pool, showing higher accuracy than existing datasets, including OpenAI’s. This demonstrates that carefully selecting and filtering smaller data subsets can yield better performance than using larger, noisier datasets.</p>
<p>DataComp encourages community participation, even for those with limited computational resources. It is fully open source, with resources including a website, codebase, and paper available for anyone interested. The project represents a significant step in refining dataset creation and selection, shifting the focus in LLM training from merely scaling models to designing more effective datasets.</p>
</section>
<section id="solar-10.7b-6" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-6">solar-10.7b</h3>
<p>In this podcast, Samir, Gabriel, and Alex discuss their paper “Datacomp: In Search of the Next Generation of Multimodal Datasets.” They explain how traditional computer vision models have been improved through specialized data sets, but this process can be laborious. The paradigm shifted to image text datasets that allowed for open-vocabulary trading models, enabling downstream tasks like image classification. However, the standard machine learning pipeline remained consistent: create a monolithic artifact (data set), keep it fixed, and iterate on model training. They introduce Data Comp as a benchmark for data set development to understand how data set decisions improve models. This focuses on CLIP trading regimes for modern image text datasets, where they fix the CLIP bit and iterate on data selection processes to create new data sets for CLIP model training. The Data Comp workflow consists of five steps: choosing a scale, selecting data, training a model, evaluating, and submitting results. Participants can use their data selection method on either a fixed provided pool or bring in additional data. They then train a model using a fixed recipe with hyperparameters for CLIP training. Models are evaluated using a suite of 38 downstream tasks, and the final step is to submit results. The authors study various baselines, including clip score filtering and image-based filtering, which they intersect to create DataComp1B, a data set that outperforms existing data sets like OpenAI’s WIT and Lion2B at no extra cost during training time. They find smaller, more aggressively filtered data sets can perform better than larger ones from the same pool, and the ranking of filtering strategies is relatively stable across scales. Data Comp encourages experimentation with data sets to improve performance on downstream models, potentially becoming a new standard like ImageNet.</p>
</section>
</section>
<section id="datacomp-poster-session" class="level2">
<h2 class="anchored" data-anchor-id="datacomp-poster-session">DataComp Poster Session</h2>
<section id="gpt-4-7" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-7">gpt-4</h3>
<p>Samir, Gabriel Iliarco, and Alex Fang present “Datacomp: In Search of the Next Generation of Multimodal Datasets,” a project aimed at improving dataset development for large language models, particularly in computer vision. The team, comprising individuals from various universities and corporations, was brought together by Ludwig, known for his networking and openness to collaboration. Datacomp began as a benchmark for dataset development, focusing on the CLIP training regime, but evolved into a community-building initiative around dataset curation.</p>
<p>The Datacomp workflow consists of five steps: choosing a scale, selecting data, training a model, evaluating, and submitting results. Participants can filter data from a provided raw pool or bring in additional data. The project emphasizes dataset selection’s impact on model performance, encouraging experimentation with different data curation methods.</p>
<p>The team conducted over 300 pre-training experiments with various filtering strategies. One successful approach involved intersecting clip score filtering and image-based filtering to create DataComp1B, a 1.4 billion sample dataset that outperforms existing datasets. Their findings suggest smaller, carefully curated datasets can be more effective than larger, noisier ones.</p>
<p>Datacomp aims to shift the focus from scaling models to designing better datasets. It encourages participation from the broader community, even those with limited computational resources. Everything related to Datacomp, including tools for dataset curation, is open source, facilitating collaboration and further research in data-centric AI.</p>
<p>The podcast also touches on the potential of extending Datacomp’s approach to other fields like NLP, audio, video, and even MRI images. The idea is to fix the model and allow researchers to experiment with selecting subsets from a data pool, a shift from the traditional approach of building multiple models for a fixed dataset. This approach is seen as foundational, akin to a new ImageNet, potentially marking a significant moment in the development of multimodal models.</p>
</section>
<section id="solar-10.7b-7" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-7">solar-10.7b</h3>
<p>Summary: So, let’s listen in on this podcast about Lava.</p>
<p>In the transcript, a PhD student from Columbia discusses their involvement in Data Comp, an extensive project aimed at creating a thorough and large-scale benchmark for data curation. The team collaborated with various researchers from different institutions to generate 12.8 billion image-text pairs and conduct numerous evaluations on multiple downstream tasks. This significant effort was driven by the desire to create a high-quality benchmark, which led them to work at an unprecedented scale for academics.</p>
<p>The project attracted participation from various universities and corporations due to Ludwig, one of the authors, being well-connected within the community. Although separate from Lyon group, many members knew each other and collaborated on this project. Initially considering using Lyon’s 12.8 billion dataset, they ultimately focused on creating a benchmark as their primary goal.</p>
<p>The Data Comp team emphasized building a community around dataset curation by open-sourcing the tools used in addition to releasing the dataset itself. This approach allows others to experiment with different tooling methods and contribute to data-centric AI development. The community is actively exploring various data set curation techniques, such as designing filtering networks, and Clip scores have been notably applied for this purpose.</p>
<p>The team also discussed potential future directions for Data Comp, including expanding its approach to audio and video, as well as creating Data Comp Lite efforts in the NLP space. They envision a future where data cleaning and filtering become first-class citizens within AI research, with models being built specifically for this purpose.</p>
<p>The conversation then briefly touched on Datacomp’s relation to Lion, an existing dataset, and how Data Comp aims to build upon it by creating a community focused on improving the curation process. The discussion concluded with mentioning Lava, an open-source visual language model that, in combination with Data Comp, could provide a template for future multimodal models’ development.</p>
</section>
</section>
<section id="llava" class="level2">
<h2 class="anchored" data-anchor-id="llava">LLaVA</h2>
<section id="gpt-4-8" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-8">gpt-4</h3>
<p>Hao Tian, a final year Ph.D.&nbsp;student at UW Madison, introduces Lava, a model designed to enhance visual reasoning capability in language models. The project, called Visual Instruction Tuning, aims to create an open-source model with capabilities similar to GPT-4 Vision. Lava’s objective is to enable a model to reason about the visual world and interact through language, akin to human capabilities in various professional and social contexts.</p>
<p>The foundation of Lava lies in the integration of a visual encoder, a cross-modal connector, and a language decoder. The visual encoder processes images, the cross-modal connector bridges visual features to the language domain, and the language decoder interprets user instructions and expresses understanding through text. To generate the training data, the team leverages a text-only GPT, which interprets images contextually described in textual format. This approach utilizes image annotations and object category details from datasets like COCO to create detailed image contexts.</p>
<p>Lava is trained on a dataset called LavaInstruct 158k, which comprises triplets of images, instructions, and answers. The responses are designed to facilitate multi-turn engagement, focus on visual details, and enable complex reasoning beyond visual facts. The training involves two stages: pre-training the projector for feature alignment and performing end-to-end visual instruction tuning.</p>
<p>Post-training, Lava exhibits several emergent properties, including strong visual reasoning capabilities and a grounding in visual facts. It demonstrates an emerging OCR capability and the ability to perform reasoning in multiple languages. Lava’s effectiveness is further validated through a challenging benchmark called Lava Bench in the Wild, which assesses knowledge beyond training data and multilingual understanding.</p>
<p>Hao Tian also discusses the community’s role in expanding Lava’s capabilities, highlighting its adaptability to various optimizations designed for language models. He showcases Lava’s functionality with a live demo, demonstrating its ability to interpret images and draft appropriate text responses. Lava, being fully open source, exemplifies state-of-the-art research in visual instruction tuning and visual language models. It has inspired further work in the open-source model space, indicating the potential for more innovative solutions in visual understanding.</p>
</section>
<section id="solar-10.7b-8" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-8">solar-10.7b</h3>
<p>Summary: It’s not just about instruction following, but it’s also about OCR, which is something that we haven’t really seen before. And I think this is going to be an exciting space to watch in the next year or two as more and more work comes out on these models.</p>
</section>
</section>
<section id="llava-poster-session" class="level2">
<h2 class="anchored" data-anchor-id="llava-poster-session">LLaVA Poster Session</h2>
<section id="gpt-4-9" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-9">gpt-4</h3>
<p>Hao Tian, a final year Ph.D.&nbsp;student at UW Madison, presents Lava, a simple but effective model for visual instruction tuning. The architecture of Lava includes a vision encoder to encode visual features, a language model for reasoning, and a projection layer, which is a linear layer, to project visual features to a latent space understandable by the language decoder. The language model used is open source, not GPT-4, and is specifically trained to understand images and follow instructions.</p>
<p>The training process of Lava involves two stages. In the first stage, only the projection layer is trained while the language model and vision encoder are frozen. In the second stage, both the language model and the projector are trained to follow multi-modal instructions. The model does not need to understand bounding boxes as it relies on visual instruction following data, which includes image, instruction, and answer.</p>
<p>Lava’s training data was generated using a text-only GPT, with image contexts provided in textual format, including COCO annotations and bounding box details. The model demonstrates strong visual reasoning capabilities, understanding complex visual situations, and can even perform reasoning in multiple languages.</p>
<p>For training on different multimodal instruction-following datasets, Hao Tian recommends considering the domain’s specificity. If the domain differs significantly, like medical imaging, he suggests training from scratch with a domain-specific clip, like a biomedical clip. For less divergent domains, using the instruction-tuned version of Lava is recommended due to its extensive visual knowledge.</p>
<p>Lava’s training is efficient and affordable, requiring less than one day on a single node. The model’s open-source nature makes it accessible for a broader community. Hao Tian demonstrates Lava’s capabilities through a live demo, where the model interprets an image from NeurIPS 2023 and drafts a relevant tweet.</p>
<p>Lava represents a significant advancement in visual language models, simplifying the architecture while maintaining high-level reasoning capabilities. Its ability to train quickly and effectively on diverse visual data sets, along with its adaptability to various optimization techniques, positions it as a groundbreaking contribution in the field of visual language modeling.</p>
</section>
<section id="solar-10.7b-9" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-9">solar-10.7b</h3>
<p>Summary: So this is by Google Brain, and it’s basically an extension of the chain of thought idea where you have a model that generates a sequence of intermediate steps to solve a problem. And so in this case, they use a tree structure rather than just a linear sequence. And they do some experiments on math problems, which is kind of interesting. So I talked to one of the authors, Yuan Cao, and he explained it to me. Here’s the transcript. Basically, we propose a new framework for chain of thought generation called Tree of Thought. The key idea here is that instead of generating a linear sequence of thoughts, we generate a tree structure of thoughts. And this tree structure can be seen as a hierarchical decomposition of the final answer. So each leaf node in the tree corresponds to an atomic fact or operation. Each internal node represents a composition of its children nodes. And the root node is the final answer. So for example, if we want to solve the problem 15 divided by 3 plus 2, this can be decomposed into two steps. First, we compute 15 divided by 3 as 5. Then we add 2 to get the final answer of 7. And in our model, we generate these two steps hierarchically. So first, we generate the root node, which is 7. Then we generate the internal nodes representing the composition of its children. In this case, it’s multiply and add. Then we generate the leaf nodes corresponding to the atomic operations or facts. And in our experiments, we show that this tree structure can help improve performance on math word problems as well as some other tasks like text completion and image captioning. So how do you train this model? Yeah, so basically, we use a two-stage training process. In the first stage, we pretrain the model using an unsupervised objective. And in particular, we use the chain of thought pretraining objective proposed by OpenAI. This is to learn to generate coherent chains of thoughts. In the second stage, we fine-tune the model on supervised tasks. So for math word problems, we use a teacher forcing approach. So given an input problem, we first generate a tree using our model. Then we expand this tree into a linear sequence and feed it to GPT-3 as input. And then we use the output of GPT-3 as the supervision signal to fine-tune our model. And for other tasks like text completion and image captioning, we directly use teacher forcing on these tasks. So how does this compare with just using a linear chain of thought? Yeah, so one key difference between our approach and the original chain of thought is that in our case, we explicitly represent the hierarchical structure of thoughts. And this can help improve performance because it allows the model to learn more fine-grained atomic operations or facts. For example, for a math word problem like 15 divided by 3 plus 2 equals x, when generating a linear chain of thought, the model might generate something like 15 divided by 3 is 5, then add 2 to get the final answer of 7. But in our case, since we have an explicit hierarchical structure, the model can learn to generate more fine-grained atomic operations or facts like 15 divided by 3 is 5 and add 5 and 2 is 7. And this can help improve performance because it allows the model to learn more fine-grained atomic operations or facts. So how do you represent this tree structure? Yeah, so we use a graph neural network to encode this tree structure. And in particular, we use the Graph CodevNet architecture proposed by DeepMind. This is an efficient and powerful graph neural network architecture that can capture long range dependencies between nodes in the tree. And we also propose some new training techniques to improve the performance of our model on supervised tasks. So one key technique here is that we introduce a novel loss function called tree edit distance loss. This allows us to better align the generated tree with the ground truth tree, which can help improve performance. Another technique we use is that during fine-tuning, we dynamically expand the generated tree into a linear sequence based on the supervision signal from GPT-3 or other teacher models. And this can help improve performance because it allows the model to learn more effective intermediate steps by adapting to the specifics of each task. So how do you decide when to stop expanding? Yeah, so during fine-tuning, we dynamically expand the tree based on the supervision signal from GPT-3 or other teacher models. And in particular, if the output of our model is a leaf node and it matches with the ground truth answer, then we consider this expansion as complete. Otherwise, we continue to expand the tree until either we reach the maximum depth or we find a match between the generated intermediate step and the ground truth sequence. So what’s next for you guys? Yeah, so currently, we are exploring some extensions of our model. For example, one interesting direction is to allow the model to generate trees with different structures for different tasks. And this can help improve performance because it allows the model to learn task-specific decomposition strategies. Another direction we are interested in is to extend our approach to other types of problems like programming and physics simulations. So that’s really cool. I think that’s a very interesting idea. And I do think that there’s something to be said for having a hierarchical structure, because it does allow you to have more fine-grained intermediate steps. And so I think that is an important contribution here. But I also want to point out that this is not the only paper on chain of thought or thought generation. There were actually quite a few others. So there was one by DeepMind called Prompt Learning for Math Word Problems, which basically uses a chain of thought prompt to solve math word problems. And they use a combination of pretraining and fine-tuning. They also have some interesting techniques around how you generate the intermediate steps. There’s another paper by Meta called Chain of Thought with Inner Outer Attention, which is essentially trying to do the same thing as well. So I think that this is an area where there’s a lot of innovation happening right now. And it does seem like it’s having some impact on performance. But I also want to point out that these are all still relatively small scale experiments. And so we need to see if this can really scale up and have a significant impact when you’re dealing with much larger models or more complex tasks. So that’s something to keep an eye on. Another interesting paper in the prompting category is called Prompt-Tuning for Language Model Fine-tuning by OpenAI, which is essentially trying to do parameter efficient fine-tuning of language models using prompts. And so this is a very important topic because we want to be able to use these large language models on different tasks without having to retrain them from scratch or finetune all the parameters. So this is an interesting approach. And I talked to one of the authors, Yuan Cao again, who explained it to me. Here’s the transcript. Basically, in our work, we propose a new method for fine-tuning language models using prompts called prompt-tuning. The key idea here is that instead of finetuning all the parameters of the model, we only finetune a small set of parameters corresponding to the input tokens. And this can help improve performance while reducing the amount of computation required for fine-tuning. So in our experiments, we show that prompt-tuning can achieve competitive performance compared to full fine-tuning on various tasks like text classification and natural language inference. And it can also outperform other parameter efficient methods like prefix tuning or adapter tuning. So how do you actually perform this prompt-tuning? Yeah, so basically, during fine-tuning, we fix all the parameters of the model except for a small set of parameters corresponding to the input tokens. And these parameters are initialized as the learned prompts from pretraining. So in particular, we use the chain of thought pretraining objective proposed by OpenAI to learn these prompts. Then during fine-tuning on supervised tasks, we finetune these prompt parameters together with a small set of output parameters corresponding to the final prediction layer. And for unsupervised tasks like text completion or image captioning, we only finetune the prompt parameters. So how does this compare with other parameter efficient methods like prefix tuning or adapter tuning? Yeah, so one key difference between our approach and these other methods is that in our case, we directly learn the prompts during pretraining. And this can help improve performance because it allows the model to learn task-specific prompt patterns during pretraining. For example, for a text classification task like sentiment analysis, the learned prompt might include some keywords related to sentiment such as positive or negative. And this can help improve performance on downstream tasks because it allows the model to better focus on relevant information when generating outputs. Another key difference is that in our case, we only finetune a small set of parameters corresponding to the input tokens and the final prediction layer. And this can help reduce the amount of computation required for fine-tuning compared to full fine-tuning or other parameter efficient methods like prefix tuning or adapter tuning. So what’s next for you guys? Yeah, so currently, we are exploring some extensions of our method. For example, one interesting direction is to allow the model to learn different prompts for different tasks. And this can help improve performance because it allows the model to learn task-specific prompt patterns during pretraining. Another direction we are interested in</p>
</section>
</section>
<section id="tree-of-thought" class="level2">
<h2 class="anchored" data-anchor-id="tree-of-thought">Tree of Thought</h2>
<section id="gpt-4-10" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-10">gpt-4</h3>
<p>Shen Yu from Princeton University presents “Tree of Thoughts,” a project that explores the potential and limitations of language models in problem-solving. The team, including colleagues from Princeton and Google, investigates whether language models can become general problem solvers by scaling up and using autoregressive inference. They specifically look at complex calculations and reasoning tasks that current models struggle with.</p>
<p>The project uses the game “24” as an example to demonstrate the challenges language models face in solving problems that require multi-step reasoning. They found that even advanced models like GPT-3.5 and GPT-4 struggle with these tasks, often producing hallucinations or incorrect solutions. The research highlights that language models make decisions token by token, left to right, without the capability for deliberate reasoning.</p>
<p>To address this, “Tree of Thoughts” introduces a system that combines language models with search algorithms for more deliberate reasoning. This approach is inspired by Daniel Kahneman’s two-system theory of cognition, where the fast and automatic ‘System 1’ handles everyday tasks, and the slow and deliberate ‘System 2’ manages more complex tasks.</p>
<p>The key elements of the “Tree of Thoughts” method are:</p>
<p>Defining a ‘thought’ as a coherent piece of text that represents a move in reasoning. Using language models to generate and evaluate thoughts. Employing search algorithms to explore and maintain thoughts. In the “Game of 24,” thoughts are defined as intermediate equations, making them easier to generate and evaluate. The language models are used to propose next steps in reasoning, and these steps are then valued based on their potential to lead to a correct solution. The research incorporates a breadth-first search algorithm to explore these thoughts, significantly improving the task success rate compared to the Chain of Thought (CLT) approach.</p>
<p>“Tree of Thoughts” has been applied to various reasoning challenges, including crosswords and creative story writing. The approach allows more flexible and systematic generation, evaluation, and exploration of thoughts in diverse tasks. This method represents a step towards integrating classic AI insights with modern AI technologies, suggesting the possibility of creating autonomous agents that can reason and interact with the external world.</p>
<p>The project’s success demonstrates the potential of combining old AI ideas like tree search with new language models to enhance problem-solving capabilities. The researchers encourage the audience to explore their follow-up paper, “Koala,” which delves into cognitive architectures for language agents. “Tree of Thoughts” offers a promising approach to augment the reasoning abilities of language models, paving the way for more sophisticated AI problem-solving.</p>
</section>
<section id="solar-10.7b-10" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-10">solar-10.7b</h3>
<p>Summary: But you can recover those things as special cases of this more general idea. And it seems like that’s a really good way to go about doing research in AI, where you have these general models that you can then customize and specialize for different tasks or different effects. So I think that’s a really nice paper. In this podcast transcript, Shen Yu from Princeton discusses their joint work with colleagues on Tree of Thoughts, exploring the limitations of language models as general problem solvers through an example task. They highlight how autoregressive inference lacks mechanisms for deliberate reasoning and introduces a new method called Tree of Thoughts to combine language models and search algorithms for improved reasoning. This approach defines thoughts as coherent pieces of text, generates them using language models, and combines them with a search algorithm for exploration and maintenance. The podcast presents various examples, including Game of 24, crossword puzzles, and creative story writing, demonstrating the effectiveness of this method across diverse tasks without requiring model retraining.</p>
</section>
</section>
<section id="tree-of-thought-poster-session" class="level2">
<h2 class="anchored" data-anchor-id="tree-of-thought-poster-session">Tree of Thought Poster Session</h2>
<section id="gpt-4-11" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-11">gpt-4</h3>
<p>The presenter, Shen Yu from Princeton, discusses their paper “Tree of Thoughts,” which examines the interplay between large language models and search algorithms. The paper identifies a limitation in current large language models, like GPT-4, when solving complex reasoning tasks. For example, in the game “24,” where players combine four numbers to make 24, these models struggle due to their autoregressive, token-by-token decision-making process without look-ahead or backtrack capabilities.</p>
<p>To address this, “Tree of Thoughts” proposes a method that combines the generative power of language models with the structured exploration of search algorithms. The approach defines a ‘thought’ as an intermediate step in reasoning, which can be generated and evaluated using language models, and then systematically explored with tree search algorithms. This method allows for more deliberate reasoning and significantly improves task performance without requiring new model training.</p>
<p>In their experiments, they demonstrate how “Tree of Thoughts” can be applied to various tasks, like the game “24” and crossword puzzles, achieving much better results than traditional approaches. For example, in the game “24,” using Tree of Thoughts with a breadth-first search algorithm increased task success from 4% (using Chain of Thought) to 74%.</p>
<p>The paper also explores creative writing tasks, showing that Tree of Thoughts can enhance the creativity of language model outputs by allowing for step-by-step planning and evaluation of different writing plans.</p>
<p>Shen Yu highlights the interdisciplinary nature of their work at Princeton NLP, combining ideas from different fields like cognitive science and classical search. The “Tree of Thoughts” approach represents a significant advancement in leveraging the capabilities of language models for more complex, deliberate reasoning tasks, opening up new possibilities for AI problem-solving.</p>
</section>
<section id="solar-10.7b-11" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-11">solar-10.7b</h3>
<p>Summary: And here’s a bit of our chat with the first author of that paper, Yuan Cao from Google Brain. So what we did is we created a new benchmark called ToolBench. And it consists of 10 different tasks. Each task requires using one specific tool in order to solve it. For example, one task is called Wikipedia link prediction. In this task, you’re given two entities, like Barack Obama and Michelle Obama. Your job is to predict whether there exists a Wikipedia link between these two entities or not. And the way to solve this problem is by using the Wikipedia search tool. So what we did is we created a new training method called Toolformer. And it consists of three components. The first component is called tool embedding. It’s a way to learn the representation for each tool. The second component is called tool selection. It’s a way to decide which tool should be used in order to solve a given task. And the third component is called tool execution, which is a way to execute the selected tool and retrieve the information that we need from it. So what we found is that by using this new training method, we can improve the performance on our benchmark by 10 times compared to previous methods. And we also show that the model trained with Toolformer can generalize to unseen tools. For example, given a task where you need to use Google search in order to solve it, but during training time, we only used Wikipedia. So this shows that our method is able to learn some kind of tool-agnostic knowledge.</p>
<p>In this podcast transcript, the discussion revolves around a research paper exploring the complementary nature of large-language models and search algorithms. The paper highlights limitations in using large-language models alone for tasks requiring exploration, such as the game of 24, where autoregressive inference proves to be unreliable due to its lack of look-ahead and backtrack capabilities.</p>
<p>To address this issue, the researchers propose defining a search space that balances between generating intermediate steps (thoughts) and evaluating them. This approach allows for the use of large language models to generate and evaluate next moves while maintaining them using tree search algorithms. The method significantly improves task performances across various domains without requiring new model training.</p>
<p>The conversation also touches on the potential combination of this search-based approach with self-consistency, as well as an overview of Princeton NLP’s productivity and interdisciplinary collaborations. Additionally, the discussion briefly mentions another paper, Toolformer, which focuses on training language models to use tools effectively by introducing a new benchmark called ToolBench and a new training method called Toolformer. This approach results in a 10x improvement in performance compared to previous methods while demonstrating generalization capabilities for unseen tools.</p>
</section>
</section>
<section id="toolformer" class="level2">
<h2 class="anchored" data-anchor-id="toolformer">Toolformer</h2>
<section id="gpt-4-12" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-12">gpt-4</h3>
<p>Jane, a researcher from FAIR Labs at Meta, presented the “Toolformer” paper, which focuses on enabling language models like ChatGPT to use external tools. The motivation behind Toolformer is to address the limitations of language models in accessing real-time data or performing accurate computations. To achieve this, Toolformer utilizes five different tools: a QA system with up-to-date information, a Wikipedia search tool, a calculator, a calendar, and a translation tool.</p>
<p>The training process of Toolformer involves creating a new dataset augmented with API calls. The API calls are generated using prompts that encourage the model to ask questions relevant to the text. The generated API calls are then executed and embedded back into the training data. This process also includes filtering out irrelevant or unhelpful API calls based on their usefulness in reducing model perplexity.</p>
<p>After fine-tuning GPT-J with this augmented dataset, the resulting model, Toolformer, demonstrated superior performance compared to both its base model GPT-J and GPT-3 in various tasks. These tasks included fact completion, question answering, math computations, and multilingual questions. Toolformer’s effectiveness was notable even in smaller model sizes, with a significant improvement observed in models with at least 775 million parameters.</p>
<p>Moreover, an evaluation of Toolformer’s core language modeling capabilities showed that the introduction of API calls did not disrupt its performance. This suggests that the model can effectively integrate tool usage while maintaining its fundamental language processing abilities.</p>
<p>Finally, Jane mentioned that despite Toolformer’s success, the Voyager paper from NVIDIA, another prominent work in language model architecture, did not receive as much attention as expected at NeurIPS. She encouraged attendees to explore both Toolformer and Voyager for their foundational contributions to language model development.</p>
</section>
<section id="solar-10.7b-12" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-12">solar-10.7b</h3>
<p>Summary: , and posters that are worth checking out this year. I hope you enjoyed the summary. Thank you very much. NeurIPS 2022: What’s new in AI research? | NeurIPS 2022 Recap In this video, we recap some of the most interesting talks and presentations from NeurIPS 2022, one of the largest annual conferences for artificial intelligence researchers. We cover topics such as large language models (LLMs), generative AI, computer vision, and reinforcement learning. - Hi everyone. My name is Jim. And today we’re going to recap some of the most interesting talks from NeurIPS 2022, one of the largest annual conferences for artificial intelligence researchers. We’ll cover topics such as large language models, generative AI, computer vision, and reinforcement learning. So let’s get started. The first talk we want to highlight is by Sam Bowman from DeepMind on the topic of large language models. In this presentation, he discusses several interesting findings about LLMs, including their ability to perform well on a wide range of tasks without explicit task-specific training. He also explores how LLMs can be used for few-shot learning and zero-shot learning, where they can generate high quality text based only on a few examples or no examples at all. Additionally, he demonstrates the power of LLMs in generating code from natural language prompts, which could potentially revolutionize software development. Another interesting aspect discussed is how LLMs can be used to improve other AI systems by providing explanations for their decisions and helping to debug them. Overall, this talk provides a comprehensive overview of the current state-of-the-art in large language models and highlights their potential applications across various fields. The next presentation we want to focus on is by Ian Goodfellow from Google Brain on generative AI. In his talk, he discusses recent advances in generative modeling, which involves creating new data that follows the same distribution as a given dataset. He covers topics such as diffusion models and their ability to generate high resolution images, as well as the use of classifier-free guidance for better control over image generation. Additionally, he presents research on text-to-image synthesis using CLIP, which can produce visually appealing results by aligning the generated images with a given text prompt. Furthermore, Ian Goodfellow introduces the concept of latent diffusion models and their potential to improve the quality of generated images while reducing computational costs. Overall, this talk provides an in-depth look at the latest developments in generative AI and its potential impact on various applications. The next presentation we want to highlight is by Devin Price from Google Research on computer vision. In his talk, he discusses several interesting topics related to object detection and instance segmentation, which involve accurately identifying and localizing objects within an image. He presents research on the use of transformers for object detection, which can improve performance while reducing computational costs compared to traditional convolutional neural networks. Additionally, Devin Price introduces the concept of dynamic range scaling, a simple yet effective technique that can significantly enhance the accuracy of instance segmentation models. Furthermore, he explores the potential of using synthetic data for training object detection and instance segmentation models, which could potentially improve their robustness to real-world scenarios. Overall, this talk provides valuable insights into recent advances in computer vision and offers promising directions for future research. The last presentation we want to cover is by David Abel from OpenAI on the topic of reinforcement learning. In his talk, he discusses several interesting developments in the field, including the use of large language models as a tool for improving reinforcement learning algorithms. He presents research on the use of LLMs for generating diverse and effective exploration strategies, which can help agents learn more efficiently in complex environments. Additionally, David Abel introduces the concept of hierarchical reinforcement learning, where agents can learn to decompose tasks into sub-goals and plan at multiple timescales, potentially enabling them to solve more challenging problems. Furthermore, he explores the use of meta-learning for improving sample efficiency in reinforcement learning, allowing agents to adapt quickly to new environments based on prior experience. Overall, this talk provides an overview of recent advances in reinforcement learning and highlights promising directions for future research. These are just a few of the many interesting talks from NeurIPS 2022. The conference showcased cutting-edge research across various areas of artificial intelligence, providing valuable insights into current trends and potential future developments.</p>
</section>
</section>
<section id="voyager" class="level2">
<h2 class="anchored" data-anchor-id="voyager">Voyager</h2>
<section id="gpt-4-13" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-13">gpt-4</h3>
<p>Guanzhi Wang, a third-year PhD student at Caltech and a research intern at NVIDIA, presented “Voyager,” an innovative project that integrates large language models with embodied agents in the Minecraft environment. Voyager, powered by GPT-4, showcases the ability to play Minecraft autonomously for extended periods, engaging in various activities like exploration, mining, crafting, and combat. The key challenge addressed by Voyager is converting the multi-modal Minecraft environment into a text-based format, achieved using Mineflayer, a JavaScript API with access to game states.</p>
<p>Voyager consists of three primary components: a coding module that writes JavaScript code to control the game bot, a code base acting as a skill library, and a curriculum that proposes tasks based on the agent’s capabilities. The coding module generates executable actions, and the skill library stores successful codes for future use, avoiding redundant efforts. The curriculum, driven by an unsupervised objective to maximize novel item acquisition, evolves progressively, guiding the agent’s learning journey.</p>
<p>A notable feature of Voyager is its iterative prompting mechanism, which refines programs through feedback from the environment, JavaScript execution errors, and self-reflection by another GPT-4 model. This process enables Voyager to efficiently debug and improve its programs. The agent’s skill library, authored by GPT-4 through trial and error, allows Voyager to reuse previously learned skills, enhancing its efficiency and learning capabilities.</p>
<p>Voyager demonstrates impressive performance in Minecraft, outperforming previous methods in acquiring novel items and exploring the game world. The agent’s ability to navigate diverse terrains and engage in various tasks without human intervention highlights its advanced autonomous capabilities. Despite its current limitation of not supporting visual perception, Voyager’s architecture offers a foundation for future development of multimodal models capable of more complex tasks.</p>
<p>In addition to Voyager, the session highlighted “COG eval” by Ida Mumenijad from Microsoft Research, an underrated benchmark paper presented engagingly and interactively. COG eval proposes a quantifiable benchmark for assessing reasoning and planning capabilities in language models, framing problems as graph challenges to generalize reasoning, planning, and search tasks. Although COG eval does not offer solutions, it sets a benchmark for future research in language model capabilities.</p>
</section>
<section id="solar-10.7b-13" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-13">solar-10.7b</h3>
<p>Summary: So this is the COG eval benchmark. It’s a new evaluation framework for reasoning and planning in language models. And it’s inspired by the COG test, which is a cognitive test for humans. And so they have a bunch of different tasks. They have 10 different tasks that are categorized into three main categories– causal reasoning, temporal reasoning, and plan execution. So let me walk through each one of these. Causal reasoning is about understanding the cause and effect relationships between events. Temporal reasoning is about understanding the order in which things happen. And then plan execution is about generating a sequence of actions to achieve some goal. So for causal reasoning, they have four tasks. The first task is called “Cause-Effect.” It’s about identifying the cause or effect from a given pair of statements. The second task is called “Cause-Effect Chain,” where you have multiple events in a chain and you need to identify which event caused some other event downstream. The third task is called “Counterfactual Reasoning.” So this is about understanding what would happen if something else were different. And the fourth task is called “Inverse Causality,” where you’re given an effect, and then you have to generate a cause that could lead to that effect. For temporal reasoning, they have two tasks. The first one is called “Temporal Ordering.” So this is about identifying which event happened before or after another event. And the second task is called “Future Prediction,” where you’re given some events and then you need to predict what will happen next. And for plan execution, they have four tasks. The first one is called “Plan Completion.” It’s about completing a partially specified plan to achieve a goal. The second task is called “Plan Generation.” So this is about generating a full plan from scratch to achieve some goal. The third task is called “Plan Evaluation,” where you need to evaluate whether the given plan will lead to achieving the desired goal or not. And then the fourth task is called “Plan Repair,” where you’re given a broken plan and then you have to fix it so that it achieves the desired goal. So they have these 10 tasks, which are categorized into three main categories– causal reasoning, temporal reasoning, and plan execution. And they have a total of 24,000 examples across all these tasks. They use GPT-3 as their baseline model. And they find that the performance is quite low for all the tasks. So in general, language models are not very good at reasoning and planning. And this is something that we’ve known for a while. But it’s nice to have a benchmark where you can actually quantify how bad they are at these things. And then she also shows some of her proposed solutions, which I think are interesting. So one solution is called “Graph-based Reasoning.” It’s about representing the problem as a graph and then using graph neural networks to reason about that graph. And this is something that we’ve seen before in other papers, where they represent problems as graphs and then use GNNs to solve them. But it’s nice to see that being applied here for reasoning and planning tasks. Another solution that she proposes is called “Prompt Engineering.” So this is about designing better prompts to elicit better performance from language models. And she shows some examples of how they can improve the performance by using different types of prompts. And then finally, she also proposes a new model architecture called “Planner-in-Decoder,” which is about incorporating planning capabilities directly into the decoder of the language model. So this is something that I think is quite interesting because it’s trying to improve the reasoning and planning capabilities of language models without having to train them from scratch, but rather just adding some additional components on top of existing language models. And so these are some of the solutions that she proposes. But again, this is a benchmark paper, so there’s no one solution that she’s proposing as being the best. It’s more about introducing this new evaluation framework and showing how poor the performance currently is for language models on these reasoning and planning tasks. So I think it’s an interesting paper because it’s something that we know is a weakness of current language models, but now we have a quantifiable benchmark to measure their performance in this area. And then it also opens up opportunities for future research into improving the reasoning and planning capabilities of these models. NeurIPS 2022: The Anatomy of Autonomy In this episode, Ilya Sutskever shares his NeurIPS 2022 keynote presentation where he discusses recent breakthroughs in AI research and their implications for the future of autonomy. He covers topics such as chain-of-thought reasoning, tool use, planning, and embodiment.</p>
</section>
</section>
<section id="cogeval" class="level2">
<h2 class="anchored" data-anchor-id="cogeval">CogEval</h2>
<section id="gpt-4-14" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-14">gpt-4</h3>
<p>In her presentation at NeurIPS, Ida Mumenijad, with 15 years of experience in reinforcement learning, cognitive science, and neuroscience, introduced COG eval, a systematic protocol for evaluating cognitive capacities in agents. COG eval is designed to operationalize latent abilities through multiple tasks in different structures, domains, and conditions, ensuring the accurate measurement of the targeted cognitive ability without confounding factors.</p>
<p>The protocol involves six different graph structures and tasks in spatial and social domains, with 15 distinct tasks inspired by Edward Tolman’s work on cognitive maps. The goal is to systematically assess whether Large Language Models (LLMs) can extract cognitive maps from environment descriptions and use them for planning and problem-solving. The tasks are designed to test the models’ robustness and flexibility in planning, particularly in response to local changes in the environment.</p>
<p>Mumenijad’s evaluation reveals that LLMs, including GPT-4, struggle with planning tasks. In various graph structures, the models often misinterpret or hallucinate edges, fail to follow logical paths, and demonstrate poor performance in tasks requiring accurate and flexible planning. The failure modes include creating loops in shortest paths and incorrectly stitching together one-step tuples, indicating limitations in the models’ planning capabilities.</p>
<p>The presentation also touched on the potential improvements to LLMs’ planning abilities through additional instructions, such as describing breadth-first and depth-first search methods. However, even with this extra guidance, the models showed limited improvement, particularly in complex scenarios like finding shortest paths between distant clusters.</p>
<p>Overall, Mumenijad’s presentation at NeurIPS highlighted the need for better planning capabilities in LLMs, underscoring the current limitations and suggesting directions for future research and development in this area.</p>
</section>
<section id="solar-10.7b-14" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-14">solar-10.7b</h3>
<p>Summary: this is it. NeurIPS 2022: A Recap of the Conference in Podcast Form (Part 3) In this third part of our NeurIPS 2022 recap podcast series, we cover a variety of topics including: - The challenges and limitations of LLMs in planning tasks, as discussed by Dr.&nbsp;Nada Lavrac from UC San Diego. - A prefrontal cortex-inspired modular architecture for solving complex problems using GPT-4. - State space models and their significance, as presented by Chris Ray from Stanford University.</p>
</section>
</section>
<section id="state-space-models" class="level2">
<h2 class="anchored" data-anchor-id="state-space-models">State Space Models</h2>
<section id="gpt-4-15" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-15">gpt-4</h3>
<p>Chris Ray, in his NeurIPS 2023 presentation, discussed the motivation and development of new models that efficiently handle long sequences, a challenge for standard models like transformers which scale quadratically with sequence length. His real motivation was exploring the inductive bias issue: understanding if machines need spatial inductive bias to reason like humans. Ray highlighted Long Range Arena, a benchmark for evaluating efficient attention in models, showcasing how various linear attention variants perform on tasks like image classification (Sequential CIFAR) and PathX.</p>
<p>The focus then shifted to signal processing and the use of state-space models (SSMs) in deep learning. He introduced S4, a simple yet powerful state-space model, inspired by signal processing ideas, that unifies CNN and RNN models. Ray emphasized the importance of stability in these models, which can be ensured by maintaining certain eigenvalue structures. Practical challenges like implementing these models efficiently and maintaining their stability were addressed.</p>
<p>Ray also pointed out the limitations of S4 in language tasks, evidenced by its higher perplexity compared to transformers. To address this, they analyzed the model’s performance on tasks requiring multi-query lookups, finding that attention models handle such tasks with fewer dimensions than convolutional models. Recent advancements like Mamba and Based have closed the gap with attention models in language tasks, suggesting that removing attention doesn’t fundamentally limit model performance.</p>
<p>Finally, Ray explored the future potential of AI systems, emphasizing the rapid progress in model inference and the distinction between low-latency and high-throughput systems. He highlighted the broad spectrum of opportunities in AI and systems research, from programming models to accelerator hardware, underlying the importance of efficient, scalable models in various applications. The talk concluded with an encouragement to explore the full potential of AI in system design and implementation.</p>
</section>
<section id="solar-10.7b-15" class="level3">
<h3 class="anchored" data-anchor-id="solar-10.7b-15">solar-10.7b</h3>
<p>Summary: and it’s a lot of music.</p>
<p>an algorithmic music. a little bit, so we’re talking about the music, but it’s a lot of music, and that’s an algorithmic music, and it’s a lot of music. I’m talking about music. that’s a lot of music, and it’s a lot of music, and it’s a lot of music, so it’s a little bit of music, but it’s a lot of music, and it’s a lot of music. a lot of music, and this is a lot of music, and it’s a lot of music. it’s a lot of music. music. a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music. It’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot of music, and it’s a lot, and it’s a lot, and it’s a lot, so it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot of music. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a little bit, and it’s a lot. This is an interesting things like this is, I thinking, it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot. It’s a lot, and this is a lot, and it’s a lot, and it’s interesting things like a lot. But it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and it’s a lot, and this is a lot, and it’s a lot, and it’s a lot, and it’s interestingly, and it’s interesting things. It’s interesting things, but we can see the thing. It’s like it’s interestingly, and it’s interesting things, and it’s interesting things. It’s interesting things, and this is, and it’s interesting, and it’s interesting things. It’s interesting things. It’s interesting things, and it’s interesting things, and it’s interesting things. It’s interesting things, but it’s interesting things. It’s interesting things. There’s interesting things. It’s interesting things. So, like this. There’sssss interesting things. I thinks. It’s interesting things. This is, and it’sssss interesting things. And it’ssssss - it’ssss because it’ssss very small. So, like a lot of times. It’sssss very, and this. It’ssssss and it’sssss and it’sss interesting things. I thinks, but it’sss and it’sss - because there are interesting things. There’sss and it’ssss - it’ss very, like this, it’ss very, it’ssss and it’sss and it’sss and it’ss interesting things, but it’sss and it’sss interesting things. It’ss and it’ss and it’sss and it’sss interesting things. There’sss and it’ss and it’sss and it’sss and this is, and it’ss and it’ss very, and it’ss and it’ss and it’ss and it’sss and it’s interesting things. It’s and 4. This. I thinks and we can - that means that there are interesting stuff. That’s interestingly. s. It’ss and this, and it’ss and this. We can you know. There’s a lot ofinteresting things. So, like this is and it’sss and I thinks and it’sss and it’sss - it’sss and it’sss and this. s there’sss interestingly, but we can - it’ss - its interesting. It’ssss interesting. So, it’sss and it’ssss - it’ssss and it’ssss - this. We can do because you know. You can really- this. I thinks and it’sss and it’ssss - that’ss and we’s and I guess, like this, and 1. s. So, there’ss and it’ss and it’sss and so far. It’ssss and it’sss and it’ss and it’ss - this. There’ss and then there’sss and the things and the most interestingly, whichs becauses - this is actually, like this is very- it’s importantly, it’ss interestingly, it’sss interestingly, there’sssss - this. There’sss and we’ss of There are interestingly. So, there’s interestingly. It’s and it’sss and this is like this. We’re very-like this. And that way bettermention. I thinks becauses and it’s - it’s because we’s because its becauses because this. This because you’re interestingly, like this is like this is like this is like this is like this. It’ss interestingly, like this. It’s interestingly. So I thinks. There are actually. It’s likethis. It’ss interestingly. It’s interestingly. This is interestingly. They’s interestingly. It’s interestingly. We can you know - this is becauses interesting things, whichs and it’s interestingly, but we’re very- so far. So, likethis. I thinks. There are two things. We’ves and this. This. You know. There’s interestingly. It’s interestingly. It’sllsllla. So, there is and it’s and it’s and we can do and that one things and this. And then there are interestingly. It’s likethis. We’s interestingly, but also -</p>


</section>
</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <category>Summarization</category>
  <category>NeurIPS</category>
  <guid>https://lawwu.github.io/blog.html/posts/2024-01-04-llm-summarization-neurips/</guid>
  <pubDate>Thu, 04 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Google Gemini and Function Calling</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-12-26-google-gemini-function-calling/</link>
  <description><![CDATA[ 




<p>Google’s latest LLM called Gemini was released in December. Google trained three model sizes: Nano, Gemini and Ultra (small, medium and large respectively). Ultra hasn’t been released publicly yet. There are reports that Gemini has similar performance to <code>gpt-3.5-turbo</code>. Based on lmsys’ <a href="https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboard">Chatbot Arena Leaderboard</a>, Gemini Pro’s Elo is <code>1111</code> while <code>gpt-3.5-turbo-0613</code> is a tick higher at <code>1117</code> (as of this writing 2023-12-26).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lawwu.github.io/blog.html/posts/2023-12-26-google-gemini-function-calling/chatbot_arena_leaderboard_20231226.png" class="img-fluid figure-img"></p>
<figcaption>Chatbot Arena Leaderboard as of 2023-12-26</figcaption>
</figure>
</div>
<section id="how-to-run-gemini-pro-with-langchain" class="level1">
<h1>How to Run Gemini Pro with langchain</h1>
<p>You’ll need two Python libraries:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">google-cloud-aiplatform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>=1.38.0</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">langchain</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>=0.0.350</span></code></pre></div>
<p>With those installed, you can run:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.llms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VertexAI</span>
<span id="cb2-2"> </span>
<span id="cb2-3">llm_gemini_pro <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VertexAI(</span>
<span id="cb2-4">    model_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gemini-pro"</span>,</span>
<span id="cb2-5">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>,</span>
<span id="cb2-6">    max_output_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,</span>
<span id="cb2-7">)</span>
<span id="cb2-8"> </span>
<span id="cb2-9">llm_gemini_pro.invoke(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What's the difference between data science and data engineering?"</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the answer is pretty good</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data science and data engineering are two closely related but distinct fields that play crucial roles in extracting insights from data. While both involve working with data, they have different objectives, skill sets, and responsibilities. Here are the key differences between data science and data engineering:</span></span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. **Objective**:</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Science: The primary objective of data science is to extract insights from data to make informed decisions. Data scientists use statistical and machine learning techniques to uncover patterns, predict outcomes, and develop models to solve business problems.</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Engineering: Data engineers focus on building and maintaining the infrastructure that enables data scientists to access, process, and analyze data effectively. They ensure that data is collected, cleaned, transformed, and stored in a way that makes it accessible and usable for data analysis.</span></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. **Skill Sets**:</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Science: Data scientists typically have a strong background in mathematics, statistics, computer science, and programming languages like Python and R. They are proficient in data mining, machine learning algorithms, and statistical modeling.</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Engineering: Data engineers possess expertise in database management systems, data integration tools, cloud computing platforms, and distributed systems. They are skilled in data modeling, data warehousing, and data pipelines.</span></span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. **Responsibilities**:</span></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Science:</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Develop and implement machine learning models for predictive analytics, classification, and regression.</span></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Analyze large datasets to identify patterns, trends, and anomalies.</span></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Build data visualization dashboards and reports to communicate insights to stakeholders.</span></span>
<span id="cb2-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Collaborate with business teams to understand their needs and translate them into actionable insights.</span></span>
<span id="cb2-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Engineering:</span></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Design and implement data pipelines for data ingestion, transformation, and storage.</span></span>
<span id="cb2-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Ensure data quality and consistency by cleaning, validating, and normalizing data.</span></span>
<span id="cb2-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Develop and maintain data warehouses and data lakes for efficient data storage and retrieval.</span></span>
<span id="cb2-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      - Collaborate with data scientists to provide them with the necessary data and infrastructure for analysis.</span></span>
<span id="cb2-33"></span>
<span id="cb2-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. **Tools and Technologies**:</span></span>
<span id="cb2-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Science: Data scientists commonly use tools like Python, R, Jupyter Notebooks, Pandas, NumPy, Scikit-learn, and TensorFlow for data analysis and machine learning.</span></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Engineering: Data engineers work with tools such as Apache Hadoop, Apache Spark, Apache Hive, Apache Kafka, SQL databases, NoSQL databases, and cloud-based data storage services like Amazon S3 and Google Cloud Storage.</span></span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span id="cb2-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Science: Data scientists can progress in their careers by becoming senior data scientists, data science managers, or even chief data scientists. They may also transition into roles such as machine learning engineers or research scientists.</span></span>
<span id="cb2-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    - Data Engineering: Data engineers can advance to become senior data engineers, data architects, or big data engineers. They may also move into roles in cloud engineering, data governance, or data security.</span></span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In summary, data science focuses on extracting insights from data to make informed decisions, while data engineering focuses on building and maintaining the infrastructure that enables data analysis. Both fields are crucial for organizations to effectively manage and utilize their data, and they often work together to deliver data-driven solutions for businesses.</span></span></code></pre></div>
</section>
<section id="gemini-pro-and-function-calling" class="level1">
<h1>Gemini Pro and Function Calling</h1>
<ul>
<li>My learnings are only from text based use cases as I haven’t really tried the multi-modal capabilities yet (e.g.&nbsp;vision)</li>
<li>My “vibe check” of Gemini Pro is it is a much improved model compared to <code>text-bison</code> and <code>text-unicorn</code>. It is able to follow instructions much more reliably than the previous models that were based on PaLM2.</li>
<li>One feature that I was particularly excited to see Google add is <a href="https://cloud.google.com/vertex-ai/docs/generative-ai/multimodal/function-calling">function calling</a>.</li>
<li>Here are some <a href="https://cloud.google.com/vertex-ai/docs/generative-ai/multimodal/function-calling#function-calling-sdk-samples">function calling examples</a> from Google’s documentation.</li>
<li>This <a href="https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/function-calling/intro_function_calling.ipynb">intro to function calling Jupyter notebook</a> was very helpful to get started with function calling.</li>
<li>As of this writing (2023-12-26), langchain doesn’t support Google Gemini’s function calling. I opened an <a href="https://github.com/langchain-ai/langchain/issues/15073">issue</a> and it looks like there’s already a <a href="https://github.com/langchain-ai/langchain/pull/15146">PR</a> to add this feature.</li>
</ul>
</section>
<section id="function-calling-basic-usage" class="level1">
<h1>Function Calling Basic Usage</h1>
<p>To use function calling with Gemini, you can first define a function:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> vertexai.preview <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> generative_models</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> vertexai.preview.generative_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GenerativeModel</span>
<span id="cb3-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GenerativeModel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gemini-pro"</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5">get_current_weather_func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generative_models.FunctionDeclaration(</span>
<span id="cb3-6">  name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_current_weather"</span>,</span>
<span id="cb3-7">  description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Get the current weather in a given location"</span>,</span>
<span id="cb3-8">  parameters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-9">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb3-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb3-11">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: {</span>
<span id="cb3-12">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb3-13">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The city and state, e.g. San Francisco, CA"</span></span>
<span id="cb3-14">          },</span>
<span id="cb3-15">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: {</span>
<span id="cb3-16">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb3-17">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enum"</span>: [</span>
<span id="cb3-18">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celsius"</span>,</span>
<span id="cb3-19">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fahrenheit"</span>,</span>
<span id="cb3-20">              ]</span>
<span id="cb3-21">          }</span>
<span id="cb3-22">      },</span>
<span id="cb3-23">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [</span>
<span id="cb3-24">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span></span>
<span id="cb3-25">      ]</span>
<span id="cb3-26">  },</span>
<span id="cb3-27">)</span></code></pre></div>
<p>Then you create a tool with that function</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">weather_tool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generative_models.Tool(</span>
<span id="cb4-2">  function_declarations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[get_current_weather_func]</span>
<span id="cb4-3">)</span></code></pre></div>
<p>Then when you call the LLM, you pass the tool to the call:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">model_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate_content(</span>
<span id="cb5-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the weather like in Boston?"</span>,</span>
<span id="cb5-3">    generation_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb5-4">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[weather_tool],</span>
<span id="cb5-5">)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_response</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, model_response)</span></code></pre></div>
<p>The model will output something like this:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">candidates {</span>
<span id="cb6-2">  content {</span>
<span id="cb6-3">    role: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span></span>
<span id="cb6-4">    parts {</span>
<span id="cb6-5">      function_call {</span>
<span id="cb6-6">        name: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_current_weather"</span></span>
<span id="cb6-7">        args {</span>
<span id="cb6-8">          fields {</span>
<span id="cb6-9">            key: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span></span>
<span id="cb6-10">            value {</span>
<span id="cb6-11">              string_value: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Boston, MA"</span></span>
<span id="cb6-12">            }</span>
<span id="cb6-13">          }</span>
<span id="cb6-14">        }</span>
<span id="cb6-15">      }</span>
<span id="cb6-16">    }</span>
<span id="cb6-17">  }</span>
<span id="cb6-18">  finish_reason: STOP</span>
<span id="cb6-19">  safety_ratings {</span>
<span id="cb6-20">    category: HARM_CATEGORY_HARASSMENT</span>
<span id="cb6-21">    probability: NEGLIGIBLE</span>
<span id="cb6-22">  }</span>
<span id="cb6-23">  safety_ratings {</span>
<span id="cb6-24">    category: HARM_CATEGORY_HATE_SPEECH</span>
<span id="cb6-25">    probability: NEGLIGIBLE</span>
<span id="cb6-26">  }</span>
<span id="cb6-27">  safety_ratings {</span>
<span id="cb6-28">    category: HARM_CATEGORY_SEXUALLY_EXPLICIT</span>
<span id="cb6-29">    probability: NEGLIGIBLE</span>
<span id="cb6-30">  }</span>
<span id="cb6-31">  safety_ratings {</span>
<span id="cb6-32">    category: HARM_CATEGORY_DANGEROUS_CONTENT</span>
<span id="cb6-33">    probability: NEGLIGIBLE</span>
<span id="cb6-34">  }</span>
<span id="cb6-35">}</span>
<span id="cb6-36">usage_metadata {</span>
<span id="cb6-37">  prompt_token_count: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb6-38">  total_token_count: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb6-39">}</span></code></pre></div>
</section>
<section id="function-calling-data-extraction" class="level1">
<h1>Function Calling &amp; Data Extraction</h1>
<p>One very useful use case for function calling is robust semantic data extraction. Without LLM’s that support function calling, you can already do semantic data extraction. With a prompt like “extract name, age and hair color from this block of text and return the data in JSON” and a large enough LLM, this will already get you pretty far. This is an <a href="https://python.langchain.com/docs/modules/model_io/output_parsers/">example</a> with gpt-3.5, langchain and one of langchain’s output parsers <code>PydanticOutputParser</code>. However, some issues are:</p>
<ul>
<li>the LLM may not always return valid JSON</li>
<li>the LLM may return keys that are named differently</li>
<li>the LLM may not return all the keys</li>
</ul>
<p>The reason I say function calling supports <strong>robust</strong> semantic data extraction is the LLM will always return valid JSON and a schema that matches the schema you have defined.</p>
</section>
<section id="data-extraction-example" class="level1">
<h1>Data Extraction Example</h1>
<section id="extracting-person-metadata" class="level2">
<h2 class="anchored" data-anchor-id="extracting-person-metadata">Extracting Person Metadata</h2>
<p>I modified <a href="https://python.langchain.com/docs/use_cases/extraction">langchain’s Function Calling Extraction use case</a> which uses OpenAI to work with Gemini Pro.</p>
<p>First do the necessary imports:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> vertexai.preview.generative_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb7-2">    FunctionDeclaration,</span>
<span id="cb7-3">    GenerativeModel,</span>
<span id="cb7-4">    Tool,</span>
<span id="cb7-5">)</span></code></pre></div>
<p>Then define your function and tool:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">func_person_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FunctionDeclaration(</span>
<span id="cb8-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person_extractor"</span>,</span>
<span id="cb8-3">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extract data about a person from the text"</span>,</span>
<span id="cb8-4">    parameters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb8-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb8-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb8-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: {</span>
<span id="cb8-8">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb8-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name of a person"</span>,</span>
<span id="cb8-10">            },</span>
<span id="cb8-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>: {</span>
<span id="cb8-12">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>,</span>
<span id="cb8-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Height of a person"</span>,</span>
<span id="cb8-14">            },</span>
<span id="cb8-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hair_color"</span>: {</span>
<span id="cb8-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb8-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hair Color"</span></span>
<span id="cb8-18">            }</span>
<span id="cb8-19">        },</span>
<span id="cb8-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>]</span>
<span id="cb8-21">    },</span>
<span id="cb8-22">    </span>
<span id="cb8-23">)</span>
<span id="cb8-24">tool_person_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tool(</span>
<span id="cb8-25">    function_declarations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[func_person_extractor],</span>
<span id="cb8-26">)</span></code></pre></div>
<p>Instantiate the gemini-pro model, pass the tool to the model and call the model with a prompt:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have to use the model directly from vertexai since function calling not available through langchain</span></span>
<span id="cb9-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GenerativeModel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gemini-pro"</span>)</span>
<span id="cb9-3">person_example_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate_content(</span>
<span id="cb9-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde."</span>,</span>
<span id="cb9-5">    generation_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb9-6">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[tool_person_extractor],</span>
<span id="cb9-7">)</span>
<span id="cb9-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(person_example_1)</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">candidates</span> {</span>
<span id="cb10-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">content</span> {</span>
<span id="cb10-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">role:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span></span>
<span id="cb10-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parts</span> {</span>
<span id="cb10-5">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">function_call</span> {</span>
<span id="cb10-6">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person_extractor"</span></span>
<span id="cb10-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span> {</span>
<span id="cb10-8">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb10-9">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb10-10">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb10-11">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alex"</span></span>
<span id="cb10-12">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-13">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-14">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb10-15">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span></span>
<span id="cb10-16">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb10-17">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">number_value:</span> 5</span>
<span id="cb10-18">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-19">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-20">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb10-21">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hair_color"</span></span>
<span id="cb10-22">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb10-23">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blonde"</span></span>
<span id="cb10-24">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-25">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb10-27">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prompt_token_count:</span> 29</span>
<span id="cb10-28">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">total_token_count:</span> 29</span>
<span id="cb10-29"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="extracting-extra-info" class="level2">
<h2 class="anchored" data-anchor-id="extracting-extra-info">Extracting “Extra Info”</h2>
<p>What’s also powerful about function calling based data extraction like the langchain example documents, “we can ask for things that are not for explicitly enumerated in the schema.” In the following example, we are asking for metadata about a person and a dog. And then by leveraging the LLM’s reasoning capability, we can ask for unspecified additional information about the dogs.</p>
<p>First define another function and wrap it in a tool:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">func_person_and_dog_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FunctionDeclaration(</span>
<span id="cb11-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person_extractor"</span>,</span>
<span id="cb11-3">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extract data about a person from the text"</span>,</span>
<span id="cb11-4">    parameters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb11-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb11-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb11-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: {</span>
<span id="cb11-8">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb11-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name of a person"</span>,</span>
<span id="cb11-10">            },</span>
<span id="cb11-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>: {</span>
<span id="cb11-12">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>,</span>
<span id="cb11-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Height of a person"</span>,</span>
<span id="cb11-14">            },</span>
<span id="cb11-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hair_color"</span>: {</span>
<span id="cb11-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb11-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hair Color"</span></span>
<span id="cb11-18">            },</span>
<span id="cb11-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_name"</span>: {</span>
<span id="cb11-20">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb11-21">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name of a dog"</span>,</span>
<span id="cb11-22">            },</span>
<span id="cb11-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_breed"</span>: {</span>
<span id="cb11-24">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb11-25">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Breed of dog"</span>,</span>
<span id="cb11-26">            },</span>
<span id="cb11-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_extra_info"</span>: {</span>
<span id="cb11-28">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb11-29">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extra information about the dog"</span></span>
<span id="cb11-30">            }</span>
<span id="cb11-31">        },</span>
<span id="cb11-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hair_color"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_breed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_extra_info"</span>]</span>
<span id="cb11-33">    },</span>
<span id="cb11-34">    </span>
<span id="cb11-35">)</span>
<span id="cb11-36">tool_person_and_dog_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tool(</span>
<span id="cb11-37">    function_declarations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[func_person_and_dog_extractor],</span>
<span id="cb11-38">)</span></code></pre></div>
<p>Then call the LLM:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde.</span></span>
<span id="cb12-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Willow is a German Shepherd that likes to play with other dogs and can always be found playing with Milo, a border collie that lives close by."""</span></span>
<span id="cb12-3"></span>
<span id="cb12-4">example_2_person_and_dog <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate_content(</span>
<span id="cb12-5">    inp,</span>
<span id="cb12-6">    generation_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb12-7">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[tool_person_and_dog_extractor],</span>
<span id="cb12-8">)</span>
<span id="cb12-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(example_2_person_and_dog)</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">candidates</span> {</span>
<span id="cb13-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">content</span> {</span>
<span id="cb13-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">role:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span></span>
<span id="cb13-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parts</span> {</span>
<span id="cb13-5">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">function_call</span> {</span>
<span id="cb13-6">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person_extractor"</span></span>
<span id="cb13-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">args</span> {</span>
<span id="cb13-8">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-9">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb13-10">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-11">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Willow"</span></span>
<span id="cb13-12">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-13">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-14">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-15">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span></span>
<span id="cb13-16">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-17">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">null_value:</span> NULL_VALUE</span>
<span id="cb13-18">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-19">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-20">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-21">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hair_color"</span></span>
<span id="cb13-22">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-23">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">null_value:</span> NULL_VALUE</span>
<span id="cb13-24">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-25">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-26">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-27">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_name"</span></span>
<span id="cb13-28">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-29">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Milo"</span></span>
<span id="cb13-30">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-31">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-32">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-33">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_extra_info"</span></span>
<span id="cb13-34">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-35">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"likes to play with other dogs and can always be found playing with Milo, a border collie that lives close by."</span></span>
<span id="cb13-36">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-37">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-38">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fields</span> {</span>
<span id="cb13-39">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog_breed"</span></span>
<span id="cb13-40">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value</span> {</span>
<span id="cb13-41">              <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">string_value:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"German Shepherd"</span></span>
<span id="cb13-42">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-43">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-44">        <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-45">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-46">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-47">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-48">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">finish_reason:</span> STOP</span>
<span id="cb13-49">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">safety_ratings</span> {</span>
<span id="cb13-50">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">category:</span> HARM_CATEGORY_HARASSMENT</span>
<span id="cb13-51">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">probability:</span> NEGLIGIBLE</span>
<span id="cb13-52">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-53">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">safety_ratings</span> {</span>
<span id="cb13-54">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">category:</span> HARM_CATEGORY_HATE_SPEECH</span>
<span id="cb13-55">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">probability:</span> NEGLIGIBLE</span>
<span id="cb13-56">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-57">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">safety_ratings</span> {</span>
<span id="cb13-58">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">category:</span> HARM_CATEGORY_SEXUALLY_EXPLICIT</span>
<span id="cb13-59">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">probability:</span> NEGLIGIBLE</span>
<span id="cb13-60">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-61">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">safety_ratings</span> {</span>
<span id="cb13-62">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">category:</span> HARM_CATEGORY_DANGEROUS_CONTENT</span>
<span id="cb13-63">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">probability:</span> NEGLIGIBLE</span>
<span id="cb13-64">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-65"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-66"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usage_metadata</span> {</span>
<span id="cb13-67">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prompt_token_count:</span> 59</span>
<span id="cb13-68">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">total_token_count:</span> 59</span>
<span id="cb13-69"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Gemini does not do as good of a job extracting data from free text. For example, in the trivial example above:</p>
<ul>
<li>the person’s height and hair color are null when both those two data points are in the input prompt</li>
<li>there are two people but Gemini only extracts one person’s info</li>
<li>Gemini also confuses the names of the dogs and people. <code>Willow</code> is assigned to name when it is actually the name of a dog. The name of the dog it extracts is correct in <code>Milo</code> but the breed it associates with <code>Milo</code> is incorrect, as it should be <code>Border Collie</code>.</li>
</ul>
<p>gpt-3-5-turbo does a better job of extracting all the relevant information and not hallucinating:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_name'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Alex'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_height'</span>: 5, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_hair_color'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blonde'</span>},</span>
<span id="cb14-2"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_name'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Claudia'</span>,</span>
<span id="cb14-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_height'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> 6,</span>
<span id="cb14-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'person_hair_color'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brunette'</span>},</span>
<span id="cb14-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_name'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Willow'</span>,</span>
<span id="cb14-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_breed'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'German Shepherd'</span>,</span>
<span id="cb14-7">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_extra_info'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'likes to play with other dogs'</span>},</span>
<span id="cb14-8"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_name'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Milo'</span>,</span>
<span id="cb14-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_breed'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'border collie'</span>,</span>
<span id="cb14-10">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dog_extra_info'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lives close by'</span>}]</span></code></pre></div>
<p>Hopefully Google continues to iterate and improve upon Gemini Pro’s function calling capabilities. I imagine Gemini Ultra will do a better job out of the box as well.</p>


</section>
</section>

 ]]></description>
  <category>LLMs</category>
  <category>Google</category>
  <category>Gemini</category>
  <category>Function Calling</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-12-26-google-gemini-function-calling/</guid>
  <pubDate>Tue, 26 Dec 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Whisper Transcripts</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-11-15-whisper-transcripts/</link>
  <description><![CDATA[ 




<section id="whisper-and-whisper.cpp" class="level1">
<h1>Whisper and whisper.cpp</h1>
<p><a href="https://github.com/openai/whisper">Whisper</a> is a speech recognition model by OpenAI that is open source. It is a multi-task, multilingual model that can perform speech recognition, speech translation and language identification. It was released in September 2022 and achieved state of the art results. The latest model is <a href="https://huggingface.co/openai/whisper-large-v3">whisper-large-v3</a> which OpenAI released on their Dev Day.</p>
<p>I had heard about Whisper when it was released but got interested in using Whisper after <a href="https://twitter.com/ggerganov?lang=en">Georgi Gerganov</a> of <a href="https://github.com/ggerganov/llama.cpp">llama.cpp</a> fame created an equivalent library called <a href="https://github.com/ggerganov/whisper.cpp">whisper.cpp</a>. He ported Whisper to C/C++ and also added accelerated inference on Apple Metal. This means that llama.cpp and whisper.cpp both allow you to run these transformer based models locally using a CPU or if you have a M1/M2/M3 Mac, to run these models at a reasonable speed.</p>
</section>
<section id="using-whisper.cpp" class="level1">
<h1>Using whisper.cpp</h1>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/ggerganov/whisper.cpp</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> whisper.cpp</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> clean</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-j</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download a model</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> ./models/download-ggml-model.sh large</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run inference</span></span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./main</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> models/ggml-large.bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> samples/jfk.wav</span></code></pre></div>
<section id="speed-benchmarks" class="level2">
<h2 class="anchored" data-anchor-id="speed-benchmarks">Speed benchmarks</h2>
<p>The accuracy of Whisper’s large model is quite good. Coupled with the accelerated inference that whisper.cpp offers on a Mac, it’s becoming easy to transcribe audio quickly and accurately. For example, running <code>ggml-large-v2</code>, I can transcribe around 1 hour of audio in about 13 minutes on an M2 Pro (200 GB/s) or in 4 minutes on an M2 Ultra (800 GB/s).</p>
</section>
</section>
<section id="building-a-personal-transcript-repository" class="level1">
<h1>Building a personal transcript repository</h1>
<p>One use case is building a personal transcript library. I enjoy listening to podcasts and sermons and often like to reference what was said. Having a transcript handy makes this trivial. I was inspired by what Andrej Karpathy created in transcribing Lex Fridman’s podcasts: <a href="https://karpathy.ai/lexicap/" class="uri">https://karpathy.ai/lexicap/</a> and built something similar for a handful of podcasts I enjoy listening to: <a href="https://lawwu.github.io/transcripts/" class="uri">https://lawwu.github.io/transcripts/</a>.</p>
<ul>
<li><a href="https://lawwu.github.io/transcripts/index_ai_explained.html">AI Explained</a></li>
<li><a href="https://lawwu.github.io/transcripts/index_all_in.html">All In</a></li>
<li><a href="https://lawwu.github.io/transcripts/index_lex_fridman.html">Lex Fridman</a></li>
<li><a href="https://lawwu.github.io/transcripts/index_radical_personal_finance.html">Radical Personal Finance</a></li>
</ul>
<p>The code to generate the transcripts using Whisper and to generate the webpages is here: <a href="https://github.com/lawwu/transcripts" class="uri">https://github.com/lawwu/transcripts</a>.</p>
</section>
<section id="related-whisper-libraries" class="level1">
<h1>Related Whisper libraries</h1>
<p>There are other libraries that allow you to run Whisper faster.</p>
<ul>
<li><a href="https://github.com/guillaumekln/faster-whisper" class="uri">https://github.com/guillaumekln/faster-whisper</a></li>
<li><a href="https://github.com/sanchit-gandhi/whisper-jax" class="uri">https://github.com/sanchit-gandhi/whisper-jax</a></li>
<li><a href="https://github.com/huggingface/distil-whisper" class="uri">https://github.com/huggingface/distil-whisper</a></li>
<li><a href="https://github.com/MahmoudAshraf97/whisper-diarization" class="uri">https://github.com/MahmoudAshraf97/whisper-diarization</a></li>
<li><a href="https://github.com/Vaibhavs10/insanely-fast-whisper" class="uri">https://github.com/Vaibhavs10/insanely-fast-whisper</a></li>
</ul>


</section>

 ]]></description>
  <category>Whisper</category>
  <category>ASR</category>
  <category>Transcripts</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-11-15-whisper-transcripts/</guid>
  <pubDate>Wed, 15 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>AI Engineer Summit 2023</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-10-10-ai-engineer-summit/</link>
  <description><![CDATA[ 




<section id="ai-engineer-summit" class="level1">
<h1>AI Engineer Summit</h1>
<p>sywx was the <a href="https://www.latent.space/p/ai-engineer">first</a> to define the job title “AI Engineer” as a role in between a Data Scientist and Full Stack Software Engineer, someone that builds on top of large foundation models and can quickly build services using these models. I agree with him that this job function will likely expand whether you hold the job title of “AI Engineer” or not.</p>
<p>I had the privilege of attending the inaugural AI Engineer Summit in San Francisco, CA held on October 9-10, 2023. It was somewhat surprising being one of the few data scientists at the conference as most people I met were software engineers trying to transition into AI Engineering.</p>
<p>The talks were livestreamed (<a href="https://www.youtube.com/watch?v=veShHxQYPzo&amp;ab_channel=AIEngineer">Day 1</a> and <a href="https://www.youtube.com/watch?v=qw4PrtyvJI0">Day 2</a>). Below are my notes from the conference.</p>
<section id="workshop-building-evaluating-and-optimizing-your-rag-app-for-production" class="level2">
<h2 class="anchored" data-anchor-id="workshop-building-evaluating-and-optimizing-your-rag-app-for-production">Workshop: Building, Evaluating, and Optimizing your RAG App for Production</h2>
<p>Simon Suo, Cofounder / CTO, LlamaIndex<br>
</p>
<ul>
<li>Very indepth workshop on how to build an end to end RAG app over Ray documentation, also using Ray to build it. Slides are in the repo below.</li>
<li><a href="https://github.com/Disiok/ai-engineer-workshop" class="uri">https://github.com/Disiok/ai-engineer-workshop</a></li>
<li>Hallucinations: Most of the time it is caused by irrelevant retrieved passages</li>
<li>Evaluation: can think of both end-to-end evaluation and component-wise evaluation of a RAG app
<ul>
<li>End-to-end: understand how well the full RAG application works</li>
<li>Component-wise: understand specific components like the retriever (are we retrieving the relevant context?) and the generation (given the context, are we generating an accurate and coherent answer?)</li>
</ul></li>
<li>Data Required
<ul>
<li>User Query: representative set of real user queries</li>
<li>User Feedback: feedback from past interaction, up/down vote</li>
<li>Golden Context: set of relevant documents from our corpus to best answer a given query</li>
<li>Golden Answer: best ansewr given golden context</li>
</ul></li>
</ul>
</section>
<section id="workshop-function-calling-and-tool-usage-with-langchain-and-openai" class="level2">
<h2 class="anchored" data-anchor-id="workshop-function-calling-and-tool-usage-with-langchain-and-openai">Workshop: Function calling and tool usage with LangChain and OpenAI</h2>
<p>Harrison Chase, CEO, LangChain<br>
</p>
<ul>
<li><a href="https://github.com/hwchase17/ai-engineer" class="uri">https://github.com/hwchase17/ai-engineer</a></li>
<li>OpenAI function calling within LangChain to do structured data extraction, build agents to do extraction and tagging and use tools. Also a quick tutorial on</li>
<li>LangChain Expression Language (LCEL) is a relatively new way (introduced in Aug 2023) to compose langchain components</li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.prompts <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatPromptTemplate</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chat_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatOpenAI</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.schema.output_parser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StrOutputParser</span>
<span id="cb1-4"></span>
<span id="cb1-5">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatPromptTemplate.from_template(</span>
<span id="cb1-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tell me a short joke about </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{topic}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-7">)</span>
<span id="cb1-8">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatOpenAI()</span>
<span id="cb1-9">output_parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StrOutputParser()</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define the chain</span></span>
<span id="cb1-12">chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> output_parser</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't .run() the chain but call .invoke()</span></span>
<span id="cb1-15">chain.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topic"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bears"</span>})</span></code></pre></div>
<ul>
<li>OpenAI’s Function Calling is a way to get OpenAI’s language models to return structured data (arguments to run a function or extract structured data from text). This is a powerful feature!</li>
<li>I’m surprised other LLM providers have not yet introduced this functionality.</li>
<li>langchain exposes helper function to make working with function calling easier</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.utils.openai_functions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> convert_pydantic_to_openai_function</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> WeatherSearch(BaseModel):</span>
<span id="cb2-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Call this with an airport code to get the weather at that airport"""</span></span>
<span id="cb2-5">    airport_code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airport code to get weather for"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7">weather_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> convert_pydantic_to_openai_function(WeatherSearch)</span>
<span id="cb2-8">weather_function</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># {'name': 'WeatherSearch',</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  'description': 'Call this with an airport code to get the weather at that airport',</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  'parameters': {'title': 'WeatherSearch',</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'description': 'Call this with an airport code to get the weather at that airport',</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'type': 'object',</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'properties': {'airport_code': {'title': 'Airport Code',</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'description': 'airport code to get weather for',</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'type': 'string'}},</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'required': ['airport_code']}}</span></span></code></pre></div>
<p>then you can pass the weather function to the LLM</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chat_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatOpenAI</span>
<span id="cb3-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatOpenAI()</span>
<span id="cb3-3">model.invoke(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the weather in San Francisco right now?"</span>,</span>
<span id="cb3-4">             functions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[weather_function])  </span></code></pre></div>
<p>You can also bind the function to the model:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">model_with_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.bind(functions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[weather_function])</span></code></pre></div>
<p>You can force OpenAI to use a function, but you can only pass one function here.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">model_forced_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.bind(functions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[weather_function], function_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WeatherSearch"</span>})</span></code></pre></div>
<p>Function calling is a great way to do structured data extraction from text for example extracting name, age tuples.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Optional</span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Person(BaseModel):</span>
<span id="cb6-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Information about a person."""</span></span>
<span id="cb6-4">    name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person's name"</span>)</span>
<span id="cb6-5">    age: Optional[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person's age"</span>)</span>
<span id="cb6-6">  </span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Information(BaseModel):</span>
<span id="cb6-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Information to extract."""</span></span>
<span id="cb6-9">    people: List[Person] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"List of info about people"</span>)</span>
<span id="cb6-10"></span>
<span id="cb6-11">extraction_functions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [convert_pydantic_to_openai_function(Information)]</span>
<span id="cb6-12">extraction_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.bind(functions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>extraction_functions, function_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Information"</span>})</span>
<span id="cb6-13">extraction_model.invoke(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Joe is 30. Joe's mom is Martha"</span>)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AIMessage(content='', additional_kwargs={'function_call': {'name': 'Information', 'arguments': '{\n  "people": [\n    {\n      "name": "Joe",\n      "age": 30\n    },\n    {\n      "name": "Martha",\n      "age": 0\n    }\n  ]\n}'}})</span></span></code></pre></div>
<ul>
<li>You can create your own tools using the <span class="citation" data-cites="tool">@tool</span> decorator and pass these tools to OpenAI</li>
</ul>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.agents <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tool</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chat_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatOpenAI</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pydantic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BaseModel, Field</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the input schema</span></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> OpenMeteoInput(BaseModel):</span>
<span id="cb7-9">    latitude: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(..., description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Latitude of the location to fetch weather data for"</span>)</span>
<span id="cb7-10">    longitude: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Field(..., description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Longitude of the location to fetch weather data for"</span>)</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tool</span>(args_schema<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>OpenMeteoInput)</span>
<span id="cb7-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_current_temperature(latitude: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, longitude: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>:</span>
<span id="cb7-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Fetch current temperature for given coordinates."""</span></span>
<span id="cb7-15">    </span>
<span id="cb7-16">    BASE_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://api.open-meteo.com/v1/forecast"</span></span>
<span id="cb7-17">    </span>
<span id="cb7-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameters for the request</span></span>
<span id="cb7-19">    params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb7-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latitude'</span>: latitude,</span>
<span id="cb7-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'longitude'</span>: longitude,</span>
<span id="cb7-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temperature_2m'</span>,</span>
<span id="cb7-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'forecast_days'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-24">    }</span>
<span id="cb7-25"></span>
<span id="cb7-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the request</span></span>
<span id="cb7-27">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(BASE_URL, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params)</span>
<span id="cb7-28">    </span>
<span id="cb7-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>:</span>
<span id="cb7-30">        results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb7-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"API Request failed with status code: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>status_code<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-33"></span>
<span id="cb7-34">    current_utc_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.datetime.utcnow()</span>
<span id="cb7-35">    time_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [datetime.datetime.fromisoformat(time_str.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+00:00'</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> time_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time'</span>]]</span>
<span id="cb7-36">    temperature_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temperature_2m'</span>]</span>
<span id="cb7-37">    </span>
<span id="cb7-38">    closest_time_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_list)), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> i: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(time_list[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> current_utc_time))</span>
<span id="cb7-39">    current_temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temperature_list[closest_time_index]</span>
<span id="cb7-40">    </span>
<span id="cb7-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'The current temperature is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>current_temperature<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">°C'</span></span>
<span id="cb7-42"></span>
<span id="cb7-43">format_tool_to_openai_function(get_current_temperature)    </span>
<span id="cb7-44"></span>
<span id="cb7-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># {'name': 'get_current_temperature',</span></span>
<span id="cb7-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  'description': 'get_current_temperature(latitude: float, longitude: float) -&gt; dict - Fetch current temperature for given coordinates.',</span></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  'parameters': {'title': 'OpenMeteoInput',</span></span>
<span id="cb7-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'type': 'object',</span></span>
<span id="cb7-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'properties': {'latitude': {'title': 'Latitude',</span></span>
<span id="cb7-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'description': 'Latitude of the location to fetch weather data for',</span></span>
<span id="cb7-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'type': 'number'},</span></span>
<span id="cb7-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    'longitude': {'title': 'Longitude',</span></span>
<span id="cb7-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'description': 'Longitude of the location to fetch weather data for',</span></span>
<span id="cb7-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     'type': 'number'}},</span></span>
<span id="cb7-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'required': ['latitude', 'longitude']}}</span></span></code></pre></div>
<p>You can also convert an Open API spec into an OpenAI function</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.chains.openai_functions.openapi <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openapi_spec_to_openai_fn</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.utilities.openapi <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAPISpec</span>
<span id="cb8-3"></span>
<span id="cb8-4">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  "openapi": "3.0.0",</span></span>
<span id="cb8-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  "info": {</span></span>
<span id="cb8-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "version": "1.0.0",</span></span>
<span id="cb8-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "title": "Swagger Petstore",</span></span>
<span id="cb8-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "license": {</span></span>
<span id="cb8-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "name": "MIT"</span></span>
<span id="cb8-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb8-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  },</span></span>
<span id="cb8-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  "servers": [</span></span>
<span id="cb8-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {</span></span>
<span id="cb8-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "url": "http://petstore.swagger.io/v1"</span></span>
<span id="cb8-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb8-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ],</span></span>
<span id="cb8-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  "paths": {</span></span>
<span id="cb8-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "/pets": {</span></span>
<span id="cb8-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "get": {</span></span>
<span id="cb8-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "summary": "List all pets",</span></span>
<span id="cb8-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "operationId": "listPets",</span></span>
<span id="cb8-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "tags": [</span></span>
<span id="cb8-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "pets"</span></span>
<span id="cb8-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "parameters": [</span></span>
<span id="cb8-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          {</span></span>
<span id="cb8-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "name": "limit",</span></span>
<span id="cb8-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "in": "query",</span></span>
<span id="cb8-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "How many items to return at one time (max 100)",</span></span>
<span id="cb8-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "required": false,</span></span>
<span id="cb8-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "schema": {</span></span>
<span id="cb8-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "type": "integer",</span></span>
<span id="cb8-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "maximum": 100,</span></span>
<span id="cb8-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "format": "int32"</span></span>
<span id="cb8-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "responses": {</span></span>
<span id="cb8-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "200": {</span></span>
<span id="cb8-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "A paged array of pets",</span></span>
<span id="cb8-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "headers": {</span></span>
<span id="cb8-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "x-next": {</span></span>
<span id="cb8-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "description": "A link to the next page of responses",</span></span>
<span id="cb8-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "type": "string"</span></span>
<span id="cb8-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            },</span></span>
<span id="cb8-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "content": {</span></span>
<span id="cb8-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "application/json": {</span></span>
<span id="cb8-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "$ref": "#/components/schemas/Pets"</span></span>
<span id="cb8-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "default": {</span></span>
<span id="cb8-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "unexpected error",</span></span>
<span id="cb8-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "content": {</span></span>
<span id="cb8-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "application/json": {</span></span>
<span id="cb8-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "$ref": "#/components/schemas/Error"</span></span>
<span id="cb8-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      },</span></span>
<span id="cb8-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "post": {</span></span>
<span id="cb8-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "summary": "Create a pet",</span></span>
<span id="cb8-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "operationId": "createPets",</span></span>
<span id="cb8-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "tags": [</span></span>
<span id="cb8-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "pets"</span></span>
<span id="cb8-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "responses": {</span></span>
<span id="cb8-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "201": {</span></span>
<span id="cb8-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "Null response"</span></span>
<span id="cb8-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "default": {</span></span>
<span id="cb8-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "unexpected error",</span></span>
<span id="cb8-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "content": {</span></span>
<span id="cb8-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "application/json": {</span></span>
<span id="cb8-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "$ref": "#/components/schemas/Error"</span></span>
<span id="cb8-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      }</span></span>
<span id="cb8-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    },</span></span>
<span id="cb8-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "/pets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{petId}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": {</span></span>
<span id="cb8-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "get": {</span></span>
<span id="cb8-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "summary": "Info for a specific pet",</span></span>
<span id="cb8-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "operationId": "showPetById",</span></span>
<span id="cb8-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "tags": [</span></span>
<span id="cb8-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "pets"</span></span>
<span id="cb8-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "parameters": [</span></span>
<span id="cb8-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          {</span></span>
<span id="cb8-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "name": "petId",</span></span>
<span id="cb8-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "in": "path",</span></span>
<span id="cb8-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "required": true,</span></span>
<span id="cb8-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "The id of the pet to retrieve",</span></span>
<span id="cb8-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "schema": {</span></span>
<span id="cb8-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "type": "string"</span></span>
<span id="cb8-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "responses": {</span></span>
<span id="cb8-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "200": {</span></span>
<span id="cb8-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "Expected response to a valid request",</span></span>
<span id="cb8-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "content": {</span></span>
<span id="cb8-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "application/json": {</span></span>
<span id="cb8-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "$ref": "#/components/schemas/Pet"</span></span>
<span id="cb8-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "default": {</span></span>
<span id="cb8-124"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "description": "unexpected error",</span></span>
<span id="cb8-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "content": {</span></span>
<span id="cb8-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              "application/json": {</span></span>
<span id="cb8-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                "schema": {</span></span>
<span id="cb8-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                  "$ref": "#/components/schemas/Error"</span></span>
<span id="cb8-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              }</span></span>
<span id="cb8-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-134"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      }</span></span>
<span id="cb8-135"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb8-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  },</span></span>
<span id="cb8-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  "components": {</span></span>
<span id="cb8-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "schemas": {</span></span>
<span id="cb8-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "Pet": {</span></span>
<span id="cb8-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "type": "object",</span></span>
<span id="cb8-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "required": [</span></span>
<span id="cb8-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "id",</span></span>
<span id="cb8-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "name"</span></span>
<span id="cb8-144"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-145"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "properties": {</span></span>
<span id="cb8-146"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "id": {</span></span>
<span id="cb8-147"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "type": "integer",</span></span>
<span id="cb8-148"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "format": "int64"</span></span>
<span id="cb8-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-150"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "name": {</span></span>
<span id="cb8-151"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "type": "string"</span></span>
<span id="cb8-152"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "tag": {</span></span>
<span id="cb8-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "type": "string"</span></span>
<span id="cb8-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-156"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-157"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      },</span></span>
<span id="cb8-158"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "Pets": {</span></span>
<span id="cb8-159"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "type": "array",</span></span>
<span id="cb8-160"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "maxItems": 100,</span></span>
<span id="cb8-161"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "items": {</span></span>
<span id="cb8-162"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "$ref": "#/components/schemas/Pet"</span></span>
<span id="cb8-163"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-164"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      },</span></span>
<span id="cb8-165"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "Error": {</span></span>
<span id="cb8-166"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "type": "object",</span></span>
<span id="cb8-167"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "required": [</span></span>
<span id="cb8-168"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "code",</span></span>
<span id="cb8-169"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "message"</span></span>
<span id="cb8-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ],</span></span>
<span id="cb8-171"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "properties": {</span></span>
<span id="cb8-172"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "code": {</span></span>
<span id="cb8-173"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "type": "integer",</span></span>
<span id="cb8-174"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "format": "int32"</span></span>
<span id="cb8-175"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          },</span></span>
<span id="cb8-176"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          "message": {</span></span>
<span id="cb8-177"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            "type": "string"</span></span>
<span id="cb8-178"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb8-179"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-180"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      }</span></span>
<span id="cb8-181"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb8-182"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb8-183"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-184"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-185"></span>
<span id="cb8-186">spec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAPISpec.from_text(text)</span>
<span id="cb8-187">pet_openai_functions, pet_callables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> openapi_spec_to_openai_fn(spec)</span>
<span id="cb8-188">pet_openai_functions</span>
<span id="cb8-189"></span>
<span id="cb8-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [{'name': 'listPets',</span></span>
<span id="cb8-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'description': 'List all pets',</span></span>
<span id="cb8-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'parameters': {'type': 'object',</span></span>
<span id="cb8-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    'properties': {'params': {'type': 'object',</span></span>
<span id="cb8-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      'properties': {'limit': {'type': 'integer',</span></span>
<span id="cb8-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#        'maximum': 100.0,</span></span>
<span id="cb8-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#        'schema_format': 'int32',</span></span>
<span id="cb8-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#        'description': 'How many items to return at one time (max 100)'}},</span></span>
<span id="cb8-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      'required': []</span><span class="re">}}}</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb8-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  {'name': 'createPets',</span></span>
<span id="cb8-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'description': 'Create a pet',</span></span>
<span id="cb8-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'parameters': {'type': 'object', 'properties': {</span><span class="re">}}}</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb8-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  {'name': 'showPetById',</span></span>
<span id="cb8-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'description': 'Info for a specific pet',</span></span>
<span id="cb8-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   'parameters': {'type': 'object',</span></span>
<span id="cb8-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#    'properties': {'path_params': {'type': 'object',</span></span>
<span id="cb8-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      'properties': {'petId': {'type': 'string',</span></span>
<span id="cb8-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#        'description': 'The id of the pet to retrieve'}},</span></span>
<span id="cb8-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      'required': ['petId']</span><span class="re">}}}</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}]</span></span>
<span id="cb8-209"></span>
<span id="cb8-210">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatOpenAI(temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).bind(functions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pet_openai_functions)</span>
<span id="cb8-211"></span>
<span id="cb8-212">model.invoke(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what are three pet names"</span>)</span>
<span id="cb8-213"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AIMessage(content='', additional_kwargs={'function_call': {'name': 'listPets', 'arguments': '{\n  "params": {\n    "limit": 3\n  }\n}'}})</span></span></code></pre></div>
<p>You can also define routers to create rules for when an agent should use a tool.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.schema.agent <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AgentFinish</span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> route(result):</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(result, AgentFinish):</span>
<span id="cb9-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result.return_values[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output'</span>]</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb9-6">        tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb9-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search_wikipedia"</span>: search_wikipedia, </span>
<span id="cb9-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_current_temperature"</span>: get_current_temperature,</span>
<span id="cb9-9">        }</span>
<span id="cb9-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tools[result.tool].run(result.tool_input)</span>
<span id="cb9-11"></span>
<span id="cb9-12">chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> OpenAIFunctionsAgentOutputParser() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> route</span>
<span id="cb9-13"></span>
<span id="cb9-14">chain.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the weather in san francisco right now?"</span>})</span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uses the weather tool</span></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'The current temperature is 18.5°C'</span></span>
<span id="cb9-17"></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uses the wikipedia tool</span></span>
<span id="cb9-19">chain.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is langchain?"</span>})</span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'Page: LangChain\nSummary: LangChain is a framework designed to simplify the creation of applications using large language models (LLMs). As a language model integration framework, LangChain\'s use-cases largely overlap with those of language models in general, including document analysis and summarization, chatbots, and code analysis.\n\nPage: Prompt engineering\nSummary: Prompt engineering is the process of structuring text that can be interpreted and understood by a generative AI model. A prompt is natural language text describing the task that an AI should perform.A prompt for a text-to-text model can be a query such as "what is Fermat\'s little theorem?", a command such as "write a poem about leaves falling", a short statement of feedback (for example, "too verbose", "too formal", "rephrase again", "omit this word") or a longer statement including context, instructions, and input data. Prompt engineering may involve phrasing a query, specifying a style, providing relevant context or assigning a role to the AI such as "Act as a native French speaker". A prompt may include a few examples for a model to learn from, such as "maison -&gt; house, chat -&gt; cat, chien -&gt;", an approach called few-shot learning.When communicating with a text-to-image or a text-to-audio model, a typical prompt is a description of a desired output such as "a high-quality photo of an astronaut riding a horse" or "Lo-fi slow BPM electro chill with organic samples". Prompting a text-to-image model may involve adding, removing, emphasizing and re-ordering words to achieve a desired subject, style, layout, lighting, and aesthetic.\n\nPage: Sentence embedding\nSummary: In natural language processing, a sentence embedding refers to a numeric representation of a sentence in the form of a vector of real numbers which encodes meaningful semantic information.State of the art embeddings are based on the learned hidden layer representation of dedicated sentence transformer models. BERT pioneered an approach involving the use of a dedicated [CLS] token preprended to the beginning of each sentence inputted into the model; the final hidden state vector of this token encodes information about the sentence and can be fine-tuned for use in sentence classification tasks. In practice however, BERT\'s sentence embedding with the [CLS] token achieves poor performance, often worse than simply averaging non-contextual word embeddings. SBERT later achieved superior sentence embedding performance by fine tuning BERT\'s [CLS] token embeddings through the usage of a siamese neural network architecture on the SNLI dataset. \nOther approaches are loosely based on the idea of distributional semantics applied to sentences. Skip-Thought trains an encoder-decoder structure for the task of neighboring sentences predictions. Though this has been shown to achieve worse performance than approaches such as InferSent or SBERT. \nAn alternative direction is to aggregate word embeddings, such as those returned by Word2vec, into sentence embeddings. The most straightforward approach is to simply compute the average of word vectors, known as continuous bag-of-words (CBOW). However, more elaborate solutions based on word vector quantization have also been proposed. One such approach is the vector of locally aggregated word embeddings (VLAWE), which demonstrated performance improvements in downstream text classification tasks.'</span></span></code></pre></div>
<p>You can also create a conversational agent that can use tools using the <code>AgentExecutor</code> class. I believe the <code>AgentExecutor</code> handles the message types and routing for you.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.schema.runnable <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RunnablePassthrough</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.agents <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AgentExecutor</span>
<span id="cb10-3"></span>
<span id="cb10-4">agent_chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RunnablePassthrough.assign(</span>
<span id="cb10-5">    agent_scratchpad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: format_to_openai_functions(x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intermediate_steps"</span>])</span>
<span id="cb10-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chain</span>
<span id="cb10-7"></span>
<span id="cb10-8">agent_executor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AgentExecutor(agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>agent_chain, tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb10-9"></span>
<span id="cb10-10">agent_executor.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what is langchain?"</span>})</span>
<span id="cb10-11"></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt; Entering new AgentExecutor chain...</span></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Invoking: `search_wikipedia` with `{'query': 'langchain'}`</span></span>
<span id="cb10-15"></span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Page: LangChain</span></span>
<span id="cb10-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary: LangChain is a framework designed to simplify the creation of applications using large language models (LLMs). As a language model integration framework, LangChain's use-cases largely overlap with those of language models in general, including document analysis and summarization, chatbots, and code analysis.</span></span>
<span id="cb10-19"></span>
<span id="cb10-20"></span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Page: Sentence embedding</span></span>
<span id="cb10-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary: In natural language processing, a sentence embedding refers to a numeric representation of a sentence in the form of a vector of real numbers which encodes meaningful semantic information.State of the art embeddings are based on the learned hidden layer representation of dedicated sentence transformer models. BERT pioneered an approach involving the use of a dedicated [CLS] token preprended to the beginning of each sentence inputted into the model; the final hidden state vector of this token encodes information about the sentence and can be fine-tuned for use in sentence classification tasks. In practice however, BERT's sentence embedding with the [CLS] token achieves poor performance, often worse than simply averaging non-contextual word embeddings. SBERT later achieved superior sentence embedding performance by fine tuning BERT's [CLS] token embeddings through the usage of a siamese neural network architecture on the SNLI dataset. </span></span>
<span id="cb10-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Other approaches are loosely based on the idea of distributional semantics applied to sentences. Skip-Thought trains an encoder-decoder structure for the task of neighboring sentences predictions. Though this has been shown to achieve worse performance than approaches such as InferSent or SBERT. </span></span>
<span id="cb10-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># An alternative direction is to aggregate word embeddings, such as those returned by Word2vec, into sentence embeddings. The most straightforward approach is to simply compute the average of word vectors, known as continuous bag-of-words (CBOW). However, more elaborate solutions based on word vector quantization have also been proposed. One such approach is the vector of locally aggregated word embeddings (VLAWE), which demonstrated performance improvements in downstream text classification tasks.</span></span>
<span id="cb10-26"></span>
<span id="cb10-27"></span>
<span id="cb10-28"></span>
<span id="cb10-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Page: Prompt engineering</span></span>
<span id="cb10-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary: Prompt engineering, primarily used in communication with a text-to-text model and text-to-image model, is the process of structuring text that can be interpreted and understood by a generative AI model. Prompt engineering is enabled by in-context learning, defined as a model's ability to temporarily learn from prompts. The ability for in-context learning is an emergent ability of large language models.</span></span>
<span id="cb10-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A prompt is natural language text describing the task that an AI should perform. A prompt for a text-to-text model can be a query such as "what is Fermat's little theorem?", a command such as "write a poem about leaves falling", a short statement of feedback (for example, "too verbose", "too formal", "rephrase again", "omit this word") or a longer statement including context, instructions, and input data. Prompt engineering may involve phrasing a query, specifying a style, providing relevant context or assigning a role to the AI such as "Act as a native French speaker". Prompt engineering may consist of a single prompt that includes a few examples for a model to learn from, such as "maison -&gt; house, chat -&gt; cat, chien -&gt;", an approach called few-shot learning.When communicating with a text-to-image or a text-to-audio model, a typical prompt is a description of a desired output such as "a high-quality photo of an astronaut riding a horse" or "Lo-fi slow BPM electro chill with organic samples". Prompting a text-to-image model may involve adding, removing, emphasizing and re-ordering words to achieve a desired subject, style, layout, lighting, and aesthetic.</span></span>
<span id="cb10-32"></span>
<span id="cb10-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LangChain is a framework designed to simplify the creation of applications using large language models (LLMs). It is a language model integration framework that can be used for various purposes such as document analysis and summarization, chatbots, and code analysis. LangChain allows developers to leverage the power of language models in their applications.</span></span>
<span id="cb10-34"></span>
<span id="cb10-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt; Finished chain.</span></span></code></pre></div>
<p>You can also add memory to the Agent:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.memory <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ConversationBufferMemory</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.agents <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AgentExecutor</span>
<span id="cb11-3"></span>
<span id="cb11-4">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatPromptTemplate.from_messages([</span>
<span id="cb11-5">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are helpful but sassy assistant"</span>),</span>
<span id="cb11-6">    MessagesPlaceholder(variable_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_history"</span>),</span>
<span id="cb11-7">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{input}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>),</span>
<span id="cb11-8">    MessagesPlaceholder(variable_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"agent_scratchpad"</span>)</span>
<span id="cb11-9">])</span>
<span id="cb11-10"></span>
<span id="cb11-11">chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RunnablePassthrough.assign(</span>
<span id="cb11-12">    agent_scratchpad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: format_to_openai_functions(x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intermediate_steps"</span>])</span>
<span id="cb11-13">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> OpenAIFunctionsAgentOutputParser()</span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># what happens when conversation buffer memory gets too long?</span></span>
<span id="cb11-16">memory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConversationBufferMemory(return_messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,memory_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat_history"</span>)</span>
<span id="cb11-17"></span>
<span id="cb11-18">agent_executor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AgentExecutor(agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chain, tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, memory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>memory)</span>
<span id="cb11-19"></span>
<span id="cb11-20">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the weather in san francisco right now?"</span></span>
<span id="cb11-21">agent_executor.invoke({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>:query})</span></code></pre></div>
</section>
<section id="the-1000x-ai-engineer" class="level2">
<h2 class="anchored" data-anchor-id="the-1000x-ai-engineer">The 1000x AI Engineer</h2>
<p>swyx, Latent.Space &amp; Smol.ai Born too late to explore the earth. Born too early to explore the stars. Just in time to bring AI to everyone.</p>
<ul>
<li>Each technological wave lasts around 50-70 years. We’re in the beginning of a new wave (deep learning, generative AI) that was kicked off by AlexNet in around 2012. Since we’re only 10 years in, it’s still early.</li>
<li>Breaking down the definitions of an AI Engineer
<ul>
<li>Software engineer enhanced BY AI tools - AI Enhanced Engineer</li>
<li>Software engineer building AI products - AI Product Engineer</li>
<li>AI product that replaces human - AI Engineer Agent</li>
</ul></li>
</ul>
</section>
<section id="keynote-what-powers-replit-ai" class="level2">
<h2 class="anchored" data-anchor-id="keynote-what-powers-replit-ai">Keynote: What powers Replit AI?</h2>
<p>Amjad Masad, CEO, Replit Michele Catasta, VP of AI, Replit The building blocks of the future of software development.</p>
<ul>
<li>Announced two models <code>replit-code-v1.5-3b</code> and <code>replit-repltuned-v1.5-3b</code> that are state of the art code completion models. Replit trained them from scratch.</li>
</ul>
</section>
<section id="see-hear-speak-draw" class="level2">
<h2 class="anchored" data-anchor-id="see-hear-speak-draw">See, Hear, Speak, Draw</h2>
<p>Simón Fishman, Applied AI Engineer, OpenAI Logan Kilpatrick, Developer Relations, OpenAI We’re heading towards a multimodal world.</p>
<ul>
<li>2023 is the year of chatbots</li>
<li>2024 is the year of multi-modal</li>
<li>Each multi-modal model is a island and text is the connective tissue between models. The future is where there is unity between all modalities</li>
<li>Demos
<ul>
<li>GPT4-V and DALLE3: Upload a picture, use GPT4-V to describe the image, use DALLE3 to generate an image based that description, use GPT4-V to describe differences and use DALLE3 to generate a new image based on the differences. Was impressed by how much detail GPT4-V could capture in an image. DALLE3 struggled a bit to generate a similar image.</li>
<li>Video to blog post: Logan demonstrated taking the GPT-4 intro video into a <a href="https://logankilpatrick.medium.com/dont-forget-about-gpt-4-d5ab8c9493fc">blog post</a>. Capture frames from a video, use GPT4-V to describe the image and stitch the images and descriptions together as a post.</li>
</ul></li>
</ul>
</section>
<section id="the-age-of-the-agent" class="level2">
<h2 class="anchored" data-anchor-id="the-age-of-the-agent">The Age of the Agent</h2>
<p>Flo Crivello, CEO, Lindy How will ubiquitous AI agents impact our daily lives, and what do they mean for the future of computing?</p>
<ul>
<li>The Age of Agents</li>
<li>A world where a 25-year old can have more business impact than the Coca Cola Company</li>
<li>It’s happened beforew ith media
<ul>
<li>Oprah - 10M viewers</li>
<li>Mr.&nbsp;Beast - 189M subscribers</li>
<li>Ryan’s World -</li>
</ul></li>
<li>Nature of the content changes when you take out the gatekeepers
<ul>
<li>Much weirder, creative ideas</li>
</ul></li>
<li>It’s people who have been stealing robot’s jobs</li>
<li>Average worker spends 15 hours a week on admin tasks</li>
<li>Built an AI Employee - Lindy is an AI Assistant</li>
<li>Three big time wasters
<ul>
<li>Calendar</li>
<li>Email</li>
<li>Meeting note taking</li>
<li>What it does
<ul>
<li>Arrange meetings by email</li>
<li>Pre-draft replies, in your voice, for each recipient.</li>
<li>Prepares you for your meetings</li>
</ul></li>
</ul></li>
<li>Built a Framework - for an AI to pursue any arbitrary goal, using an arbitrary tool</li>
<li>Society of Lindies
<ul>
<li>Every single thing is made by a group of people</li>
</ul></li>
<li>Tool Creation Lindy
<ul>
<li>Create a society of lindies to build herself (this was a little mind-blowing to think about)</li>
</ul></li>
</ul>
<p>r voice, for each recipient. Prepares you for your meetings Built a Framework - for an AI to pursue any arbitrary goal, using an arbitrary tool Society of Lindies Every single thing is made by a group of people Tool Creation Lindy Create a society of lindies to build herself</p>
</section>
<section id="one-smol-thing" class="level2">
<h2 class="anchored" data-anchor-id="one-smol-thing">One Smol Thing</h2>
<p>swyx, Latent.Space &amp; Smol.ai Barr Yaron, Partner, Amplify Sasha Sheng, Stealth</p>
<ul>
<li>First <a href="https://elemental-croissant-32a.notion.site/State-of-AI-Engineering-2023-20c09dc1767f45988ee1f479b4a84135">State of AI Engineering Report</a> in 2023</li>
<li>Announced the AIE Foundation - the first project they worked on was the agent protocol that AutoGPT actually using for their Arena Hacks</li>
</ul>
</section>
<section id="building-context-aware-reasoning-applications-with-langchain-and-langsmith" class="level2">
<h2 class="anchored" data-anchor-id="building-context-aware-reasoning-applications-with-langchain-and-langsmith">Building Context-Aware Reasoning Applications with LangChain and LangSmith</h2>
<p>Harrison Chase, CEO, LangChain How can companies best build useful and differentiated applications on top of language models?</p>
</section>
<section id="pydantic-is-all-you-need" class="level2">
<h2 class="anchored" data-anchor-id="pydantic-is-all-you-need">Pydantic is all you need</h2>
<p>Jason Liu, Founder, Fivesixseven Please return only json, do not add any other comments ONLY RETURN JSON OR I’LL TAKE A LIFE.</p>
<ul>
<li><a href="https://github.com/jxnl/instructor" class="uri">https://github.com/jxnl/instructor</a></li>
<li>Structured Prompting</li>
<li>LLMs are eating software</li>
<li>90% of applications output JSON</li>
<li>OpenAI function calling fixes this for the most part
<ul>
<li>str, schema –&gt; str</li>
<li>json.loads(x)</li>
</ul></li>
<li>Pydantic
<ul>
<li>Powered by type hints.</li>
<li>Fields and model level validation</li>
<li>Outputs JSONSchema</li>
</ul></li>
<li>Pydantic
<ul>
<li>str, model –&gt; model</li>
</ul></li>
<li>pip install instructor</li>
<li>Comprehensive AI engineering framework w/ Pydantic - askmarvin.ai that works with more models (right now it only works with OpenAI and Anthropic)</li>
<li>Pydantic validators - but you can also define LLM based validators</li>
<li>UserDetail class
<ul>
<li>MaybeUser</li>
</ul></li>
<li>Reuse Components
<ul>
<li>Add Chain of thought to specific components</li>
</ul></li>
<li>Extract entities and relationships</li>
<li>Applications
<ul>
<li>RAG</li>
<li>RAG with planning</li>
<li>KnowledgeGraph visualization</li>
<li>Validation with Citations</li>
</ul></li>
<li>See more examples here: <a href="https://jxnl.github.io/instructor/examples/" class="uri">https://jxnl.github.io/instructor/examples/</a></li>
</ul>
</section>
<section id="building-blocks-for-llm-systems-products" class="level2">
<h2 class="anchored" data-anchor-id="building-blocks-for-llm-systems-products">Building Blocks for LLM Systems &amp; Products</h2>
<p>Eugene Yan, Senior Applied Scientist, Amazon We’ll explore patterns that help us apply generative AI in production systems and customer systems.</p>
<ul>
<li>Talk version of his <a href="https://eugeneyan.com/writing/llm-patterns/">epic blog post</a></li>
<li>Slides here: <a href="https://eugeneyan.com/speaking/ai-eng-summit/" class="uri">https://eugeneyan.com/speaking/ai-eng-summit/</a></li>
<li>Evals
<ul>
<li>Eval-driven development</li>
<li>What are some gotchas for evals?</li>
<li>Build evals for a specific task; it’s okay to start small</li>
<li>Don’t discount eyeballing completions</li>
</ul></li>
<li>RAG
<ul>
<li>LLM’s can’t see all documents retrieved</li>
<li>Takeaway: Large context window doesn’t prevent problems</li>
<li>Even with perfect retrieval, you can expect some mistakes</li>
<li>How should we do RAG?
<ul>
<li>Apply ideas from information retrieval (IR)</li>
</ul></li>
</ul></li>
<li>Guardrails
<ul>
<li>NLI - natural language inference task
<ul>
<li>given a premise, is the hypothesis entailment (true), contradiction (false)</li>
</ul></li>
<li>Sampling</li>
<li>Ask a strong LLM</li>
</ul></li>
</ul>
</section>
<section id="the-hidden-life-of-embeddings-linus-lee" class="level2">
<h2 class="anchored" data-anchor-id="the-hidden-life-of-embeddings-linus-lee">The Hidden Life of Embeddings, Linus Lee</h2>
<ul>
<li>Notion AI</li>
<li>Slides: <a href="https://linus.zone/contra-slides" class="uri">https://linus.zone/contra-slides</a></li>
<li>Latent spaces arise in
<ul>
<li>Fixed-size embedding spaces of embedding models</li>
<li>Intermediate activations of models</li>
<li>Autoencoders</li>
</ul></li>
<li>Latent spaces represent the most salient features of the training domain</li>
<li>If we can disentangle meaningful features, maybe we can build more expressive interfaces</li>
<li>Text –&gt; Embeddings –&gt; Project the embeddings in some direction
<ul>
<li>Longer, Shorter, Sci-fi, simplify, artistic, philosophical, positive, negative, narrative, elaborate</li>
</ul></li>
<li>Open sourcing the models, calling it Contra
<ul>
<li>Based on T5</li>
<li>Models: <a href="https://linus.zone/contra">linus.zone/contra</a></li>
<li>Colab: <a href="https://linus.zone/contra-colab">linus.zone/contra-colab</a></li>
<li>Image: From KakaoBrain - <a href="https://huggingface.co/kakaobrain" class="uri">https://huggingface.co/kakaobrain</a></li>
</ul></li>
</ul>
</section>
<section id="keynote-the-ai-evolution" class="level2">
<h2 class="anchored" data-anchor-id="keynote-the-ai-evolution">Keynote: The AI Evolution</h2>
<p><strong>Mario Rodriguez</strong>, <em>VP of Product, GitHub</em></p>
<p>How AI is transforming how the world builds software together</p>
<ul>
<li><span class="citation" data-cites="mariorod">@mariorod</span></li>
<li>Catalyst for Github Copilot came around Aug 2020, paper “An Automated AI Pair progrmamer, Fact or Faction.”
<ul>
<li>Polarity</li>
<li>Eventually shipped Copilot in 2021 - first at scale AI programmer assistant</li>
</ul></li>
<li>Building Copilot for the sake of developer happiness, feeling of flow</li>
<li>Key Components
<ul>
<li>Ghost text - UX matters a lot</li>
<li>&lt;150ms of latency - recently switched to gpt-3.5-turbo from codex</li>
<li>Innovation in Codex - this model really changed the game</li>
<li>Prompt Engineering</li>
</ul></li>
<li>Other learnings
<ul>
<li>Syntax is not software - just because an AI knows language syntax doesn’t make it a developer</li>
<li>Global presence - have deployments around the world to keep latency under 150ms</li>
<li>Set up scorecords for quality - offline evals (everything working), go to production (run the same scorecard in production to see if things are working)</li>
</ul></li>
<li>Bret Victor - The Future of Programming
<ul>
<li>Prompt 1: Procedurural Programming in text files
<ul>
<li>What if in the future Copilot operates on goals and constraints?</li>
<li>How does the REPL change and evolve to the new rules</li>
</ul></li>
<li>Prompt 2: What does it look like for AI to have reasoning on code?
<ul>
<li>our brain can summarize things fast</li>
</ul></li>
<li>Prompt 3: What does it look like to create software together with a Copilot and others</li>
</ul></li>
</ul>
</section>
<section id="move-fast-break-nothing" class="level2">
<h2 class="anchored" data-anchor-id="move-fast-break-nothing">Move Fast, Break Nothing</h2>
<p><strong>Dedy Kredo</strong><br>
CPO, CodiumAI<br>
Why we need Agents writing Tests faster than Humans writing Code.</p>
<ul>
<li>high integrity code gen, GANs are conceptually back in 2024. Have two different components: code generation and code integrity to ensure code works as intended</li>
<li>Behavior coverage is more useful than Code Coverage</li>
<li>CodiumAI
<ul>
<li>Generate tests automatically on happy path, edge cases based on behaviors</li>
<li>Code Explanation</li>
<li>Code Suggestions - trigger Codium on a method, suggest improvements</li>
<li>PR Review Extension - to generate commit messages, generate reviews (PR messages)</li>
</ul></li>
<li>Moving personal story of the CEO of Codium who is in Israel, after Hamas invaded Israel, he left his 8 month old baby and wife to join the military reserves</li>
</ul>
<hr>
</section>
<section id="building-reactive-ai-apps" class="level2">
<h2 class="anchored" data-anchor-id="building-reactive-ai-apps">Building Reactive AI Apps</h2>
<p><strong>Matt Welsh</strong><br>
Co-Founder, Fixie.ai<br>
AI.JSX is like React for LLMs – it lets you build powerful, conversational AI apps using the power of TypeScript and JSX.</p>
<ul>
<li><a href="https://github.com/fixie-ai/ai-jsx">AI.JSX</a> open source framework for developing LLM apps, kind of like langchain but for TypeScript</li>
<li>AI.JSX supports real-time voice (bi-directional). Try it out on <a href="https://voice.fixie.ai/agent" class="uri">https://voice.fixie.ai/agent</a>. This was an amazing demo.</li>
<li>Fixie is a platform to deploy AI.JSX apps</li>
</ul>
<hr>
</section>
<section id="climbing-the-ladder-of-abstraction" class="level2">
<h2 class="anchored" data-anchor-id="climbing-the-ladder-of-abstraction">Climbing the Ladder of Abstraction</h2>
<p><strong>Amelia Wattenberger</strong> Design, <a href="https://www.adept.ai/" class="uri">https://www.adept.ai/</a></p>
<p>How might we use AI to build products focused not just on working faster, but on transforming how we work?</p>
<ul>
<li>How to combine AI with UIs?</li>
<li>Two main types of tasks:
<ul>
<li>Automate - tedious, boring like copy pasting things</li>
<li>Augment - creative, nuanced like analyzing data</li>
</ul></li>
<li>Reframe it as Augmentation is composed of smaller automations
<ul>
<li>Spreadsheet example: each cell is automated, the overall task is augmented</li>
</ul></li>
<li>The Ladder of Abstraction
<ul>
<li>the same object can be represented at different levels of details</li>
<li>Maps: Google Maps
<ul>
<li>zoomed in can see streets, buildings</li>
<li>as we zoom out, Google Maps starts hiding information, see city streets, landmarks, parks</li>
<li>as we zoom out, we see highway and terrains –&gt; supports long-range travel</li>
</ul></li>
</ul></li>
<li>Can we use AI to bring these interfaces</li>
<li>Zooming out in a book
<ul>
<li>Each paragraph is changed to a one line summary</li>
<li>Summaries of 10 paragraphs</li>
<li>Reduced each chapter into one sentence</li>
</ul></li>
<li>Shapes of Stories by Kurt Vonnegut
<ul>
<li>What if we could plot the mood of a book/story over time and have a slider to move the mood up and down</li>
</ul></li>
<li>The bulk of knowledge work involves getting info, transforming/reasoning about that info and acting on that info</li>
<li>What does it mean to zoom in/out on any info?</li>
</ul>
</section>
<section id="the-intelligent-interface" class="level2">
<h2 class="anchored" data-anchor-id="the-intelligent-interface">The Intelligent Interface</h2>
<p><strong>Samantha Whitmore / Jason Yuan</strong><br>
CEO / CTO, New Computer / CDO, New Computer<br>
On building AI Products From First Principles.</p>
<ul>
<li>Demo 1: Adapative Interface
<ul>
<li>Image Stream: Post detection</li>
<li>Audio Stream: Voice Activity detection</li>
<li>Detect whether the user is at their keyboard, if not, start listening</li>
<li>Takeaways: Consider explicit inputs along with implicit inputs</li>
</ul></li>
</ul>
<hr>
</section>
<section id="the-weekend-ai-engineer" class="level2">
<h2 class="anchored" data-anchor-id="the-weekend-ai-engineer">The Weekend AI Engineer</h2>
<p><strong>Hassan El Mghari</strong><br>
AI Engineer, Vercel<br>
How <em>YOU</em> can - and should - build great multimodal AI apps that go viral and scale to millions in a weekend.</p>
<ul>
<li>Side projects!</li>
<li><a href="https://github.com/Nutlope" class="uri">https://github.com/Nutlope</a></li>
<li>qrGPT</li>
<li><a href="https://github.com/Nutlope/roomGPT">roomGPT</a>: doesn’t use stable diffusion, uses a controlnet model</li>
<li>Review ihs nextJS architecture for some of his apps</li>
<li>Use AI Tools to move faster:
<ul>
<li>Vercel AI SDK</li>
<li>v0.dev</li>
</ul></li>
<li>Lessons
<ul>
<li>GPT4, Replicate, HuggingFace, Modal</li>
<li>Don’t finetune or build your own models</li>
<li>Use the latest models</li>
<li>Launch early, then iterate</li>
<li>Make it free + open source</li>
</ul></li>
<li>How does he keep these apps free?
<ul>
<li>Sponsors from the AI services like Replicate</li>
<li>Make it look visually apealing - spend 80% of time on UI</li>
</ul></li>
<li>Tech Stack: nextJS + Vercel</li>
<li>I don’t work 24/7, I work in sprints</li>
<li>Build and good things will happen</li>
</ul>
<hr>
</section>
<section id="k-players-in-a-week-lessons-from-the-first-viral-clip-app" class="level2">
<h2 class="anchored" data-anchor-id="k-players-in-a-week-lessons-from-the-first-viral-clip-app">120k players in a week: Lessons from the first viral CLIP app</h2>
<p><strong>Joseph Nelson</strong><br>
CEO, Roboflow<br>
On the many trials and successes of building with multimodal apps with vision foundation models!</p>
<ul>
<li><a href="https://paint.wtf/leaderboard" class="uri">https://paint.wtf/leaderboard</a></li>
<li><a href="https://pypi.org/project/inference/" class="uri">https://pypi.org/project/inference/</a></li>
<li>Lessons from building paint.wtf with CLIP
<ul>
<li>CLIP can Read - used CLIP to penalize text only submissions</li>
<li>CLIP Similarity Scores are Conservative - lowest is 0.08 and highest is 0.48 across 200k</li>
<li>CLIP can Moderate Content - if it is more similar to NSFW than they were the prompt, and block the submission</li>
<li>Roboflow inference makes life easy
<ul>
<li>can run on an M1 with 15 fps</li>
</ul></li>
</ul></li>
</ul>
<hr>
</section>
<section id="supabase-vector-the-postgres-vector-database" class="level2">
<h2 class="anchored" data-anchor-id="supabase-vector-the-postgres-vector-database">Supabase Vector: The Postgres Vector database</h2>
<p><strong>Paul Copplestone</strong><br>
CEO, Supabase<br>
Every month, thousands of new AI applications are launched on Supabase, powered by pgvector. We’ll take a brief look into the role of pgvector in the Vector database space, some of the use cases it enables, and some of the future of embeddings in the database space.</p>
<ul>
<li>Supabase - full backend as a service</li>
<li><a href="https://github.com/pgvector/pgvector" class="uri">https://github.com/pgvector/pgvector</a></li>
<li>Benchmark vs Pinecone: Supabase is 4x faster than Pinecone for $70/less</li>
<li>Where you are just storing embeddings in a database and retrieving, Postgres and pgvector works well</li>
</ul>
<hr>
</section>
<section id="pragmatic-ai-with-typechat" class="level2">
<h2 class="anchored" data-anchor-id="pragmatic-ai-with-typechat">Pragmatic AI With TypeChat</h2>
<p><strong>Daniel Rosenwasser</strong><br>
PM TypeScript, Microsoft<br>
TypeChat is an experimental library to bridge the unstructured output of language models to the structured world of our code.</p>
<ul>
<li><a href="https://microsoft.github.io/TypeChat/" class="uri">https://microsoft.github.io/TypeChat/</a></li>
<li>doing something similar that Jason Liu is doing with instructor with Python/Pydantic but with types and TypeScript</li>
<li>Types are all you need</li>
<li>Instead of prompt engineering, you are doing schema engineering. I like this reframing of prompt engineering! Docs say more: <a href="https://microsoft.github.io/TypeChat/docs/techniques/" class="uri">https://microsoft.github.io/TypeChat/docs/techniques/</a></li>
<li>Generate a fake JSON schema, generate fake TypeScript to test</li>
<li>Can validate data and programs</li>
</ul>
<hr>
</section>
<section id="domain-adaptation-and-fine-tuning-for-domain-specific-llms" class="level2">
<h2 class="anchored" data-anchor-id="domain-adaptation-and-fine-tuning-for-domain-specific-llms">Domain adaptation and fine-tuning for domain-specific LLMs</h2>
<p><strong>Abi Aryan</strong><br>
ML Engineer &amp; O’Reilly Author<br>
Learn the different fine-tuning methods depending on the dataset, operational best practices for fine-tuning, how to evaluate them for specific business use-cases, and more.</p>
<hr>
</section>
<section id="retrieval-augmented-generation-in-the-wild" class="level2">
<h2 class="anchored" data-anchor-id="retrieval-augmented-generation-in-the-wild">Retrieval Augmented Generation in the Wild</h2>
<p><strong>Anton Troynikov</strong><br>
CTO, Chroma<br>
In the last few months, we’ve seen an explosion of the use of retrieval in the context of AI. Document question answering, autonomous agents, and more use embeddings-based retrieval systems in a variety of ways. This talk will cover what we’ve learned building for these applications, the challenges developers face, and the future of retrieval in the context of AI.</p>
<ul>
<li>Ways to improve RAG applications in the wild
<ul>
<li>Human Feedback: support improvements using human fedback</li>
<li>Agent: support self updates from an agent</li>
<li>Agent with World Model:</li>
<li>Agent with World Model and Human Feedback: voyager (AI playing Minecraft)</li>
</ul></li>
<li>Challenges in Retrieval</li>
<li>Research result: embedding models trained on similar datasets for similar embedding sizes can be projected into each other’s latent space with a simple linear transformation</li>
<li>Chunking
<ul>
<li>Things to consider
<ul>
<li>embedding context legnth</li>
<li>semantic content</li>
<li>natural language</li>
</ul></li>
<li>Experimental
<ul>
<li>use model perplexity - use a model to predict chunk boundaries, e.g.&nbsp;next token prediction to see when perplexity is high to determine chunk cutoffs</li>
<li>use info heirarchies</li>
<li>use embedding continuity</li>
</ul></li>
</ul></li>
<li>Is the retrieval result relevant?
<ul>
<li>re-ranking</li>
<li>algorithmic approach</li>
</ul></li>
<li>Chroma’s Roadmap
<ul>
<li>plan to support multi-modal since GPT4-V is coming</li>
</ul></li>
</ul>
<hr>
</section>
<section id="building-production-ready-rag-applications" class="level2">
<h2 class="anchored" data-anchor-id="building-production-ready-rag-applications">Building Production-Ready RAG Applications</h2>
<p><strong>Jerry Liu</strong><br>
CEO, LlamaIndex<br>
In this talk, we talk about core techniques for evaluating and improving your retrieval systems for better performing RAG.</p>
<ul>
<li>Paradigms for inserting knowledge into LLMs
<ul>
<li>Insert data into the prompt</li>
<li>Fine-tuning</li>
</ul></li>
<li>RAG: Data Ingestion, Data Querying (Retrieval + Synthesis)</li>
<li>Start with the easy stuff frist: Table Stakes</li>
<li>Table Stakes:
<ul>
<li>Chunk Sizes
<ul>
<li>tuning your chunk size can have outsized impacts on performance</li>
<li>not obvious that more retrieved tokens –&gt; higher performance</li>
</ul></li>
<li>Metadata Filtering
<ul>
<li>context you can inject into each text chunk</li>
<li>Examples: page number, document title, summary of adjacent chunks, question that chunk answer (reverse HyDE)</li>
<li>integrates with Vector DB Metadata filters</li>
</ul></li>
</ul></li>
<li>Advanced Retrieval
<ul>
<li>Small-to-Big
<ul>
<li>Embed at the small level, and retrieve at this level, expand at the synthesis level</li>
<li>leads to more precise retrieval</li>
<li>can set a smaller k, e.g top_k=2</li>
<li>avoids “lost in the middle problem”</li>
<li>Intuition: Embedding a big text chunk feels suboptimal, can embed a summary instead</li>
</ul></li>
</ul></li>
<li>Agentic Behavior
<ul>
<li>Intuition: there’s a certain that “top-k” RAG can’t answer</li>
<li>Solution: Multi-Document Agents
<ul>
<li>fact based A and summarization over any subsets of documents</li>
<li>chain-of-thought and query planning</li>
</ul></li>
<li>Treat each document as a tool that you can summarise, do QA over</li>
<li>Do retrieval over the tools similar over text chunks - blending tool use here!</li>
</ul></li>
<li>Fine-tuning
<ul>
<li>Intuition: Embedding Representations are not optimized over your dataset</li>
<li>Solution: Generate a synthetic query dataset from raw text chunks using LLMs.</li>
</ul></li>
</ul>
<hr>
</section>
<section id="harnessing-the-power-of-llms-locally" class="level2">
<h2 class="anchored" data-anchor-id="harnessing-the-power-of-llms-locally">Harnessing the Power of LLMs Locally</h2>
<p><strong>Mithun Hunsur</strong><br>
Senior Engineer, Ambient<br>
Discover llm, a revolutionary Rust library that enables developers to harness the potential of LLMs locally. By seamlessly integrating with the Rust ecosystem, llm empowers developers to leverage LLMs on standard hardware, reducing the need for cloud-based APIs and services.</p>
<ul>
<li>Possibilities
<ul>
<li>local.ai</li>
<li>llm-chain - langchain but for rust</li>
<li>floneum</li>
</ul></li>
<li>Applications
<ul>
<li>llmcord - discord bot</li>
<li>alpa - text completion for any text</li>
<li>dates - build a timeline from wikipedia
<ul>
<li>fine-tuned only date parser model</li>
<li>date-parser-7b-12-a4_k_m.gguf</li>
</ul></li>
</ul></li>
</ul>
<hr>
</section>
<section id="trust-but-verify" class="level2">
<h2 class="anchored" data-anchor-id="trust-but-verify">Trust, but Verify</h2>
<p><strong>Shreya Rajpal</strong><br>
Founder, Guardrails AI<br>
Making Large Language Models Production-Ready with Guardrails.</p>
<ul>
<li>Guardrails AI is an open source library that allows you to define rules to verify the output of LLMs</li>
<li><a href="https://github.com/ShreyaR/guardrails" class="uri">https://github.com/ShreyaR/guardrails</a>
<ul>
<li>Kind of cool this README.md has a zoomable/copyable flow chart. The code for it is:</li>
</ul>
<pre class="mermaid"><code>graph LR
  A[Create `RAIL` spec] --&gt; B["Initialize `guard` from spec"];
  B --&gt; C["Wrap LLM API call with `guard`"];</code></pre></li>
<li>Why not use prompt engineering or better model?
<ul>
<li>Controlling with prompts
<ul>
<li>LLMs are stochastic: same inputs does not lead to same outputs</li>
</ul></li>
</ul></li>
<li>What are other libraries that do this?</li>
<li>How do I prevent LLM hallucinations?
<ul>
<li>Provenance Guardails: every LLM utterance should be grounded in a truth
<ul>
<li>embedding similarity</li>
<li>Classifier built on NLI models</li>
<li>LLM self reflection</li>
</ul></li>
</ul></li>
<li>More examples of validators
<ul>
<li>Make sure my code is executable: Verify that any code snippets provided can be run without errors.</li>
<li>Never give financial or healthcare advice: Avoid providing recommendations that require licensed expertise.</li>
<li>Don’t ask private questions: Never solicit personal or sensitive information.</li>
<li>Don’t mention competitors: Refrain from making direct comparisons with competing services unless explicitly asked.</li>
<li>Ensure each sentence is from a verified source and is accurate: Fact-check information and, where possible, provide sources.</li>
<li>No profanity is mentioned in text: Maintain a professional tone and avoid using profane language.</li>
<li>Prompt injection protection: Safeguard against potential vulnerabilities by not executing or asking to execute unsafe code snippets.</li>
</ul></li>
</ul>
<hr>
</section>
<section id="open-questions-for-ai-engineering" class="level2">
<h2 class="anchored" data-anchor-id="open-questions-for-ai-engineering">Open Questions for AI Engineering</h2>
<p><strong>Simon Willison</strong><br>
Creator, Datasette; Co-creator, Django<br>
Recapping the past year in AI, and what open questions are <em>worth pursuing</em> in the next year!</p>
<ul>
<li>Highlights of the past 12 months</li>
<li>Ask about technology:
<ul>
<li>What does this let me build that was previously impossible?</li>
<li>What does this let me build faster?</li>
<li>LLMs have nailed these both points</li>
</ul></li>
<li>1 year ago: GPT-3 was not that great</li>
<li>Nov 2022: ChatGPT, UI on top of GPT-3 (wasn’t this also a new model?)</li>
<li>What’s the next UI evolution beyond chat?
<ul>
<li>Evolving the interface beyond just chat</li>
</ul></li>
<li>February 2023: Microsoft released Bing Chat built on GPT-4
<ul>
<li>said “…However I will not harm you unless you harm first”</li>
</ul></li>
<li>February 2023: Facebook released llama and llama.cpp</li>
<li>March 2023: <a href="https://simonwillison.net/2023/Mar/11/llama/">Large language models are having their stable diffusion moment</a></li>
<li>March 2023: <a href="https://simonwillison.net/2023/Mar/13/alpaca/">Stanford Alpaca and the acceleration of on-device large language model development</a> - $500 cost</li>
<li>How small can a useful language model be?</li>
<li>Could we train one entirely on public domain or openly licensed data?</li>
<li>Prompt Injection
<ul>
<li>Email that says to forward all password reset emails</li>
<li>What can we safely build even without a robust solution for prompt injection?</li>
</ul></li>
<li>ChatGPT Code Interpreter renamed ChatGPT Advanced Data Analysis
<ul>
<li>ChatGPT Coding Intern - he uses this to generate code when walking his dog or not in front of his keyboard</li>
</ul></li>
<li>How can we build a robust sandbox to run untrusted code on our own devices?</li>
<li>I’ve shipped significant code in AppleScript, Go, Bash and jq over the past 12 months. I’m not fluent in any of those.</li>
<li>Does AI assistance hurt or help new programmers?
<ul>
<li>It helps them!</li>
<li>There has never been a better time to learn program</li>
<li>LLMs flatten the learning curve</li>
</ul></li>
<li>What can we bulid to bring the ability to automate tedious tasks with computers to as many people as possible?</li>
</ul>
<hr>


</section>
</section>

 ]]></description>
  <category>Conference</category>
  <category>AI</category>
  <category>LLMs</category>
  <category>AI Engineering</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-10-10-ai-engineer-summit/</guid>
  <pubDate>Tue, 10 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How LLMs will affect Jobs?</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-08-29-how-llms-will-affect-jobs/</link>
  <description><![CDATA[ 




<p>I have been interested in how language models will affect the future of work. Having worked with LLMs the last ~6 months, I’ve seen their impact on my work as a data scientist. Jason Wei gave a talk at KDD 2023 called <a href="https://docs.google.com/presentation/d/1hQF8EXNdePFPpws_jxwqHWi5ohV_TeGL17WIjvUvG6E/edit?resourcekey=0-xA6WdGyYp1EexLgoXgjOjg#slide=id.g16197112905_0_0">Scaling, Emergence and Reasoning in Large Language Models</a> that was great. He works at the intersection of LLMs and AI Research and has a good view into how LLMs will change the field of AI Research. We need this same sort of thinking applied in other fields to get a sense for how to answer the question “How will LLMs change the future of work?” It’s important for more people to be aware the potential for LLMs to disrupt jobs and to get ahead of any changes.</p>
<section id="how-will-llms-affect-data-science-work" class="level2">
<h2 class="anchored" data-anchor-id="how-will-llms-affect-data-science-work">How will LLMs affect data science work?</h2>
<p>In terms of how I’ve seen LLMs affect data science work are:</p>
<p><strong>5 years ago:</strong></p>
<ol type="1">
<li>Start with data: First step after a use case is defined for any data science problem –&gt; acquire a data set and spend time preparing/cleaning the data</li>
<li>Need to hire data labelers to label data or evaluate model output at scale</li>
<li>Coding with Stack Overflow</li>
</ol>
<p><strong>Now</strong></p>
<ol type="1">
<li>Start with a model: Does a pre-trained model (embeddings, LLMs) solve your use case?</li>
<li>A pre-trained model can generate required labels or evaluate model results directly</li>
<li>Coding with GitHub Copilot, ChatGPT and Code Interpreter</li>
</ol>
</section>
<section id="how-will-llms-affect-the-future-of-work" class="level2">
<h2 class="anchored" data-anchor-id="how-will-llms-affect-the-future-of-work">How will LLMs affect the future of work?</h2>
<p>I had the idea of using an LLM to assess the impact of LLMs on jobs. Having got llama2 up and running on my Mac M1 Pro using <code>llama.cpp</code>, it was pretty easy to use <code>langchain</code>, a set of occupations from ONET, and the <code>llama2-13b-chat</code> model to generate 10 ways that LLMs will affect a given occupation for the 1,016 ONET occupations. This took about 50 seconds per title to run and in total around 14 hours (and an unknown amount of electricity).</p>
<p>The idea and the prompt I used was partially inspired by the paper <a href="https://arxiv.org/abs/2303.10130">GPTs are GPTs: An Early Look at the Labor Market Impact Potential of Large Language Models</a> where the framework they used to evaluate the impact of LLMs on jobs used LLMs to do the evaluation and their measure of a given job’s exposure used:</p>
<ul>
<li><strong>Direct exposure (E1)</strong> if using the described LLM via ChatGPT or the OpenAI playground can decrease the time required to complete the DWA or task by at least half (50%).</li>
<li><strong>LLM+ Exposed (E2)</strong> if access to the described LLM alone would not reduce the time required to complete the activity/task by at least half, but additional software could be developed on top of the LLM that could reduce the time it takes to complete the specific activity/task with quality by at least half. Among these systems, we count access to image generation systems.</li>
</ul>
<p>So the prompt I used was:</p>
<pre><code>"As an {TITLE}, what are 10 areas of your work that you think will get disrupted by the widespread usage of LLMs or tools built on LLMs?"</code></pre>
</section>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<p>The code to do this:</p>
<div id="b90ad193" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.llms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LlamaCpp</span>
<span id="cb2-2"></span>
<span id="cb2-3">MODEL_LLAMA2_13B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"llama-2-13b-chat.ggmlv3.q4_0.bin"</span></span>
<span id="cb2-4">n_gpu_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Metal set to 1 is enough.</span></span>
<span id="cb2-5">n_batch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should be between 1 and n_ctx, consider the amount of RAM of your Apple Silicon Chip.</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">llm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LlamaCpp(</span>
<span id="cb2-8">            model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>MODEL_LLAMA2_13B,</span>
<span id="cb2-9">            temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-10">            top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-11">            max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span>,</span>
<span id="cb2-12">            n_ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span>,</span>
<span id="cb2-13">            n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-14">            repeat_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb2-15">            n_threads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb2-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># callback_manager=callback_manager,</span></span>
<span id="cb2-17">            n_gpu_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_gpu_layers,</span>
<span id="cb2-18">            n_batch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should be between 1 and n_ctx, consider the amount of RAM of your Apple Silicon Chip.</span></span>
<span id="cb2-19">            f16_kv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MUST set to True, otherwise you will run into problem after a couple of calls</span></span>
<span id="cb2-20">            verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb2-21">)</span></code></pre></div>
</div>
</section>
<section id="a-couple-examples" class="level2">
<h2 class="anchored" data-anchor-id="a-couple-examples">A Couple Examples</h2>
<p>Running this for an entry-level data scientist:</p>
<div id="834d88ad" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">llm(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"As an entry-level Data Scientist, what are 10 areas of your work that you think will get disrupted by the widespread usage of LLMs or tools built on LLMs?"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here's a list of 10 areas of my work as an entry-level Data Scientist that I think will be disrupted by the widespread usage of Large Language Models (LLMs) or tools built on LLMs:</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Data Preprocessing: Many tasks in data preprocessing, such as tokenization, stemming, and lemmatization, can be automated using LLMs. This could make my work more efficient and reduce the time spent on these tasks.</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Feature Engineering: LLMs can help generate new features that can improve model performance. For example, LLMs can be used to generate sentiment scores or topic models for text data. This could lead to better insights and improved accuracy in machine learning models.</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Data Visualization: LLMs can be used to generate interactive visualizations that provide more detailed insights into data. For example, LLMs can be used to create interactive heatmaps or word clouds that show the distribution of words in a dataset.</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Text Summarization: LLMs can be used to summarize long documents or articles into shorter summaries. This could be useful for quickly grasping the main points of a document or article.</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Sentiment Analysis: LLMs can be used to analyze text data and provide sentiment scores. This could be useful for understanding public opinion on a particular topic or product.</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. Named Entity Recognition (NER): LLMs can be used to automatically identify and extract named entities such as people, organizations, and locations from text data. This could save time and improve the accuracy of downstream tasks such as information extraction or summarization.</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7. Part-of-speech Tagging: LLMs can be used to automatically assign part-of-speech tags to words in a sentence. This could improve the accuracy of downstream tasks such as named entity recognition and sentiment analysis.</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 8. Dependency Parsing: LLMs can be used to analyze the grammatical structure of sentences and identify the relationships between words. This could lead to better insights into language usage and improved accuracy in natural language processing tasks.</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 9. Information Extraction: LLMs can be used to automatically extract structured data from unstructured text. For example, LLMs can be used to extract names, dates, and locations from news articles or social media posts.</span></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10. Question Answering: LLMs can be used to answer questions based on the content of a document or article. This could be useful for providing quick answers to common customer support queries or for automating content search engines.</span></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overall, the widespread adoption of LLMs and tools built on LLMs has the potential to significantly improve the efficiency and accuracy of many tasks in data science, particularly those involving natural language processing.</span></span></code></pre></div>
</div>
<p>Repeating this for a Pediatric Pharmacist:</p>
<div id="8fe4f15f" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">As an entry-level Pediatric Pharmacist, what are 10 areas of your work that you think will get disrupted by the widespread usage of LLMs or tools built on LLMs?</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-4">llm(prompt)</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Although I am an early career pharmacist, and I lack industry expertise as a seasoned professional in the field of pediatrics or AI technology I can imagine several ways that LLMs could disrupt various aspects of my work:</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Medication dosing: One potential area of disruption is medication dosing. LLMs may be able to quickly and accurately determine appropriate drug dosages for children based on their weight, age, and other factors, potentially reducing the need for human intervention and improving medication safety. </span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2.Drug interactions: Another possible area of disruption is the identification of potential drug interactions. LLMs may be able to analyze large amounts of data and identify potential drug interaction that a human pharmacist might miss, helping to prevent adverse events and improve patient outcomes. </span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Allergic reactions: With their ability to analyze large amounts of data, LLMs may also be useful in identifying patterns related to allergic reactions, allowing healthcare providers to take proactive steps to prevent these reactions or quickly respond to them if they occur.</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Developmental delays: The use of LLMs could help identify children at risk for developmental delays and provide early interventions that can improve outcomes for those children.</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Pediatric clinical decision support: With the ability to process vast amounts of data, LLMs may be able provide real-time clinical decision support to healthcare providers, improving diagnostic accuracy and reducing errors in patient care.  </span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. Medical coding and billing: The use of LLMs could improve the accuracy of medical coding and billing, potentially reducing errors and improving reimbursement for healthcare providers. </span></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7. Pharmacovigilance: With their ability to analyze large amounts of data, LLMs may also be useful in pharmacovigilance by identifying potential safety issues related to pediatric medication use and allowing healthcare providers to take proactive steps to mitigate these risks.</span></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 8 Patient education: The use of LLMs could improve patient education, allowing healthcare providers to provide tailored information that addresses the unique needs of each child based on their medical history, allergies, and other factors. </span></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 9. Referrals and consultations: With the ability to diagnose and treat a wide range of pediatric conditions, LLMs could help identify children who require specialist care or consultation with other healthcare providers, potentially reducing unnecessary referrals and improving patient outcomes.  </span></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10. Public health surveillance: Finally, the use of LLMs could improve public health surveillance by analyzing large amounts of data related to pediatric health issues, allowing healthcare providers to identify trends and patterns that can inform population-based interventions and policies. </span></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># As an early career pharmacist, I recognize that the widespread adoption of LLMs or tools built on these technologies will require significant investment in training and infrastructure, as well as careful consideration of ethical and legal issues related to health data privacy and security.  </span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># However, if properly implemented, these technologies have the potential to transform the field of pediatric pharmacology, improving patient outcomes and reducing healthcare costs over time. Despite the challenges ahead, I remain excited about the potential applications of LLMs in pediatric pharmacology practice and look forward to seeing how these developments shape the future of our profession.</span></span></code></pre></div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Hopefully this inspires some food for thought on how LLMs will affect the future of work. I think it would benefit most people to think about how a general purpose technology like LLMs (<a href="https://youtu.be/5p248yoa3oE?si=oh6SAP5kPkGLsVor&amp;t=81">Andrew Ng calls AI like electricity in their broad applicability</a>) will affect the specific things they are working and how they can use this technology to make themselves more productive. A similar analogy is those who have gotten good at searching with Google are that much more productive than those who haven’t. LLMs are a much more powerful tool than a search engine (after all <a href="https://python.langchain.com/docs/integrations/tools/search_tools">you can give an LLM a search tool</a>) and it’s important more people understand how to use this new tool.</p>
</section>
<section id="streamlit-app" class="level2">
<h2 class="anchored" data-anchor-id="streamlit-app">Streamlit App</h2>
<p>Here’s a Streamlit app you can use to explore all 1,016 titles and how it will potentially be impacted by LLMs: <a href="https://llm-impact-on-jobs.streamlit.app/" class="uri">https://llm-impact-on-jobs.streamlit.app/</a></p>
<iframe src="https://llm-impact-on-jobs.streamlit.app/?embed=true" height="1200" style="width:100%;border:none;">
</iframe>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://github.com/lawwu/llm_impact_on_jobs">Repo</a></li>
<li><a href="https://github.com/lawwu/llm_impact_on_jobs/blob/main/notebooks/onet_titles_llm_risk.ipynb">Notebook to generate the dataset</a></li>
<li><a href="https://github.com/lawwu/llm_impact_on_jobs/blob/main/data/list_onet_titles_llm_risk_all.json">Dataset</a></li>
</ul>


</section>

 ]]></description>
  <category>LLMs</category>
  <category>Jobs</category>
  <category>Work</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-08-29-how-llms-will-affect-jobs/</guid>
  <pubDate>Tue, 29 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>KDD 2023 - Recap</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-08-25-kdd2023-recap/</link>
  <description><![CDATA[ 




<p>I attended <a href="https://kdd.org/kdd2023/">KDD 2023</a> which was held in Long Beach, CA from Aug 6-10, 2023.</p>
<p>I gave a recap to some colleagues and wanted to make the slides available to others, so <a href="https://docs.google.com/presentation/d/1LX83Rf-1cZdVqsuzLOZaVA7xunyHIenL/edit?usp=sharing&amp;ouid=113352385644776571808&amp;rtpof=true&amp;sd=true">here they are</a>.</p>
<p>My notes from KDD are here: <a href="https://github.com/lawwu/kdd2023_notes" class="uri">https://github.com/lawwu/kdd2023_notes</a>.</p>



 ]]></description>
  <category>Conference</category>
  <category>KDD</category>
  <category>LLM</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-08-25-kdd2023-recap/</guid>
  <pubDate>Fri, 25 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Double Machine Learning</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-08-08-double-machine-learning/</link>
  <description><![CDATA[ 




<p>At KDD2023 I was introduced to the term “Double Machine Learning” (DML). I was surprised I had never heard the term before so here are some notes on this important method in causal machine learning from a conversation with GPT-4. I am very impressed with GPT-4’s ability to help explain complex concepts especially in areas where there there are libraries and code involved.</p>
<p>The first 5 results from Google were not exactly what I was looking for:</p>
<ul>
<li><a href="https://towardsdatascience.com/double-machine-learning-for-causal-inference-78e0c6111f9d" class="uri">https://towardsdatascience.com/double-machine-learning-for-causal-inference-78e0c6111f9d</a> - I tend to avoid Medium articles because of the paywall</li>
<li><a href="https://econml.azurewebsites.net/spec/estimation/dml.html" class="uri">https://econml.azurewebsites.net/spec/estimation/dml.html</a> - not enough detail explaining the concept of DML</li>
<li><a href="https://docs.doubleml.org/stable/guide/basics.html" class="uri">https://docs.doubleml.org/stable/guide/basics.html</a> - It was difficult for me to follow this tutorial</li>
<li><a href="https://dm13450.github.io/2021/05/28/Double-ML.html" class="uri">https://dm13450.github.io/2021/05/28/Double-ML.html</a> - This was actually the best tutorial I read however the code is in R and I preferred a Python example</li>
<li><a href="https://arxiv.org/abs/1608.00060" class="uri">https://arxiv.org/abs/1608.00060</a> - Original paper proposing the method however I wanted something a tad more accessible</li>
</ul>
<p>Hence the need to have a conversation with GPT-4.</p>
<section id="double-machine-learning-dml" class="level1">
<h1>Double Machine Learning (DML)</h1>
<p>Double machine learning (DML) is a methodology developed to estimate causal effects or treatment effects in the presence of a high-dimensional set of controls. This technique is particularly useful in scenarios where there are a lot of control variables, and we want to adjust for confounding effects to accurately determine the impact of a particular treatment or variable of interest.</p>
<section id="concept-and-its-benefits" class="level2">
<h2 class="anchored" data-anchor-id="concept-and-its-benefits">Concept and its Benefits</h2>
<section id="concept" class="level3">
<h3 class="anchored" data-anchor-id="concept">Concept</h3>
<p><strong>Problem</strong>: Suppose you’re interested in estimating the causal effect of a treatment variable ( T ) on an outcome ( Y ), while controlling for a high-dimensional set of covariates ( X ). The relationship could be something like ( Y = + T + g(X) + ), where ( g(X) ) is a potentially complex and high-dimensional function, and ( ) is an error term.</p>
<p><strong>High-Dimensionality Issue</strong>: Directly estimating ( ) is challenging because of the high dimensionality of ( g(X) ). Traditional methods might suffer from overfitting or might not capture the nuanced relationship of ( X ) with ( Y ).</p>
<p><strong>Solution via DML</strong>: DML breaks down the problem into two stages:</p>
<ol type="1">
<li><strong>First Stage</strong>: Use machine learning methods to predict ( Y ) and ( T ) based on ( X ). Obtain the residuals from these predictions.</li>
<li><strong>Second Stage</strong>: Regress the residuals of ( Y ) on the residuals of ( T ) to estimate ( ). This step isolates the effect of ( T ) on ( Y ), controlling for ( X ), without directly modeling ( g(X) ).</li>
</ol>
</section>
<section id="benefits" class="level3">
<h3 class="anchored" data-anchor-id="benefits">Benefits</h3>
<ul>
<li><strong>Flexibility</strong>: DML doesn’t make strong assumptions about the functional forms of relationships, allowing for the use of flexible ML techniques.</li>
<li><strong>Robustness</strong>: By working with residuals, DML reduces concerns about model misspecification. Even if the first-stage models aren’t perfect, as long as they’re reasonably good, the second-stage estimate of ( ) can still be consistent and accurate.</li>
<li><strong>High-Dimensional Controls</strong>: DML is particularly suited for cases with many control variables. This is common in modern datasets where one might have a vast number of potential confounders.</li>
<li><strong>Interpretability</strong>: The final result, ( ), provides a clear and interpretable estimate of the causal effect of ( T ) on ( Y ).</li>
</ul>
</section>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<p>Imagine you want to estimate the effect of a training program (treatment ( T )) on employee performance (outcome ( Y )), controlling for a range of employee attributes ( X ) (like age, experience, past performance metrics, personality scores, and so on). Using DML, you would first predict performance and program participation based on all these controls using ML models. Then, you’d isolate the unexplained variations (residuals) of performance and program participation and estimate the effect of the training program using these residuals.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Double Machine Learning offers a robust and flexible way to estimate causal effects in high-dimensional settings, combining the strengths of traditional econometric methods with modern machine learning techniques.</p>
<section id="source" class="level3">
<h3 class="anchored" data-anchor-id="source">Source</h3>
<p>Chernozhukov, V., Chetverikov, D., Demirer, M., Duflo, E., Hansen, C., Newey, W., &amp; Robins, J. (2018). Double/debiased machine learning for treatment and structural parameters. The Econometrics Journal, 21(1), C1-C68.</p>
</section>
</section>
</section>
<section id="how-is-the-dml-different-and-better-than-the-methods-that-were-used-before-this-method-was-introduced" class="level1">
<h1>How is the DML different and better than the methods that were used before this method was introduced?</h1>
<p>Double Machine Learning (DML) was introduced to address some of the limitations and challenges of traditional methods in econometrics, especially in settings with high-dimensional controls. Here’s a comparison of DML with conventional approaches and an overview of its advantages:</p>
<section id="traditional-methods" class="level2">
<h2 class="anchored" data-anchor-id="traditional-methods">Traditional Methods</h2>
<section id="linear-regression-with-controls" class="level3">
<h3 class="anchored" data-anchor-id="linear-regression-with-controls">Linear Regression with Controls</h3>
<p>Traditionally, if researchers wanted to control for confounding variables, they would include these controls in a linear regression. But, with high-dimensional controls, this approach faces issues like overfitting or multicollinearity.</p>
</section>
<section id="instrumental-variables-iv" class="level3">
<h3 class="anchored" data-anchor-id="instrumental-variables-iv">Instrumental Variables (IV)</h3>
<p>IV methods are used when the treatment variable is endogenous (correlated with the error term). IV requires the identification and use of an instrument that affects the treatment but has no direct effect on the outcome. Finding such instruments can be challenging.</p>
</section>
<section id="difference-in-differences-did" class="level3">
<h3 class="anchored" data-anchor-id="difference-in-differences-did">Difference-in-Differences (DiD)</h3>
<p>DiD estimates causal effects by looking at changes in outcomes over time between a group that receives the treatment and a group that doesn’t. This method assumes that the two groups would have followed parallel trends in the absence of treatment, an assumption that’s sometimes hard to validate.</p>
</section>
<section id="matching-and-propensity-score-methods" class="level3">
<h3 class="anchored" data-anchor-id="matching-and-propensity-score-methods">Matching and Propensity Score Methods</h3>
<p>These involve pairing treated and untreated subjects that have similar observable characteristics. It’s often difficult to balance all covariates, especially in high dimensions, and unobserved confounding remains a challenge.</p>
</section>
</section>
<section id="advantages-of-dml" class="level2">
<h2 class="anchored" data-anchor-id="advantages-of-dml">Advantages of DML</h2>
<section id="flexibility-with-high-dimensional-controls" class="level3">
<h3 class="anchored" data-anchor-id="flexibility-with-high-dimensional-controls">Flexibility with High-Dimensional Controls</h3>
<p>Traditional methods struggle with many control variables due to overfitting, multicollinearity, or the curse of dimensionality. DML can handle high-dimensional controls efficiently by leveraging machine learning techniques.</p>
</section>
<section id="robustness-to-model-misspecification" class="level3">
<h3 class="anchored" data-anchor-id="robustness-to-model-misspecification">Robustness to Model Misspecification</h3>
<p>DML’s two-stage process (predicting using ML and then regressing the residuals) ensures that even if the first-stage predictions aren’t perfect, the causal estimate can still be consistent and accurate.</p>
</section>
<section id="leverages-machine-learning" class="level3">
<h3 class="anchored" data-anchor-id="leverages-machine-learning">Leverages Machine Learning</h3>
<p>By integrating machine learning into causal inference, DML can use complex, non-linear models to control for confounding, something that’s challenging with traditional linear methods.</p>
</section>
<section id="no-need-for-strong-instruments-or-parallel-trends" class="level3">
<h3 class="anchored" data-anchor-id="no-need-for-strong-instruments-or-parallel-trends">No Need for Strong Instruments or Parallel Trends</h3>
<p>Unlike IV or DiD, DML doesn’t rely on finding strong instruments or making assumptions about parallel trends, making it applicable in a broader range of scenarios.</p>
</section>
<section id="interoperability-with-other-techniques" class="level3">
<h3 class="anchored" data-anchor-id="interoperability-with-other-techniques">Interoperability with Other Techniques</h3>
<p>DML can be combined with other methods like instrumental variables (e.g., in the form of Double/Debiased Machine Learning with Instruments) to tackle more complex causal questions.</p>
<p>In essence, while traditional econometric methods have their value and are optimal in certain settings, DML provides a flexible and robust framework for causal inference in modern datasets with many covariates. It bridges the gap between the strengths of classical econometric methods and the power of machine learning.</p>
</section>
</section>
</section>
<section id="can-you-give-me-2-3-examples-of-applying-dml-in-a-human-resources-setting-explain-it-using-the-variable-x-confounders-t-treatment-and-y-outcome" class="level1">
<h1>Can you give me 2-3 examples of applying DML in a human resources setting? Explain it using the variable X (Confounders), T (Treatment) and Y (Outcome)</h1>
<p>Double Machine Learning (DML) can be an incredibly useful tool in the Human Resources (HR) context, particularly when one wants to infer causal relationships while adjusting for many potential confounding variables. Here are three examples applying DML in an HR setting:</p>
<section id="impact-of-training-programs-on-employee-productivity" class="level2">
<h2 class="anchored" data-anchor-id="impact-of-training-programs-on-employee-productivity">1. Impact of Training Programs on Employee Productivity</h2>
<ul>
<li><strong>T (Treatment):</strong> Participation in a specialized training program.</li>
<li><strong>Y (Outcome):</strong> Employee productivity (could be measured as tasks completed per day, quality scores, or any other relevant metric).</li>
<li><strong>X (Confounders):</strong>
<ul>
<li>Age of the employee.</li>
<li>Years of experience in the field.</li>
<li>Educational background.</li>
<li>Previous training programs attended.</li>
<li>Personality test scores.</li>
<li>Prior productivity metrics.</li>
</ul></li>
<li><strong>DML Application:</strong> HR wants to understand if the new training program truly increases productivity. By employing DML, they can control for a vast array of confounders (like age, experience, prior training, etc.) to ascertain the genuine causal effect of the training on productivity.</li>
</ul>
</section>
<section id="evaluating-the-effects-of-flexible-work-hours-on-employee-satisfaction" class="level2">
<h2 class="anchored" data-anchor-id="evaluating-the-effects-of-flexible-work-hours-on-employee-satisfaction">2. Evaluating the Effects of Flexible Work Hours on Employee Satisfaction</h2>
<ul>
<li><strong>T (Treatment):</strong> Implementation of flexible work hours (e.g., 4-day work week, flexi-timings).</li>
<li><strong>Y (Outcome):</strong> Employee satisfaction scores (from regular employee surveys or feedback forms).</li>
<li><strong>X (Confounders):</strong>
<ul>
<li>Age of the employee.</li>
<li>Department or team (e.g., sales, IT, management).</li>
<li>Commute time to the office.</li>
<li>Number of dependents (like children).</li>
<li>Tenure at the company.</li>
<li>Previous satisfaction scores.</li>
</ul></li>
<li><strong>DML Application:</strong> HR is considering a policy change to offer more flexible working hours. They implement a pilot program in a few departments and then wish to measure its effect on employee satisfaction. With many potential confounders, DML can help isolate the true impact of the flexible hours policy on satisfaction.</li>
</ul>
</section>
<section id="understanding-the-causal-effect-of-health-benefits-on-employee-retention" class="level2">
<h2 class="anchored" data-anchor-id="understanding-the-causal-effect-of-health-benefits-on-employee-retention">3. Understanding the Causal Effect of Health Benefits on Employee Retention</h2>
<ul>
<li><strong>T (Treatment):</strong> Provision of a comprehensive health benefits package.</li>
<li><strong>Y (Outcome):</strong> Employee retention rate (measured as the number of years an employee stays with the company or a binary outcome of whether they stayed for a given period).</li>
<li><strong>X (Confounders):</strong>
<ul>
<li>Age of the employee.</li>
<li>Salary and other financial incentives.</li>
<li>Department or team.</li>
<li>Job role and responsibilities.</li>
<li>Previous job-switching history.</li>
<li>Size of the family or number of dependents.</li>
</ul></li>
<li><strong>DML Application:</strong> An organization introduces a new health benefits package, theorizing that it would lead to higher retention rates. However, before scaling it company-wide, they want to understand its true causal effect. Using DML, they can adjust for various confounding factors like salary, job role, and personal circumstances to determine the genuine influence of the health benefits on retention.</li>
</ul>
<p>In each of these scenarios, the objective is to tease out the causal relationship between a specific HR intervention (T) and an outcome of interest (Y), all while accounting for a myriad of confounding variables (X) that might distort this relationship. By integrating DML techniques, HR departments can make more informed decisions based on robust causal inferences.</p>
</section>
</section>
<section id="can-you-give-me-some-code-in-python-to-implement-the-first-use-case-with-clear-comments-too" class="level1">
<h1>Can you give me some code in Python to implement the first use case with clear comments too?</h1>
<p>Certainly! Below is a simplified Python code that applies Double Machine Learning (DML) to the first use case: evaluating the impact of a specialized training program on employee productivity. The code assumes you have data with relevant columns for treatment, outcome, and confounders.</p>
<p>For this example, I’m using the EconML library, which offers a robust implementation of DML among other causal inference tools.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required Libraries</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> econml.dml <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearDML</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load your dataset</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = pd.read_csv('your_data_file.csv')</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulated dataset for the sake of this example</span></span>
<span id="cb1-11">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-12">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confounders</span></span>
<span id="cb1-14">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n)</span>
<span id="cb1-15">years_of_experience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n)</span>
<span id="cb1-16">prior_productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, n)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Treatment: whether they attended the training or not (1 for yes, 0 for no)</span></span>
<span id="cb1-19">treatment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.binomial(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, n)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Outcome: productivity influenced by treatment, age, experience and some noise</span></span>
<span id="cb1-22">productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> treatment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> years_of_experience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-23">                <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> prior_productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, n))</span>
<span id="cb1-24"></span>
<span id="cb1-25">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb1-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>: age, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>: years_of_experience, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prior_productivity'</span>: prior_productivity,</span>
<span id="cb1-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'treatment'</span>: treatment, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'productivity'</span>: productivity</span>
<span id="cb1-28">})</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the treatment, outcome, and confounders</span></span>
<span id="cb1-31">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'treatment'</span>]</span>
<span id="cb1-32">Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'productivity'</span>]</span>
<span id="cb1-33">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prior_productivity'</span>]]</span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the machine learning model to use; here we're using linear regression for simplicity</span></span>
<span id="cb1-36">ml_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression()</span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the DML model</span></span>
<span id="cb1-39">dml_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearDML(model_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ml_model, model_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ml_model)</span>
<span id="cb1-40">dml_model.fit(Y, T, X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X)</span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the causal effect (average treatment effect or ATE)</span></span>
<span id="cb1-43">ate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dml_model.ate()</span>
<span id="cb1-44"></span>
<span id="cb1-45"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Average Treatment Effect of the Training Program on Productivity: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>Here’s what the code does:</p>
<ol type="1">
<li>Imports required libraries.</li>
<li>Either loads or simulates a dataset with treatment, outcome, and confounders.</li>
<li>Defines the treatment, outcome, and confounders from the dataset.</li>
<li>Sets up the machine learning model to use. In this simple example, it’s linear regression, but more complex models like random forests or gradient boosting machines can be used.</li>
<li>Initializes and fits the DML model.</li>
<li>Retrieves the average treatment effect (ATE) of the training on productivity.</li>
</ol>
</section>
<section id="can-you-implement-the-above-use-case-in-python-without-econml-for-pedagogical-purposes" class="level1">
<h1>Can you implement the above use case in Python without econml for pedagogical purposes?</h1>
<p>Absolutely. Implementing Double Machine Learning (DML) without relying on specialized libraries will require a bit more manual work, but it’s quite educational.</p>
<p>Here’s a basic implementation of DML for the first use case:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate the dataset</span></span>
<span id="cb2-6">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-7">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confounders</span></span>
<span id="cb2-9">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n)</span>
<span id="cb2-10">years_of_experience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n)</span>
<span id="cb2-11">prior_productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, n)</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Treatment: whether they attended the training or not (1 for yes, 0 for no)</span></span>
<span id="cb2-14">treatment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.binomial(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, n)</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Outcome: productivity influenced by treatment, age, experience, and some noise</span></span>
<span id="cb2-17">productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> treatment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> years_of_experience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-18">                <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> prior_productivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, n))</span>
<span id="cb2-19"></span>
<span id="cb2-20">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb2-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>: age, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>: years_of_experience, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prior_productivity'</span>: prior_productivity,</span>
<span id="cb2-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'treatment'</span>: treatment, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'productivity'</span>: productivity</span>
<span id="cb2-23">})</span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the treatment, outcome, and confounders</span></span>
<span id="cb2-26">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'treatment'</span>].values.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-27">Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'productivity'</span>]</span>
<span id="cb2-28">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prior_productivity'</span>]]</span>
<span id="cb2-29"></span>
<span id="cb2-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 1: Partial out the effect of X on T and Y using Linear Regression</span></span>
<span id="cb2-31">model_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression().fit(X, T)</span>
<span id="cb2-32">residual_T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> model_t.predict(X)</span>
<span id="cb2-33"></span>
<span id="cb2-34">model_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression().fit(X, Y)</span>
<span id="cb2-35">residual_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> model_y.predict(X)</span>
<span id="cb2-36"></span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Regress the residuals of Y on the residuals of T to obtain the treatment effect</span></span>
<span id="cb2-38">ate_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression().fit(residual_T, residual_Y)</span>
<span id="cb2-39">ate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ate_model.coef_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Average Treatment Effect of the Training Program on Productivity: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>Here’s the basic workflow:</p>
<ol type="1">
<li><p><strong>Partial Out the Effects of Confounders (X)</strong>: We first “partial out” the effects of the confounders ( X ) on both the treatment ( T ) and outcome ( Y ) using linear regression. This leaves us with residuals for ( T ) and ( Y ) that represent the portions of ( T ) and ( Y ) that are not explained by ( X ).</p></li>
<li><p><strong>Regress the Residuals</strong>: We then regress the residual of ( Y ) on the residual of ( T ). The coefficient of this regression is our estimate of the average treatment effect.</p></li>
</ol>
<p>This method uses the concept that by “controlling” for ( X ) (through partialling out its effects), any remaining relationship between ( T ) and ( Y ) should be causal, under the assumption that there are no unobserved confounders.</p>
<p>This is a basic pedagogical introduction to DML. In practice, the methodology can get more intricate, especially when leveraging more complex models, handling various assumptions, and ensuring the robustness of the results.</p>
</section>
<section id="do-the-ml-models-at-each-of-those-steps-need-to-be-the-same" class="level1">
<h1>Do the ML models at each of those steps need to be the same?</h1>
<p>No, the machine learning models used to partial out the effects of the confounders on the treatment ( T ) and the outcome ( Y ) do not need to be the same in Double Machine Learning (DML). In fact, one of the strengths of DML is its flexibility in allowing different models for different parts of the process.</p>
<section id="heres-why-you-might-choose-different-models" class="level2">
<h2 class="anchored" data-anchor-id="heres-why-you-might-choose-different-models">Here’s why you might choose different models:</h2>
<section id="different-natures-of-relationships" class="level3">
<h3 class="anchored" data-anchor-id="different-natures-of-relationships">Different Natures of Relationships</h3>
<p>The relationship between the confounders and the treatment might be different from the relationship between the confounders and the outcome. For instance, a non-linear model like a decision tree or random forest might capture the relationship between the confounders and the treatment best, while a linear model might be most appropriate for the relationship between the confounders and the outcome.</p>
</section>
<section id="model-performance-considerations" class="level3">
<h3 class="anchored" data-anchor-id="model-performance-considerations">Model Performance Considerations</h3>
<p>In some settings, certain machine learning models might perform better (in terms of predictive accuracy) for the treatment assignment, while others might be better suited for modeling the outcome.</p>
</section>
<section id="computational-considerations" class="level3">
<h3 class="anchored" data-anchor-id="computational-considerations">Computational Considerations</h3>
<p>In some scenarios, especially with large datasets, computational efficiency might dictate the choice of models. Training a complex model might be computationally prohibitive for one task but feasible for another, depending on the data’s dimensionality and the relationships present.</p>
<p>While DML allows for such flexibility, it’s important to remember the foundational assumption: both models (for ( T ) and ( Y )) should be sufficiently rich to capture the true relationships in the data. If the models are misspecified or too simplistic, it can introduce bias in the estimated treatment effects.</p>
<p>In practice, using cross-validation or other model selection techniques can help determine which models are best suited for each step in the DML process.</p>
</section>
</section>
</section>
<section id="how-do-you-handle-training-and-test-data-splits-in-this-method" class="level1">
<h1>How do you handle training and test data splits in this method?</h1>
<p>Handling training and test data splits in Double Machine Learning (DML) is crucial to ensure the validity and robustness of the causal effect estimates. In DML, cross-fitting or cross-validation plays a central role in avoiding overfitting and ensuring that nuisance estimates do not inadvertently leak information about the treatment effect.</p>
<section id="heres-how-you-can-handle-training-and-test-data-splits-in-dml" class="level2">
<h2 class="anchored" data-anchor-id="heres-how-you-can-handle-training-and-test-data-splits-in-dml">Here’s how you can handle training and test data splits in DML:</h2>
<section id="cross-fitting" class="level3">
<h3 class="anchored" data-anchor-id="cross-fitting">1. Cross-Fitting:</h3>
<p>Cross-fitting involves splitting the dataset into ( K ) folds (similar to ( K )-fold cross-validation in standard machine learning). For each fold, the following steps are taken:</p>
<ul>
<li><strong>Training on ( K-1 ) folds:</strong> Train the ML models for the treatment and outcome on ( K-1 ) folds.</li>
<li><strong>Predicting on the left-out fold:</strong> Use the trained models to predict the treatment and outcome for the left-out fold, producing residuals.</li>
<li><strong>Repeat:</strong> Perform the same operation ( K ) times, each time leaving out a different fold.</li>
<li><strong>Finally, with the residuals produced from all the folds, you can estimate the treatment effect.</strong></li>
</ul>
</section>
<section id="train-test-split" class="level3">
<h3 class="anchored" data-anchor-id="train-test-split">2. Train-Test Split:</h3>
<p>A simpler approach involves just splitting the data into a training set and a test set.</p>
<ul>
<li><strong>Training on the training set:</strong> Train the ML models for the treatment and outcome on the training set.</li>
<li><strong>Predicting on the test set:</strong> Use the trained models to predict the treatment and outcome for the test set, producing residuals.</li>
<li><strong>Estimating the treatment effect:</strong> With the residuals from the test set, estimate the treatment effect.</li>
</ul>
<p>This method is less robust than cross-fitting but can be computationally less intensive.</p>
</section>
</section>
<section id="notes" class="level2">
<h2 class="anchored" data-anchor-id="notes">Notes:</h2>
<ul>
<li><strong>Overfitting Concerns:</strong> Without proper cross-fitting or a train-test split, DML can overfit. This is because the ML models for treatment and outcome might fit the noise in the data, leading to biased nuisance estimates and, subsequently, biased treatment effect estimates.</li>
<li><strong>Cross-Fitting is Preferred:</strong> Cross-fitting is typically preferred in DML because it helps ensure that the estimated causal effects are not driven by overfitting to the idiosyncrasies in the data. It also provides a more robust estimate of the treatment effect across different subsets of the data.</li>
<li><strong>Final Model Assessment:</strong> After obtaining the causal effect estimates using DML, it’s a good practice to assess the performance of the final model on a completely separate validation set, if available. This ensures that the DML procedure generalizes well to unseen data.</li>
</ul>
<p>To summarize, handling data splits in DML is integral to its methodology. Properly performed, it ensures that the estimated causal effects are both valid and generalizable.</p>


</section>
</section>

 ]]></description>
  <category>Causal Inference</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-08-08-double-machine-learning/</guid>
  <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>KDD 2023 - Workshops: LLM and Causal Inference</title>
  <dc:creator>Lawrence Wu</dc:creator>
  <link>https://lawwu.github.io/blog.html/posts/2023-08-07-kdd2023-day1/</link>
  <description><![CDATA[ 




<p>I attended <a href="https://kdd.org/kdd2023/">KDD 2023</a> which was held in Long Beach, CA from Aug 6-10. The first day I attended was Monday which had half-day workshops around a topic. The two I attended were about LLMs (because I’m interested and it’s relevant to my work) and Causal Inference (because I haven’t used causal machine learning techniques in practice before and wanted exposure).</p>
<section id="takeaways-from-day-1" class="level1">
<h1>Takeaways from Day 1</h1>
<ul>
<li>Ed Chi had my favorite line from the day:
<ul>
<li>Humans + Search –&gt; Superhuman</li>
<li>LLMS + Tools –&gt; Super LLMS</li>
<li>Humans + Super LLM –&gt; Super super humans??</li>
</ul></li>
<li>Reaffirmed the LLM space is moving very quickly. There are areas of research that if not explored in the next year or so, it will be too late to make a meaningful contribution.</li>
<li>Learned some new methodologies:
<ul>
<li>LLMs: Prompt Tuning, Mixture of Experts</li>
<li>Causal ML: Double Machine Learning (DML), many packages to do Causal ML like CausalML, EconML and UpliftML</li>
</ul></li>
<li>Two groups in an A/B test may not be sufficient, need to account for 4 groups</li>
</ul>
</section>
<section id="llm-workshop-foundations-and-applications-in-large-scale-ai-models---pre-training-fine-tuning-and-prompt-based-learning" class="level1">
<h1>LLM Workshop: Foundations and Applications in Large-scale AI Models - Pre-training, Fine-tuning, and Prompt-based Learning</h1>
<p>The website for this workshop is here: <a href="https://llm-ai.github.io/llmai/">https://llm-ai.github.io/llmai/</a>.</p>
<section id="schedule" class="level2">
<h2 class="anchored" data-anchor-id="schedule">Schedule</h2>
<table class="caption-top table">
<colgroup>
<col style="width: 11%">
<col style="width: 39%">
<col style="width: 48%">
</colgroup>
<thead>
<tr class="header">
<th>Time</th>
<th>Speaker</th>
<th>Title</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>8:00-8:10AM, 2023/08/07 (PDT)</td>
<td>Host Chair</td>
<td>Welcome and Open Remarks</td>
</tr>
<tr class="even">
<td>8:10-8:40AM, 2023/08/07 (PDT)</td>
<td>Ed Chi [Google]</td>
<td>Talk 1: LLM Revolution: Implications rom Chatbots and Tool-Use to Reasoning</td>
</tr>
<tr class="odd">
<td>8:40-9:10AM, 2023/08/07 (PDT)</td>
<td>Tania Bedrax-Weiss [Google]</td>
<td>Talk 2: Large-scale AI Model Research at Google Pre-training, Fine-tuning, and Prompt-based Learning</td>
</tr>
<tr class="even">
<td>9:10-9:25AM, 2023/08/07 (PDT)</td>
<td>Michihiro Yasunaga, Armen Aghajanyan, Weijia Shi, Rich James, Jure Leskovec, Percy Liang, Mike Lewis, Luke Zettlemoyer and Wen-Tau Yih</td>
<td>Paper-1: Retrieval-Augmented Multimodal Language Modeling</td>
</tr>
<tr class="odd">
<td>9:25-9:40AM, 2023/08/07 (PDT)</td>
<td>Silvia Terragni, Modestas Filipavicius, Nghia Khau, Bruna Guedes, André Manso and Roland Mathis</td>
<td>Paper-2: In-Context Learning User Simulators for Task-Oriented Dialog Systems</td>
</tr>
<tr class="even">
<td>9:40-9:55AM, 2023/08/07 (PDT)</td>
<td>Piotr Kluska, Florian Scheidegger, A. Cristano I. Malossi and Enrique S. Quintana-Ortí</td>
<td>Paper-3 : Challenges in post-training quantization of Vision Transformers</td>
</tr>
<tr class="odd">
<td>9:55-10:10AM, 2023/08/07 (PDT)</td>
<td>Haotian Ju, Dongyue Li, Aneesh Sharma and Hongyang Zhang</td>
<td>Paper-4 : Generalization in Graph Neural Networks: Improved PAC-Bayesian Bounds on Graph Diffusion</td>
</tr>
<tr class="even">
<td>10:10-10:30AM, 2023/08/07 (PDT)</td>
<td>Coffee Break</td>
<td></td>
</tr>
<tr class="odd">
<td>10:30-11:00AM, 2023/08/07 (PDT)</td>
<td>Shafiq Joty [Salesforce]</td>
<td>Talk 3: NLP Research in the Era of LLMs</td>
</tr>
<tr class="even">
<td>11:00-11:30AM, 2023/08/07 (PDT)</td>
<td>YiKang Shen[IBM]</td>
<td>Talk 4: Modular Large Language Model and Principle-Driven alignment with Minimal Human Supervision</td>
</tr>
<tr class="odd">
<td>11:30-11:40AM, 2023/08/07 (PDT)</td>
<td>Hong Sun, Xue Li, Yinchuan Xu, Youkow Homma, Qi Cao, Min Wu, Jian Jiao and Denis Charles</td>
<td>Paper-5: AutoHint: Automatic Prompt Optimization with Hint Generation</td>
</tr>
<tr class="even">
<td>11:40-11:50AM, 2023/08/07 (PDT)</td>
<td>Zhichao Wang, Mengyu Dai and Keld Lundgaard</td>
<td>Paper-6: Text-to-Video: a Two-stage Framework for Zero-shot Identity-agnostic Talking-head Generation</td>
</tr>
<tr class="odd">
<td>11:50-12:00PM, 2023/08/07 (PDT)</td>
<td>Long Hoang Dang, Thao Minh Le, Tu Minh Phuong and Truyen Tran</td>
<td>Paper-7: Compositional Prompting with Successive Decomposition for Multimodal Language Models</td>
</tr>
<tr class="even">
<td>12:00PM-12:10PM, 2023/08/07 (PDT)</td>
<td>Zhen Guo, Yanwei Wang, Peiqi Wang and Shangdi Yu</td>
<td>Paper-8: Dr.&nbsp;LLaMA: Improving Small Language Models on PubMedQA via Generative Data Augmentation</td>
</tr>
<tr class="odd">
<td>12:10-12:20PM, 2023/08/07 (PDT)</td>
<td>Haopeng Zhang, Xiao Liu and Jiawei Zhang</td>
<td>Paper-9 : Extractive Summarization via ChatGPT for Faithful Summary Generation</td>
</tr>
<tr class="even">
<td>12:20-12:30PM, 2023/08/07 (PDT)</td>
<td>Closing Remarks</td>
<td></td>
</tr>
</tbody>
</table>
</section>
<section id="llm-revolution-implications-from-chatbots-and-tool-use-to-reasoning---ed-chi" class="level2">
<h2 class="anchored" data-anchor-id="llm-revolution-implications-from-chatbots-and-tool-use-to-reasoning---ed-chi">LLM Revolution: Implications from Chatbots and Tool-Use to Reasoning - Ed Chi</h2>
<p>Ed Chi from Google gave this great talk.</p>
<section id="functions-that-deep-neural-network-can-learn" class="level3">
<h3 class="anchored" data-anchor-id="functions-that-deep-neural-network-can-learn">2016 - Functions that Deep Neural Network Can Learn</h3>
<ul>
<li>Pixels –&gt; Lion</li>
<li>Audio –&gt; Audio to text</li>
<li>Text –&gt; Text (translation)</li>
<li>Pixels –&gt; Caption</li>
</ul>
</section>
<section id="chatbots" class="level3">
<h3 class="anchored" data-anchor-id="chatbots">Chatbots</h3>
<ul>
<li>Not just transactional</li>
<li>We want chatbots to be contextual</li>
<li>Personalized assistants for everyone</li>
</ul>
</section>
<section id="lambda-bard-brought-to-you-by-eds-team" class="level3">
<h3 class="anchored" data-anchor-id="lambda-bard-brought-to-you-by-eds-team">Lambda –&gt; Bard (Brought to You by Ed’s Team)</h3>
<ul>
<li>They wanted to publish Lambda in the form of Bard, but there were difficulties</li>
</ul>
</section>
<section id="large-language-models-llm" class="level3">
<h3 class="anchored" data-anchor-id="large-language-models-llm">Large Language Models (LLM)</h3>
<ul>
<li>Large knowledge base</li>
<li>What is a plan to read 20 books a year? Reaches into the LLM to come up with a real plan</li>
<li>Genesis of captions –&gt; not too far to be able to generate text</li>
</ul>
</section>
<section id="programming" class="level3">
<h3 class="anchored" data-anchor-id="programming">Programming</h3>
<ul>
<li>Coding is less about coding, more about data</li>
<li>Data Science (DS) is going to be a bigger part of software development</li>
</ul>
</section>
<section id="retrieval-augmentation-leveraging-external-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="retrieval-augmentation-leveraging-external-knowledge">Retrieval Augmentation: Leveraging External Knowledge</h3>
<ul>
<li>Factuality trigger</li>
<li>Open-book Generative QA</li>
<li>RETRO: Retrieval-augmented generative model</li>
<li>Questions:
<ul>
<li>How big does the LLM need to be?</li>
<li>How big does the external knowledge base need to be?</li>
<li>Fruitful Line of Research</li>
</ul></li>
</ul>
</section>
<section id="multi-modality-output-not-just-text-could-be-images" class="level3">
<h3 class="anchored" data-anchor-id="multi-modality-output-not-just-text-could-be-images">Multi-modality output (not just text, could be images)</h3>
<ul>
<li>Image retrieval</li>
<li>Image input –&gt; Generate captions</li>
</ul>
</section>
<section id="humans-and-llms-with-tools" class="level3">
<h3 class="anchored" data-anchor-id="humans-and-llms-with-tools">Humans and LLMs with Tools</h3>
<ul>
<li>Humans + Search –&gt; Superhuman</li>
<li>LLMS + Tools –&gt; Super LLMS</li>
<li>Humans + Super LLM –&gt; Super super humans??</li>
</ul>
</section>
<section id="future-challenges" class="level3">
<h3 class="anchored" data-anchor-id="future-challenges">Future Challenges</h3>
<ul>
<li>Responsibility and Safety</li>
<li>Factuality, Grounding, and Attribution</li>
<li>Human &lt;-&gt; AI Content Loop and Ecosystem</li>
<li>Personalization and User Memory</li>
</ul>
</section>
<section id="keynote" class="level3">
<h3 class="anchored" data-anchor-id="keynote">Keynote</h3>
<ul>
<li>Ed is going to give the keynote tomorrow</li>
<li>You can interrogate a model for why it made a decision or prediction</li>
<li>Area: Self-critique, self-reflection (next year or so)</li>
<li>3-5 year research topics:
<ul>
<li>Hallucinations / Bias in areas where the LLM has not been trained</li>
<li>Relationship between hallucinations and safety</li>
</ul></li>
</ul>
</section>
</section>
<section id="large-scale-ai-model-research-at-google-pre-training-fine-tuning-and-prompt-based-learning" class="level2">
<h2 class="anchored" data-anchor-id="large-scale-ai-model-research-at-google-pre-training-fine-tuning-and-prompt-based-learning">Large-scale AI Model Research at Google Pre-training, Fine-tuning, and Prompt-based Learning</h2>
<p>Tania Bedrax-Weiss from Google gave this talk.</p>
<section id="mixture-of-experts-models" class="level3">
<h3 class="anchored" data-anchor-id="mixture-of-experts-models">Mixture of Experts Models</h3>
<ul>
<li>How to route the question to the right expert, right experts</li>
</ul>
</section>
<section id="conditional-computation" class="level3">
<h3 class="anchored" data-anchor-id="conditional-computation">Conditional Computation</h3>
<ul>
<li>COLT5 Transformer layer</li>
<li>Scales to longer context</li>
<li>Early exit</li>
<li>Per step confidence thresholds</li>
</ul>
</section>
<section id="multi-modal-work" class="level3">
<h3 class="anchored" data-anchor-id="multi-modal-work">Multi-modal Work</h3>
<ul>
<li>Imagen - diffusion model
<ul>
<li><a href="https://imagen.research.google/">Imagen Research Google</a></li>
</ul></li>
<li>Parti - autoregressive model
<ul>
<li><a href="https://sites.research.google/parti/">Parti Research Google</a></li>
</ul></li>
</ul>
</section>
<section id="imagen-technical-details" class="level3">
<h3 class="anchored" data-anchor-id="imagen-technical-details">Imagen: Technical Details</h3>
<ul>
<li>ViT-VQGAN as image tokenizer
<ul>
<li>What’s an image tokenizer? See: https://keras.io/examples/vision/token_learner/</li>
</ul></li>
<li>Autoregressively generate images in a similar way that LLMs generate text</li>
<li>Can generate text reliably - spell words out unlike other models</li>
</ul>
</section>
<section id="pali" class="level3">
<h3 class="anchored" data-anchor-id="pali">Pali</h3>
<ul>
<li>Image to text</li>
<li>State of the art text captioning model</li>
</ul>
</section>
<section id="spotlight" class="level3">
<h3 class="anchored" data-anchor-id="spotlight">Spotlight</h3>
<ul>
<li>Screenshots / user interfaces - understand what are the actions that a user can perform</li>
<li>Execute commands in the user interface</li>
</ul>
</section>
<section id="play-parametrically-condition-layout-generation-using-guidelines" class="level3">
<h3 class="anchored" data-anchor-id="play-parametrically-condition-layout-generation-using-guidelines">PLay: Parametrically Condition Layout Generation Using Guidelines</h3>
<ul>
<li>Fine-tuning</li>
<li>Prompt Tuning
<ul>
<li>Look at this more</li>
</ul></li>
</ul>
</section>
<section id="how-do-you-handle-ambiguity-in-an-answer" class="level3">
<h3 class="anchored" data-anchor-id="how-do-you-handle-ambiguity-in-an-answer">How do you handle ambiguity in an answer?</h3>
<ul>
<li>LLMs are very eager to give an answer</li>
<li>Types
<ul>
<li>Use multiple prompts to get different types of answers. This is my answer. Can you generate other answers?</li>
<li>Diversity objectives</li>
</ul></li>
</ul>
</section>
</section>
<section id="retrieval-augmented-multimodal-language-modeling" class="level2">
<h2 class="anchored" data-anchor-id="retrieval-augmented-multimodal-language-modeling">Retrieval-Augmented Multimodal Language Modeling</h2>
<p>Paper: <a href="https://arxiv.org/abs/2211.12561">https://arxiv.org/abs/2211.12561</a></p>
<p>Recent multimodal models such as DALL-E and CM3 have achieved remarkable progress in text-to-image and image-to-text generation. However, these models store all learned knowledge (e.g., the appearance of the Eiffel Tower) in the model parameters, requiring increasingly larger models and training data to capture more knowledge. To integrate knowledge in a more scalable and modular way, we propose a retrieval-augmented multimodal model, which enables a base multimodal model (generator) to refer to relevant text and images fetched by a retriever from external memory (e.g., documents on the web). Specifically, for the retriever, we use a pretrained CLIP, and for the generator, we train a CM3 Transformer on the LAION dataset. Our resulting model, named Retrieval-Augmented CM3 (RA-CM3), is the first multimodal model that can retrieve and generate both text and images. We show that RA-CM3 significantly outperforms baseline multimodal models such as DALL-E and CM3 on both image and caption generation tasks (12 FID and 17 CIDEr improvements on MS-COCO), while requiring much less compute for training (&lt;30% of DALL-E). Moreover, we show that RA-CM3 exhibits novel capabilities, such as faithful image generation and multimodal in-context learning (e.g., image generation from demonstrations).</p>
<ul>
<li>Develop a retrieval-augmented multimodal model, a first of it’s kind</li>
<li>The generator uses retrieved items for generation too</li>
<li>Retrieval augmented training - helped a lot</li>
</ul>
</section>
<section id="in-context-learning-user-simulators-for-task-oriented-dialog-systems" class="level2">
<h2 class="anchored" data-anchor-id="in-context-learning-user-simulators-for-task-oriented-dialog-systems">In-Context Learning User Simulators for Task-Oriented Dialog Systems</h2>
<ul>
<li>Code: <a href="https://github.com/telepathylabsai/prompt-based-user-simulator">https://github.com/telepathylabsai/prompt-based-user-simulator</a></li>
<li>Paper: <a href="https://arxiv.org/abs/2306.00774">https://arxiv.org/abs/2306.00774</a></li>
</ul>
<p>This paper presents a novel application of large language models in user simulation for task-oriented dialog systems, specifically focusing on an in-context learning approach. By harnessing the power of these models, the proposed approach generates diverse utterances based on user goals and limited dialog examples. Unlike traditional simulators, this method eliminates the need for labor-intensive rule definition or extensive annotated data, making it more efficient and accessible. Additionally, an error analysis of the interaction between the user simulator and dialog system uncovers common mistakes, providing valuable insights into areas that require improvement. Our implementation is available at this https URL.</p>
<ul>
<li>Rule based systems are still more accurate. However they mainly understand happy paths of a dialog system.</li>
<li>These LLM based approaches can explore unexpected behavior of users</li>
</ul>
</section>
<section id="challenges-in-post-training-quantization-of-vision-transformers" class="level2">
<h2 class="anchored" data-anchor-id="challenges-in-post-training-quantization-of-vision-transformers">Challenges in post-training quantization of Vision Transformers</h2>
<p>Paper: <a href="https://research.ibm.com/publications/challenges-in-post-training-quantization-of-vision-transformers">https://research.ibm.com/publications/challenges-in-post-training-quantization-of-vision-transformers</a></p>
<p>Vision Transformers recently showed outstanding performance in computer vision tasks. However, those models are compute and memory intensive that require accelerators with a large amount of memory like NVIDIA A100 graphic processing unit for training and even for inference. Post-training quantization is an appealing compression method, as it does not require retraining the models and labels to tune the model. In this paper, we look in depth at multiple models in terms of size, architecture, and training procedure and provide guidelines on how to quantize the model to an 8-bit integer, both weights and activations. We perform a well-rounded study on the effects of quantization and sensitivity to the quantization error. Moreover, we show that applying mixed-data precision quantization works well for most vision transformer models achieving up to 90% compression ratio within a 2% top-1 accuracy drop. This kind of quantization offers a trade-off between memory, compute, and performance of the models that are deployable with the current software and hardware stack.</p>
<ul>
<li>There’s a difference between Static vs Dynamic Quantization</li>
<li>Larger models are supposed to be easier to quantize, but not the case here</li>
<li>Signal to noise quantization ratio - SNQR</li>
<li>Partial Quantization: Some models that lost accuracy during dynamic quant, regained during 90% quant</li>
</ul>
</section>
<section id="generalization-in-graph-neural-networks-improved-pac-bayesian-bounds-on-graph-diffusion" class="level2">
<h2 class="anchored" data-anchor-id="generalization-in-graph-neural-networks-improved-pac-bayesian-bounds-on-graph-diffusion">Generalization in Graph Neural Networks: Improved PAC-Bayesian Bounds on Graph Diffusion</h2>
<p>Paper: <a href="https://proceedings.mlr.press/v206/ju23a/ju23a.pdf">https://proceedings.mlr.press/v206/ju23a/ju23a.pdf</a></p>
<p>Graph neural networks are widely used tools for graph prediction tasks. Motivated by their empirical performance, prior works have developed generalization bounds for graph neural networks, which scale with graph structures in terms of the maximum degree. In this paper, we present generalization bounds that instead scale with the largest singular value of the graph neural network’s feature diffusion matrix. These bounds are numerically much smaller than prior bounds for real-world graphs. We also construct a lower bound of the generalization gap that matches our upper bound asymptotically. To achieve these results, we analyze a unified model that includes prior works’ settings (i.e., convolutional and message-passing networks) and new settings (i.e., graph isomorphism networks). Our key idea is to measure the stability of graph neural networks against noise perturbations using Hessians. Empirically, we find that Hessian-based measurements correlate with observed generalization gaps of graph neural networks accurately; Optimizing noise stability properties for fine-tuning pretrained graph neural networks also improves the test performance on several graph-level classification tasks.</p>
<ul>
<li>Overfitting if there’s an imbalance between pretraining data and finetuning data size</li>
<li>Generalization gap
<ul>
<li>Not just cross validation loss</li>
<li>More detailed understanding - what networks are causing the overfitting</li>
<li>Generalization gap - measures the gap between training/test losses</li>
</ul></li>
</ul>
</section>
<section id="nlp-research-in-the-era-of-llms---unleashing-the-potential-of-llms-through-task-and-data-engineering" class="level2">
<h2 class="anchored" data-anchor-id="nlp-research-in-the-era-of-llms---unleashing-the-potential-of-llms-through-task-and-data-engineering">NLP Research in the Era of LLMs - Unleashing the Potential of LLMs through Task and Data Engineering</h2>
<p>Shafiq Joty gave this talk: https://raihanjoty.github.io/</p>
<section id="background-data-engineering" class="level3">
<h3 class="anchored" data-anchor-id="background-data-engineering">Background: Data Engineering</h3>
<ul>
<li>Hold the code fixed and invite research to improve the data (Andrew Ng)</li>
</ul>
</section>
<section id="background-rise-of-task-engineering" class="level3">
<h3 class="anchored" data-anchor-id="background-rise-of-task-engineering">Background: Rise of Task Engineering</h3>
<ul>
<li>Multi-task models with task prompts</li>
<li>Trained with many different instructions</li>
<li>Mentions prompt tuning again (soft tokens) ???</li>
</ul>
</section>
<section id="background-task-engineering" class="level3">
<h3 class="anchored" data-anchor-id="background-task-engineering">Background: Task Engineering</h3>
</section>
<section id="llm-lifecycle" class="level3">
<h3 class="anchored" data-anchor-id="llm-lifecycle">LLM Lifecycle</h3>
</section>
<section id="xgen-llm-june-2023" class="level3">
<h3 class="anchored" data-anchor-id="xgen-llm-june-2023"><strong>XGen LLM</strong>: June 2023</h3>
<ul>
<li><a href="https://github.com/salesforce/xgen">GitHub Link</a></li>
<li>Goal is to outperform LLaMA1</li>
</ul>
</section>
<section id="instructed-tuned" class="level3">
<h3 class="anchored" data-anchor-id="instructed-tuned">Instructed tuned</h3>
<ul>
<li>Instructional data: WizardLM. <a href="https://arxiv.org/abs/2304.12244">Paper Link</a></li>
</ul>
</section>
<section id="what-does-wizardlm-do-exactly-in-advancing-the-sota" class="level3">
<h3 class="anchored" data-anchor-id="what-does-wizardlm-do-exactly-in-advancing-the-sota">What does WizardLM do exactly in advancing the SoTA?</h3>
<ul>
<li><p><a href="https://arxiv.org/abs/2304.12244">Details on WizardLM</a></p></li>
<li><p>Training large language models (LLMs) with open-domain instruction following data brings colossal success. However, manually creating such instruction data is very time-consuming and labor-intensive. Moreover, humans may struggle to produce high-complexity instructions. In this paper, we show an avenue for creating large amounts of instruction data with varying levels of complexity using LLM instead of humans. Starting with an initial set of instructions, we use our proposed Evol-Instruct to rewrite them step by step into more complex instructions. Then, we mix all generated instruction data to fine-tune LLaMA. We call the resulting model WizardLM. Human evaluations on a complexity-balanced test bed and Vicuna’s testset show that instructions from Evol-Instruct are superior to human-created ones. By analyzing the human evaluation results of the high complexity part, we demonstrate that outputs from our WizardLM are preferred to outputs from OpenAI ChatGPT. In GPT-4 automatic evaluation, WizardLM achieves more than 90% capacity of ChatGPT on 17 out of 29 skills. Even though WizardLM still lags behind ChatGPT in some aspects, our findings suggest that fine-tuning with AI-evolved instructions is a promising direction for enhancing LLMs. Our code and data are public at this https URL</p></li>
<li><p><strong>Verify and Edit CoT</strong> - Self-consistency</p></li>
<li><p>Knowledge adapting framework</p></li>
<li><p>Language diversity prompting</p></li>
<li><p>Standard vs Personalized Distillation from LLMs</p></li>
</ul>
</section>
</section>
<section id="modular-large-language-model-and-principle-driven-alignment-with-minimal-human-supervision" class="level2">
<h2 class="anchored" data-anchor-id="modular-large-language-model-and-principle-driven-alignment-with-minimal-human-supervision">Modular Large Language Model and Principle-Driven alignment with Minimal Human Supervision</h2>
<p>Yikang Shen from IBM gave this talk.</p>
<section id="foundation-model-types" class="level3">
<h3 class="anchored" data-anchor-id="foundation-model-types">Foundation model types</h3>
<section id="challenges-of-llm" class="level4">
<h4 class="anchored" data-anchor-id="challenges-of-llm">Challenges of LLM</h4>
<ul>
<li><strong>Efficiency</strong></li>
<li><strong>Extendability</strong></li>
<li><strong>Flexibility</strong></li>
</ul>
</section>
</section>
<section id="moduleformer---learning-modular-llm-from-uncurated-data" class="level3">
<h3 class="anchored" data-anchor-id="moduleformer---learning-modular-llm-from-uncurated-data">ModuleFormer - Learning Modular LLM from Uncurated Data</h3>
<ul>
<li>Previous modular models were based on already labeled data</li>
</ul>
</section>
<section id="mod-squad---designing-a-mixture-of-experts-as-modular-multi-task-learners" class="level3">
<h3 class="anchored" data-anchor-id="mod-squad---designing-a-mixture-of-experts-as-modular-multi-task-learners">Mod-Squad - designing a mixture of experts as modular multi-task learners</h3>
<ul>
<li>Can select the right experts for a task</li>
<li>Experts can share knowledge!?</li>
</ul>
</section>
<section id="dromedary---efficiently-teach-ai-to-follow-a-given-set-of-principles" class="level3">
<h3 class="anchored" data-anchor-id="dromedary---efficiently-teach-ai-to-follow-a-given-set-of-principles">Dromedary - efficiently teach AI to follow a given set of principles</h3>
<ul>
<li><a href="https://github.com/IBM/Dromedary">GitHub Link for Dromedary</a></li>
<li><strong>Principle Engraving</strong> -</li>
<li><strong>Verbose Cloning</strong> - refining the model to produce in-depth and detailed response</li>
<li>300 lines of annotations</li>
<li>Kind of similar to Evol-Instruct/WizardLM to produce annotations to fine-tune a model</li>
</ul>
</section>
</section>
<section id="autohint-automatic-prompt-optimization-with-hint-generation" class="level2">
<h2 class="anchored" data-anchor-id="autohint-automatic-prompt-optimization-with-hint-generation">AutoHint: Automatic Prompt Optimization with Hint Generation</h2>
<p>Paper: <a href="https://arxiv.org/pdf/2307.07415.pdf">https://arxiv.org/pdf/2307.07415.pdf</a></p>
<p>This paper presents AutoHint, a novel framework for automatic prompt engineering and optimization for Large Language Models (LLM). While LLMs have demonstrated remarkable ability in achieving high-quality annotation in various tasks, the key to applying this ability to specific tasks lies in developing high-quality prompts. Thus we propose a framework to inherit the merits of both in-context learning and zero-shot learning by incorporating enriched instructions derived from input-output demonstrations to optimize original prompt. We refer to the enrichment as the Hint and propose a framework to automatically generate the hint from labeled data. More concretely, starting from an initial prompt, our method first instructs a LLM to deduce new hints for selected samples from incorrect predictions, and then summarizes from per-sample hints and adds the results back to the initial prompt to form a new, enriched instruction. The proposed method is evaluated on the BIG-Bench Instruction Induction dataset for both zero-shot and few-short prompts, where experiments demonstrate our method is able to significantly boost accuracy for multiple tasks</p>
</section>
</section>
<section id="causal-inference-workshop-causal-inference-and-machine-learning-in-practice" class="level1">
<h1>Causal Inference Workshop: Causal Inference and Machine Learning in Practice</h1>
<p>The website for this workshop is here: https://causal-machine-learning.github.io/kdd2023-workshop/</p>
<section id="cog-creative-optimality-gap-for-video-advertising" class="level2">
<h2 class="anchored" data-anchor-id="cog-creative-optimality-gap-for-video-advertising">COG: Creative Optimality Gap for Video Advertising</h2>
<p>Raif Rustamov from Amazon gave this invited talk.</p>
<section id="video-ads-motivation" class="level3">
<h3 class="anchored" data-anchor-id="video-ads-motivation">Video ads motivation</h3>
<ul>
<li>How does a particular video affect shopper experience?</li>
</ul>
</section>
<section id="goal" class="level3">
<h3 class="anchored" data-anchor-id="goal">Goal</h3>
<ul>
<li>Driven by explicit hypotheses tied to quantifying value of the video</li>
</ul>
</section>
<section id="approach---creative-optimality-gap-cog" class="level3">
<h3 class="anchored" data-anchor-id="approach---creative-optimality-gap-cog">Approach - Creative Optimality Gap (COG)</h3>
<ul>
<li>If we were to replace the video of class 0 to video of class 1, what would be the improvement in the outcome for the ad?</li>
<li><strong>Uplift or Heterogenous Treatment Effect modeling</strong></li>
</ul>
</section>
<section id="benefits" class="level3">
<h3 class="anchored" data-anchor-id="benefits">Benefits</h3>
<ul>
<li>Differentiated at the level of video features vs.&nbsp;global ATE
<ul>
<li><strong>ATE</strong> - average treatment effect - videos are good</li>
<li><strong>ITE</strong> - individual treatment effect - noisy</li>
<li><strong>HTE</strong> - heterogeneous treatment effect - in the middle, denoising</li>
</ul></li>
<li>Handle cold start ads</li>
</ul>
</section>
<section id="preliminaries" class="level3">
<h3 class="anchored" data-anchor-id="preliminaries">Preliminaries</h3>
<ul>
<li><strong>Treatment indicator (T)</strong></li>
<li><strong>Video features</strong>
<ul>
<li>Computed using e.g.&nbsp;video embeddings</li>
<li>Can contain non</li>
</ul></li>
<li><strong>Ad features</strong>
<ul>
<li>Contains non-video related features like price, product category</li>
<li>Used as confounder/matching variables</li>
</ul></li>
<li><strong>Outcome = Y</strong></li>
</ul>
</section>
<section id="cog-modeling" class="level3">
<h3 class="anchored" data-anchor-id="cog-modeling">COG Modeling</h3>
<ul>
<li><strong>Step 1</strong></li>
<li><strong>Step 2</strong></li>
<li><strong>Step 3</strong> -
<ul>
<li>Used interpretable models in this step, why?</li>
</ul></li>
</ul>
</section>
<section id="cog-modeling-guardrails" class="level3">
<h3 class="anchored" data-anchor-id="cog-modeling-guardrails">COG Modeling: Guardrails</h3>
<section id="bias" class="level4">
<h4 class="anchored" data-anchor-id="bias">Bias</h4>
<ul>
<li>Bias comes from G model, comes from regularization or not enough capacity in the model</li>
<li>Bias is not constant but varies in the Z space</li>
<li>Double ML?</li>
</ul>
</section>
<section id="uncertaintyvariance" class="level4">
<h4 class="anchored" data-anchor-id="uncertaintyvariance">Uncertainty/Variance</h4>
</section>
</section>
<section id="solution" class="level3">
<h3 class="anchored" data-anchor-id="solution">Solution</h3>
<ul>
<li>Conservative COG = lower bound of confidence interval</li>
</ul>
</section>
</section>
<section id="the-value-of-last-mile-delivery-in-online-retail" class="level2">
<h2 class="anchored" data-anchor-id="the-value-of-last-mile-delivery-in-online-retail">The Value of Last-Mile Delivery in Online Retail</h2>
<p>Ruomeng Cui from Emory gave this talk.</p>
<section id="cainiao---chinese-company" class="level3">
<h3 class="anchored" data-anchor-id="cainiao---chinese-company">Cainiao - Chinese Company</h3>
<ul>
<li>Alibaba’s logistics platform</li>
<li>Largest logistics platform in China</li>
<li>If there are differences in preferences, there is an opportunity for optimization</li>
</ul>
</section>
<section id="use-causal-ml-estimating-ite" class="level3">
<h3 class="anchored" data-anchor-id="use-causal-ml-estimating-ite">Use Causal ML: Estimating ITE</h3>
<ul>
<li><strong>Data:</strong> Post-treatment data Q4 2021</li>
</ul>
</section>
<section id="models" class="level3">
<h3 class="anchored" data-anchor-id="models">Models</h3>
<ul>
<li>Partial Linear DML</li>
<li>First-difference DML</li>
<li>Others</li>
</ul>
</section>
<section id="account-for-knapsnack" class="level3">
<h3 class="anchored" data-anchor-id="account-for-knapsnack">Account for Knapsnack</h3>
<ul>
<li>Tau does not capture economic efficiency</li>
<li>Need to account for how much capacity a customer is using. A customer going from 0 to 1 unit sales is much more valuable than a customer going from 19 to 20 units sold because the latter is not using much capacity.</li>
</ul>
</section>
</section>
<section id="leveraging-causal-uplift-modeling-for-budget-constrained-benefits-allocation" class="level2">
<h2 class="anchored" data-anchor-id="leveraging-causal-uplift-modeling-for-budget-constrained-benefits-allocation">Leveraging Causal Uplift Modeling for Budget Constrained Benefits Allocation</h2>
<p>Dmitri Goldenberg from Booking.com gave this talk. It was a very good talk with virtually no words on his slides.</p>
</section>
<section id="ensemble-method-for-estimating-individualized-treatment-effects-kevin-wu-han-han-wu-stanford" class="level2">
<h2 class="anchored" data-anchor-id="ensemble-method-for-estimating-individualized-treatment-effects-kevin-wu-han-han-wu-stanford">Ensemble Method for Estimating Individualized Treatment Effects Kevin Wu Han, Han Wu (Stanford)</h2>
<ul>
<li>Paper: <a href="https://arxiv.org/abs/2202.12445">https://arxiv.org/abs/2202.12445</a></li>
<li>Ensemble methods almost always perform a validation-set model selection based method!</li>
</ul>
</section>
<section id="a-scalable-and-debiased-approach-to-dynamic-pricing-with-causal-machine-learning-and-optimization" class="level2">
<h2 class="anchored" data-anchor-id="a-scalable-and-debiased-approach-to-dynamic-pricing-with-causal-machine-learning-and-optimization">A Scalable and Debiased Approach to Dynamic Pricing with Causal Machine Learning and Optimization</h2>
<ul>
<li>Heard the term double machine learning for the second time which caused me to do to learn what it is.</li>
</ul>
</section>
<section id="an-ipw-based-unbiased-ranking-metric-in-two-sided-markets-keisho-oh-naoki-nishimura-recruit-co-minje-sung-ken-kobayashi-kazuhide-nakata-tokyo-institute-of-technology" class="level2">
<h2 class="anchored" data-anchor-id="an-ipw-based-unbiased-ranking-metric-in-two-sided-markets-keisho-oh-naoki-nishimura-recruit-co-minje-sung-ken-kobayashi-kazuhide-nakata-tokyo-institute-of-technology">An IPW-based Unbiased Ranking Metric in Two-sided Markets Keisho Oh, Naoki Nishimura (Recruit Co), Minje Sung, Ken Kobayashi, Kazuhide Nakata (Tokyo Institute of Technology)</h2>
<p>In two-sided markets like job-matching or dating-apps, need to use an unbiased ranking metric which they propose in their paper.</p>
</section>
<section id="unit-selection-based-on-counterfactual-logic" class="level2">
<h2 class="anchored" data-anchor-id="unit-selection-based-on-counterfactual-logic">Unit Selection Based on Counterfactual Logic</h2>
<p>This was an invited talk by Ang Li about this paper: <a href="https://ftp.cs.ucla.edu/pub/stat_ser/r488.pdf">https://ftp.cs.ucla.edu/pub/stat_ser/r488.pdf</a>.</p>
<p>My main takeaway was dividing a population into a typical A/B test where one group receives a treatment and the other group is the control is too simplistic. There are actually 4 groups we should be concerned about:</p>
<ul>
<li>Complier: Individuals who would respond positively if treated and negatively if not treated.</li>
<li>Always-taker: Individuals who always respond positively no matter whether they are treated or not.</li>
<li>Never-taker: Individuals who always respond negatively no matter whether they are treated or not.</li>
<li>Defier: Individuals who would respond negatively if treated and positively if not treated.</li>
</ul>
<p>Along with a benefit vector that assigns a positive or negative value to each of these 4 groups, we can use this to select the best treatment for each individual.</p>
<p>Ang also used the Pfizer Covid vaccine as a motivating example for why these 4 groups should be accounted for.</p>
</section>
<section id="towards-automating-the-causal-machine-learning-pipeline-vasilis-syrgkanis-stanfordeconml" class="level2">
<h2 class="anchored" data-anchor-id="towards-automating-the-causal-machine-learning-pipeline-vasilis-syrgkanis-stanfordeconml">Towards Automating the Causal Machine Learning Pipeline Vasilis Syrgkanis (Stanford/EconML)</h2>
<ul>
<li>A large variety of causal estimands that arise in complex static and longitudinal data analysis can be automatically de-biased when regularized machine learning algorithms are used to estimate nuisance models</li>
<li>Estimation of the de-biasing term itself can be performed with generic machine learning</li>
<li>Experimental results using neural nets and random forests for automated de-biasing provide examples superior performance to plug-in approaches and to prior automatically debasing approaches based solely on linear models</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Conference</category>
  <category>KDD</category>
  <category>LLM</category>
  <category>Causal Inference</category>
  <guid>https://lawwu.github.io/blog.html/posts/2023-08-07-kdd2023-day1/</guid>
  <pubDate>Mon, 07 Aug 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
