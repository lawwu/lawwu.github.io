---
title: Starting to Use Claude Code
author: Lawrence Wu
date: '2025-07-18'
categories: [ai]
---

I had tried Claude Code briefly when it first came out [4 months ago](https://www.youtube.com/watch?v=AJpK3YTTKZ4&ab_channel=Anthropic). However I wasn't that impressed. Lately though, I've seen more and more people turn to Claude Code. The step change was the [release of Claude 4 Sonnet and Opus](https://www.anthropic.com/news/claude-4) on May 22, 2025. I think something was unlocked where given a powerful enough reasoning model (Claude 4) and access to generic tools, Claude Code is an amazing tool.

Some of the things I read/watched that motivated me to try it again:

- Watching Claude Code creator's, Boris Chemy's talk about the [evolution of agentic coding](https://www.youtube.com/watch?v=Lue8K2jqfKk&ab_channel=AIEngineer)
{{< video https://www.youtube.com/watch?v=Lue8K2jqfKk&ab_channel=AIEngineer >}}
- seeing Eric J Ma's post about it where it created a receipt scanner in [1 hour and 8 minutes](https://ericmjl.github.io/blog/2025/7/1/one-hour-and-eight-minutes-building-a-receipt-scanner-with-the-weirdest-tech-stack-imaginable/)
- [Armin Ronacher's](https://www.youtube.com/@ArminRonacher) YouTube Tutorials: [here](https://www.youtube.com/watch?v=nfOVgz_omlU&ab_channel=ArminRonacher) and [here](https://www.youtube.com/watch?v=Y4_YYrIKLac&t=2184s&ab_channel=ArminRonacher). The second one I only watched the first 30 minutes.
{{< video https://www.youtube.com/watch?v=nfOVgz_omlU&ab_channel=ArminRonacher >}}
{{< video https://www.youtube.com/watch?v=Y4_YYrIKLac&t=2184s&ab_channel=ArminRonacher >}}

## Set Up

At work, we use VertexAI. Google has signed an agreement with Anthropic to license Claude models that you can then call via VertexAI. The [instructions](https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai) are easy to follow. In my `~/.zshrc`, I just have:

```
export CLAUDE_CODE_USE_VERTEX=1
export CLOUD_ML_REGION=YOUR_GCP_REGION
export ANTHROPIC_VERTEX_PROJECT_ID=YOUR_GCP_PROJECT_ID
export ANTHROPIC_MODEL='claude-sonnet-4@20250514'
```

You then authenticate with Google Cloud:
```bash
gcloud auth login
```

Install Claude Code:
```bash
npm install -g @anthropic-ai/claude-code
```

Then in your project directory or a new directory, start Claude Code:
```bash
claude
```

I eventually started running:
```bash
claude --dangerously-skip-permissions
```

## First Experiments

While I was on PTO during the July 4th week, I used Claude Code to build an application I've always wanted internally at my company. I had wanted to make a website using [FastHTML](https://github.com/AnswerDotAI/fasthtml) since I had heard it was much more flexible than Streamlit/Gradio apps. So I finally got around to it thanks to Claude Code. It also figured out you can combine a FastHTML and a FastAPI service because they are both Starlette applications.

The second thing I built was an MCP Server using [FastMCP](https://github.com/jlowin/fastmcp) that implemented [bearer token authentication](https://gofastmcp.com/servers/auth/bearer).

Both of the above tasks I estimate would've taken me 2-3 days to do but it take Claude Code <2 hours with ~5 prompts to implement.

## Some best practices I've arrived at
- Right now I just run Claude Code in a terminal. Sometimes I run it in an IDE (VS Code, Windsurf) where the UI is a little different.
- `claude --dangerously-skip-permissions` so Claude doesn't have to ask for permissions.
- Run the slash command `/init` to create CLAUDE.md
- add links to documentation in your prmopts so Claude Code can use it's fetch tool to learn how to use APIs. Many services/projects have [llms.txt](https://llmstxt.org/) that are a good starting point. For example when working with FastHTML, I passed it [this](https://www.fastht.ml/docs/llms-ctx.txt).
- ask Claude to make plans and write those plans in a markdown file in `docs/` with a date, e.g. `docs/plan_20250715_implement_feature_a.md` with 'ultrathink' which increases the thinking budget to the max
- Then you can ask Claude Code to implement the plan
- Make commits after each successful run of the agent
- Though today I attended a Claude Code Camp hosted by Every. [I learned a ton](https://lawwu.github.io/posts/2025-07-18-claude-code-camp/) about aliases, slash commands, how you can trigger subagents in Claude Code and how to think about the 4 step loop of development: planning, delegating, assessing and codifying.

## Claude Code Utilities

- Monitor your usage and cost: <https://github.com/chiphuyen/sniffly>
- [Vibe Kanban](https://www.vibekanban.com/) - tried it but didn't really like it

## Other Links
- <https://www.anthropic.com/engineering/claude-code-best-practices>
- <https://github.com/hesreallyhim/awesome-claude-code>
- <https://www.pulsemcp.com/posts/how-to-use-claude-code-to-wield-coding-agent-clusters>
- {{< video https://www.youtube.com/watch?v=Lh_X32t9_po&ab_channel=Every> >}}
- Someone pointed me to this person's tutorials which look decent but haven't had a chance to watch: <https://www.youtube.com/@indydevdan>
- 2025-07-18 - Anthropic cuts usage limits on max plans: Anthropic tightens usage limits for Claude Code â€” without telling users | TechCrunch - <https://techcrunch.com/2025/07/17/anthropic-tightens-usage-limits-for-claude-code-without-telling-users/>
